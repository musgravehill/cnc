// API callback
related_results_labels_thumbs({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-794788004739538112"},"updated":{"$t":"2019-04-15T11:47:52.329+03:00"},"category":[{"term":"ардуино"},{"term":"подключение"},{"term":"микросхема"},{"term":"программатор"},{"term":"энергопотребление"},{"term":"проект"},{"term":"энкодер вращения"},{"term":"lcd"},{"term":"spi"},{"term":"arduino pro mini"},{"term":"atmega328p"},{"term":"tiny"},{"term":"дребезг контактов"},{"term":"загрузчик"},{"term":"прерывания"},{"term":"digispark"},{"term":"midi"},{"term":"пьезоизлучатель"},{"term":"Светодиодная матрица"},{"term":"блютуз"},{"term":"датчик"},{"term":"фоторезистор"}],"title":{"type":"text","$t":"Про Ардуино и не только"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/-\/%D0%BF%D0%BE%D0%B4%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5?alt=json-in-script\u0026max-results=6"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/search\/label\/%D0%BF%D0%BE%D0%B4%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"next","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/-\/%D0%BF%D0%BE%D0%B4%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5\/-\/%D0%BF%D0%BE%D0%B4%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5?alt=json-in-script\u0026start-index=7\u0026max-results=6"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"12"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"6"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-5767065482792080803"},"published":{"$t":"2019-02-03T11:44:00.001+03:00"},"updated":{"$t":"2019-03-09T16:00:41.448+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"atmega328p"},{"scheme":"http://www.blogger.com/atom/ns#","term":"микросхема"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"}],"title":{"type":"text","$t":"Обвязка ATmega328P"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003EТиповая схема включения любого микроконтроллера содержит ряд компонентов и цепей, обеспечивающих его нормальное функционирование. Совокупность этих компонентов называется обвязкой микроконтроллера. Данная публикация посвящена функциям обвязки и ее особенностям в случае использования AVR микроконтроллера ATmega328P.\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EРаспиновка ATmega328P\u003C\/h2\u003E\u003Cdiv\u003EПрежде чем приступить к рассмотрению обвязки ATmega328P считаю нужным привести описание его выводов. Когда мы работаем с платами Ардуино, то не задумываемся о соответствии физических выводов микроконтроллера используемым в IDE Arduino обозначениям. Когда же речь идет об отдельном микроконтроллере, то под рукой всегда нужно иметь его распиновку. Поэтому советую сохранить ее:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-MSVQVjU5fwE\/XFVQqeDeHnI\/AAAAAAAAAsQ\/CPqiVZvpvVUfqNWR4TikBcGPnpKicqVzgCK4BGAYYCw\/s1600\/atmega328_pinout.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"ATmega328P pinout\" border=\"0\" src=\"https:\/\/3.bp.blogspot.com\/-MSVQVjU5fwE\/XFVQqeDeHnI\/AAAAAAAAAsQ\/CPqiVZvpvVUfqNWR4TikBcGPnpKicqVzgCK4BGAYYCw\/s1600\/atmega328_pinout.png\" title=\"\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EЕсть еще один интересный прием - это распечатать номера выводов и наклеить получившуюся шпаргалку на микроконтроллер, как показано на следующем фото. Мелковато, но вполне читабельно. PDF файл для печати можно скачать по \u003Ca href=\"http:\/\/clc.to\/ATmega328P_Pinout_Print\" target=\"_blank\"\u003Eэтой\u003C\/a\u003E ссылке.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-KBnhBjngIQ8\/XFanTqKrtqI\/AAAAAAAAAtA\/vSwUweAhMQIY2CeTawWqnIwuggiLvNZzwCK4BGAYYCw\/s1600\/ATmega328_pinout_printed.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"ATmega328P наклейка с обозначениями выводов\" border=\"0\" height=\"320\" src=\"https:\/\/2.bp.blogspot.com\/-KBnhBjngIQ8\/XFanTqKrtqI\/AAAAAAAAAtA\/vSwUweAhMQIY2CeTawWqnIwuggiLvNZzwCK4BGAYYCw\/s320\/ATmega328_pinout_printed.png\" title=\"\" width=\"236\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003EПодключение питания\u003C\/h2\u003E\u003Cdiv\u003EНапряжение питания подается на выводы микроконтроллера\u0026nbsp;VCC\u0026nbsp;и\u0026nbsp;GND\u0026nbsp;и не должно превышать значение, указанное в технической документации. Для ATmega328P верхняя граница рекомендуемого напряжения питания составляет 5,5В, абсолютный максимум - 6В, продолжительная работа при таком напряжении может вывести микроконтроллер из строя.\u003Cbr \/\u003E\u003Cbr \/\u003EДля подавления высокочастотных помех в цепи питания рекомендуется устанавливать керамический конденсатор емкостью 0.1мкФ между VCC и GND. Причем располагаться он должен как можно ближе к питающим выводам микроконтроллера для минимизации паразитной индуктивности и сопротивления подводящих проводников.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EATmega328P имеет двойное питание: выводы VCC и GND (выводы 7 и 8) используются для питания цифровых схем микроконтроллера; AVCC и GND (выводы 20 и 22) - для питания аналого-цифрового преобразователя. Даже если вы не собираетесь использовать АЦП, к нему должно быть подведено питание: соедините выводы VCC с AVCC, а цифровую землю с аналоговой. Если же вы планируете использовать АЦП, то в цепь питания следует добавить фильтр для уменьшения помех. Так в даташите рекомендуется соединить AVCC c VCC через индуктивность 10мкГн и с GND через емкость 0.1мкФ. Однако данная рекомендация не выполняется даже в платах Ардуино и вывод AVCC на них просто соединен с VCC.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-EVz5CJYJyWo\/XE24MtP_pQI\/AAAAAAAAArM\/wFFcrsP3URUjKSNjssgGeCoI-uolzVDKwCK4BGAYYCw\/s1600\/ATmega328p_powerup.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"Подключение питания к ATmega328P\" border=\"0\" height=\"400\" src=\"https:\/\/1.bp.blogspot.com\/-EVz5CJYJyWo\/XE24MtP_pQI\/AAAAAAAAArM\/wFFcrsP3URUjKSNjssgGeCoI-uolzVDKwCK4BGAYYCw\/s400\/ATmega328p_powerup.png\" title=\"\" width=\"366\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EРекомендуемая схема подключения питания ATmega328P\u003Cbr \/\u003Eпри использовании встроенного АЦП\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EВывод Reset и кнопка сброса\u003C\/h2\u003E\u003C\/div\u003E\u003Cdiv\u003EВывод Reset используется для генерации сигнала сброса микроконтроллера. Во время сброса все регистры ввода-вывода принимают свои начальные значения и выполняется команда, расположенная в векторе сброса (по нулевому адресу). Как правило, это переход на адрес начала программы. Но, если пользовательская программа не использует прерывания, то она может располагаться сразу с нулевого адреса.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Ch3 style=\"text-align: left;\"\u003EСхема начального сброса\u003C\/h3\u003E\u003C\/div\u003E\u003Cdiv\u003EОбвязка для предыдущих моделей микроконтроллеров обязательно включала в себя схему начального сброса, состоящую из резистора и конденсатора, которая обеспечивала постепенное нарастание сигнала на входе Reset при включении питания. Таким образом осуществлялся начальный сброс микроконтроллера. Сейчас же схема начального сброса (Power-on-Reset) присутствует, пожалуй, в каждом современном микроконтроллере. Внешняя цепь может потребоваться при наличии особых требований к длительности импульса сброса (в случае медленного нарастания напряжения питания).\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-00nFRO8QhfI\/XFNJc-OBZQI\/AAAAAAAAArw\/ifDEJlYo_D0_wFpave5b8OX9x6e9Szo6gCK4BGAYYCw\/s1600\/PowerOnReset.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"Схема начального сброса Power-On Reset\" border=\"0\" src=\"https:\/\/2.bp.blogspot.com\/-00nFRO8QhfI\/XFNJc-OBZQI\/AAAAAAAAArw\/ifDEJlYo_D0_wFpave5b8OX9x6e9Szo6gCK4BGAYYCw\/s1600\/PowerOnReset.png\" title=\"\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EСхема начального сброса микроконтроллера\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003EНоминалы резистора и конденсатора могут отличаться от приведенных на схеме значений и зависят от требуемой длительности импульса сброса.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ch3 style=\"text-align: left;\"\u003EОбвязка Reset и защита от непреднамеренного сброса\u003C\/h3\u003EЕще один момент, требующий внимания - это стабилизация сигнала высокого уровня на входе Reset с целью предотвращения непреднамеренного сброса микроконтроллера. В публикации о \u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/02\/pullupresistors.html\" target=\"_blank\"\u003Eподтягивающих резисторах\u003C\/a\u003E я уже рассказывал о проблемах, возникающих, когда цифровой вход не подсоединен ни к питанию, ни к земле: электромагнитные наводки становятся причиной изменения уровня сигнала на этом входе. При его опросе микроконтроллер будет случайным образом фиксировать то высокий, то низкий уровень сигнала. В случае со входом Reset это приведет к непреднамеренному сбросу. Данная проблема решается добавлением в схему подтягивающего резистора, который гарантирует сигнал нужного уровня на входе Reset (в случае с AVR - высокого уровня).\u003Cbr \/\u003E\u003Cbr \/\u003EВостребованность подтягивающих резисторов как для входа Reset, так и для обычных линий ввода-вывода, привела к добавлению их в микроконтроллеры. В ATmega328P имеется собственный подтягивающий резистор на входе Reset номиналом 30-60кОм (конкретное значение из указанного диапазона устанавливается на заводе-изготовителе при калибровке). И тут часто возникает вопрос: нужен ли внешний подтягивающий резистор на входе Reset или можно обойтись внутренним. Всё зависит от конкретной ситуации и условий, в которых будет работать микроконтроллер: для любительских, \"бытовых\" проектов, возможно, будет достаточно встроенного резистора; для устройств, предназначенных для работы в промышленности, в неблагоприятных условиях номинал встроенного резистора может оказаться недостаточен. Это, что называется, слабая подтяжка, в таких случаях цифровой вход подтягивают внешним резистором номиналом в несколько кОм.\u003Cbr \/\u003E\u003Cbr \/\u003EЗачастую одного только подтягивающего резистора оказывается недостаточно и для дополнительной защиты от шума в схему добавляется конденсатор. Вход Reset AVR микроконтроллеров имеет собственный фильтр нижних частот. Внешний конденсатор, установленный между выводом Reset и землей, является дополнительной защитой. Однако, его нельзя добавлять в схему, если предполагается внутрисхемное программирование с помощью PDI или\u0026nbsp;DebugWIRE.\u003Cbr \/\u003E\u003Cbr \/\u003EВ отличие от выводов общего назначения, имеющих защитные диоды и к земле, и к питанию, для входа Reset предусмотрен единственный диод - на землю. Это объясняется тем, что Reset используется для высоковольтного программирования, когда на него подается сигнал 12В. Поэтому если микроконтроллер должен работать в условиях помех от электростатических разрядов (в англоязычной технической документации используется термин ESD - Electrostatic Discharge) и если не планируется использовать высоковольтный программатор, рекомендуется добавить в схему внешний диод между выводом Reset и линией питания.\u003Cbr \/\u003E\u003Cbr \/\u003EС учетом всего сказанного рекомендуемая схема обвязки вывода Reset выглядит следующим образом:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-e-2nvQ_ugBQ\/XFXBA6VdW6I\/AAAAAAAAAso\/U4Uq3gXJy6wDkVIthSNSEwO8wysi-czUQCK4BGAYYCw\/s1600\/ResetProtection.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"\" border=\"0\" src=\"https:\/\/4.bp.blogspot.com\/-e-2nvQ_ugBQ\/XFXBA6VdW6I\/AAAAAAAAAso\/U4Uq3gXJy6wDkVIthSNSEwO8wysi-czUQCK4BGAYYCw\/s1600\/ResetProtection.png\" title=\"\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EОбвязка вывода Reset для защиты от помех\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cbr \/\u003EНу и в конце концов можно обойтись совсем без внешних компонентов, если просто соединить Reset с линией питания. Правда в этом случае вы уже не сможете добавить кнопку сброса и потеряете возможность внутрисхемного программирования.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ch3 style=\"text-align: left;\"\u003EКнопка сброса\u003C\/h3\u003EЕсли для защиты от случайного сброса микроконтроллера вход Reset подтягивается к питанию (встроенным резистором или внешним для более сильной подтяжки), то для сброса при нажатии на кнопку он должен замыкаться на землю. Нет ничего проще - добавляем кнопку между входом Reset и землей. Если обвязка вывода Reset содержит конденсатор как в вышеприведенной схеме, то для предотвращения его закорачивания через кнопку (что может привести к возникновению помех) разработчики из Microchip рекомендуют добавлять в схему резистор порядка 330Ом:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-aLNIkUmPeZA\/XFXmfypiXKI\/AAAAAAAAAs0\/XHpmfzJozW4ybJbbcVgOb7YHVMwix84OQCK4BGAYYCw\/s1600\/ResetButton.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"\" border=\"0\" src=\"https:\/\/1.bp.blogspot.com\/-aLNIkUmPeZA\/XFXmfypiXKI\/AAAAAAAAAs0\/XHpmfzJozW4ybJbbcVgOb7YHVMwix84OQCK4BGAYYCw\/s1600\/ResetButton.png\" title=\"\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПодключение кнопки сброса к микроконтроллеру\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EПодключение резонатора\u003C\/h2\u003EКварцевый или керамический резонатор обеспечивают работу встроенного тактового генератора. Резонатор подключается к выводам XTAL1, XTAL2 микроконтроллера. Для его стабильной работы в схему добавляются керамические конденсаторы, номинал которых подбирается в соответствии с рекомендациями производителя резонатора или микроконтроллера. Так в даташите на ATmega328P для резонаторов на 400кГц и выше рекомендуется использовать конденсаторы номиналом 12..22пФ:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-LbQmSLcTaYg\/XFVmBHvrHeI\/AAAAAAAAAsc\/rnWnfTwOonwAT0obYtkT5VLiMGzLhxC5ACK4BGAYYCw\/s1600\/Resonator.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" src=\"https:\/\/3.bp.blogspot.com\/-LbQmSLcTaYg\/XFVmBHvrHeI\/AAAAAAAAAsc\/rnWnfTwOonwAT0obYtkT5VLiMGzLhxC5ACK4BGAYYCw\/s1600\/Resonator.png\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПодключение резонатора к микроконтроллеру\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003EПри использовании резонатора на\u0026nbsp;32.768кГц можно задействовать внутренние конденсаторы, подключив их к XTAL1 и XTAL2 установкой фьюзов \u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/08\/fuse-bits.html#CKSEL\" target=\"_blank\"\u003ECKSEL\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EПри тактировании от внутреннего RC-генератора необходимость во внешнем резонаторе и согласующих конденсаторах отпадает.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EЗаключение\u003C\/h2\u003EИтак, большинство компонентов, составляющих типовую обвязку, уже присутствуют в современных микроконтроллерах. Однако, их может оказаться недостаточно для стабильной работы в жестких условиях, в этом случае требуется принятие дополнительных мер. И здесь сложно предусмотреть все возможные ситуации и гарантировать успешную работу того или иного решения. Поэтому лучшая рекомендация - это всегда проверять работу схемы в реальных условиях.\u003Cbr \/\u003E\u003Cbr \/\u003EИнтересный документ по теме -\u0026nbsp;рекомендации Microchip, которые необходимо соблюдать при проектировании оборудования с использованием микроконтроллеров AVR, ссылка:\u0026nbsp;\u003Ca href=\"http:\/\/ww1.microchip.com\/downloads\/en\/AppNotes\/AN2519-AVR-Microcontroller-Hardware-Design-Considerations-00002519B.pdf\" target=\"_blank\"\u003EAN2519 AVR Microcontroller Hardware Design Considerations\u0026nbsp;\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/5767065482792080803\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2019\/02\/atmega328p.html#comment-form","title":"Комментарии: 9"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/5767065482792080803"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/5767065482792080803"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2019\/02\/atmega328p.html","title":"Обвязка ATmega328P"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-MSVQVjU5fwE\/XFVQqeDeHnI\/AAAAAAAAAsQ\/CPqiVZvpvVUfqNWR4TikBcGPnpKicqVzgCK4BGAYYCw\/s72-c\/atmega328_pinout.png","height":"72","width":"72"},"thr$total":{"$t":"9"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-7936050979708386804"},"published":{"$t":"2018-09-13T16:52:00.000+03:00"},"updated":{"$t":"2019-04-08T23:33:32.288+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"программатор"}],"title":{"type":"text","$t":"Программатор USBasp"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-T-1L_bniogI\/W5bD2um4r-I\/AAAAAAAAAfg\/nVIjf7506DknMb9eyvXGvuokSo5zeX-6ACK4BGAYYCw\/s1600\/AC-PG-USBASP.jpg\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Программатор USBasp\" border=\"0\" height=\"320\" src=\"https:\/\/3.bp.blogspot.com\/-T-1L_bniogI\/W5bD2um4r-I\/AAAAAAAAAfg\/nVIjf7506DknMb9eyvXGvuokSo5zeX-6ACK4BGAYYCw\/s320\/AC-PG-USBASP.jpg\" title=\"\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EСегодня речь пойдет о программаторе USBasp - популярном программаторе\u0026nbsp;для микроконтроллеров фирмы Atmel серии AVR. Как заявляет его создатель на \u003Ca href=\"https:\/\/www.fischl.de\/usbasp\/\" target=\"_blank\"\u003Eдомашней странице проекта\u003C\/a\u003E, USBasp работает на различных платформах (Windows, Linux, Mac OS X), не требует дополнительных компонентов и обеспечивает скорость программирования до 5 кбит\/с. Кроме того его схема довольно проста и желающие могут собрать этот программатор самостоятельно. Либо можно заказать готовый на Aliexpress, как\u0026nbsp;я и поступил. Обошелся он\u0026nbsp;мне в $1.70 вместе с переходником на ICSP разъем.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Ch2 style=\"text-align: left;\"\u003EСодержание\u003C\/h2\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/09\/usbasp.html#%D0%9F%D0%BE%D0%B4%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0%D1%82%D0%BE%D1%80%D0%B0%20USBasp%20%D0%BA%20%D0%90%D1%80%D0%B4%D1%83%D0%B8%D0%BD%D0%BE\"\u003EПодключение программатора USBasp к Ардуино\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/09\/usbasp.html#%D0%94%D1%80%D0%B0%D0%B9%D0%B2%D0%B5%D1%80%D0%B0%20%D0%B4%D0%BB%D1%8F%20USBasp\"\u003EДрайвера для USBasp\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/09\/usbasp.html#%D0%A7%D1%82%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B8%20%D0%B7%D0%B0%D0%BF%D0%B8%D1%81%D1%8C%20%D1%84%D1%8C%D1%8E%D0%B7%D0%BE%D0%B2%20%D0%90%D1%80%D0%B4%D1%83%D0%B8%D0%BD%D0%BE\"\u003EЧтение и запись фьюзов Ардуино\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/09\/usbasp.html#%D0%A7%D1%82%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B8%20%D0%B7%D0%B0%D0%BF%D0%B8%D1%81%D1%8C%20FLASH%20%D0%B8%20EEPROM%20%D0%BF%D0%B0%D0%BC%D1%8F%D1%82%D0%B8%20%D0%90%D1%80%D0%B4%D1%83%D0%B8%D0%BD%D0%BE\"\u003EЧтение и запись FLASH и EEPROM памяти Ардуино\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/09\/usbasp.html#%D0%97%D0%B0%D0%BF%D0%B8%D1%81%D1%8C%20%D0%B7%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D1%87%D0%B8%D0%BA%D0%B0%20%D0%B2%20%D0%90%D1%80%D0%B4%D1%83%D0%B8%D0%BD%D0%BE\"\u003EЗапись загрузчика в Ардуино\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ca href=\"http:\/\/www.blogger.com\/blogger.g?blogID=794788004739538112\" name=\"Подключение программатора USBasp к Ардуино\"\u003E\u003C\/a\u003E \u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EПодключение программатора USBasp к Ардуино\u003C\/h2\u003E\u003C\/div\u003EUSBasp позволяет программировать AVR микроконтроллеры через последовательный интерфейс SPI. Для этого он имеет 10-пиновый разъем SPI. И подключение программатора к Ардуино или отдельному микроконтроллеру сводится к соединению их линий SPI и Reset.\u003Cbr \/\u003E\u003Cbr \/\u003EВ большинство плат Ардуино присутствует ICSP разъем, в котором сгруппированы выводы для внутрисхемного программирования: MOSI, MISO, SCK, RST, GND и VCC. Поэтому удобнее всего подключать программатор именно к ICSP. Здесь вам потребуется распиновка разъемов, она приведена ниже:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-fq_FTyFN6Dg\/W5jqUzAYDvI\/AAAAAAAAAgQ\/-Ei8XCUyt40fkGW230I4wn0otQxmYj07wCK4BGAYYCw\/s1600\/USBasp%2BISP6%2Bpinout.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em; text-align: center;\"\u003E\u003Cimg alt=\"Распиновка разъемов USBasp (10pin) и ISP 6pin\" border=\"0\" height=\"200\" src=\"https:\/\/2.bp.blogspot.com\/-fq_FTyFN6Dg\/W5jqUzAYDvI\/AAAAAAAAAgQ\/-Ei8XCUyt40fkGW230I4wn0otQxmYj07wCK4BGAYYCw\/s320\/USBasp%2BISP6%2Bpinout.png\" title=\"\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003C\/div\u003E\u003Cbr \/\u003EСоедините соответствующие выводы программатора и Ардуино, должно получиться примерно так:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-9wcviFfhOXQ\/W5kngJ9gFiI\/AAAAAAAAAgc\/KJSTFWbKULA9d4XOaW29d9XB7fHOhLm2gCK4BGAYYCw\/s1600\/USBasp%2Bwired.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Подключение Arduino к USBasp\" border=\"0\" height=\"394\" src=\"https:\/\/4.bp.blogspot.com\/-9wcviFfhOXQ\/W5kngJ9gFiI\/AAAAAAAAAgc\/KJSTFWbKULA9d4XOaW29d9XB7fHOhLm2gCK4BGAYYCw\/s640\/USBasp%2Bwired.jpg\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EКонечно, возиться каждый раз с проводами не очень удобно, поэтому советую приобрести переходник ISP 10 pin to 6 pin. С ним всё становится гораздо проще.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-wBHskaYaS94\/W5bFY6DFpbI\/AAAAAAAAAf4\/Xdllvd2WESoOlS_whBd_scJVdKREHrZfACK4BGAYYCw\/s1600\/ISP10pin_to_6pin.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em; text-align: center;\"\u003E\u003Cimg alt=\"Переходник ISP 10-pin to 6-pin\" border=\"0\" height=\"168\" src=\"https:\/\/1.bp.blogspot.com\/-wBHskaYaS94\/W5bFY6DFpbI\/AAAAAAAAAf4\/Xdllvd2WESoOlS_whBd_scJVdKREHrZfACK4BGAYYCw\/s200\/ISP10pin_to_6pin.jpg\" title=\"\" width=\"200\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EЕсли же на плате Ардуино нет ICSP разъема, то остается подключать программатор к цифровым выводам в соответствии со следующей таблицей. В ней приведено расположение выводов MOSI, MISO и SCK для различных плат Ардуино.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Ctable align=\"center\" style=\"height: 213px; width: 651px;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth style=\"width: 202px;\"\u003EПлата Ардуино\u003C\/th\u003E\u003Cth style=\"width: 108px;\"\u003EMOSI\u003C\/th\u003E\u003Cth style=\"width: 109px;\"\u003EMISO\u003C\/th\u003E\u003Cth style=\"width: 109px;\"\u003ESCK\u003C\/th\u003E\u003Cth style=\"text-align: right; width: 89px;\"\u003EУровень\u003C\/th\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"width: 202px;\"\u003EUno, Duemilanove\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003E11 или ICSP-4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E12 или ICSP-1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E13 или ICSP-3\u003C\/td\u003E\u003Ctd style=\"text-align: right; width: 89px;\"\u003E5В\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"width: 202px;\"\u003ENano\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003E11 или ICSP-4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E12 или ICSP-1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E13 или ICSP-3\u003C\/td\u003E\u003Ctd style=\"text-align: right; width: 89px;\"\u003E5В\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"width: 202px;\"\u003EPro Mini\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003E11\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E12\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E13\u003C\/td\u003E\u003Ctd style=\"text-align: right; width: 89px;\"\u003E3.3В или 5В\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"width: 202px;\"\u003EMega1280, Mega2560\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003E51 или ICSP-4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E50 или ICSP-1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E52 или ICSP-3\u003C\/td\u003E\u003Ctd style=\"text-align: right; width: 89px;\"\u003E5В\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"width: 202px;\"\u003ELeonardo\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EICSP-4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003EICSP-1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003EICSP-3\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"text-align: right; width: 89px;\"\u003E5В\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"width: 202px;\"\u003EDue\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EICSP-4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003EICSP-1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003EICSP-3\u0026nbsp;\u003C\/td\u003E\u003Ctd style=\"text-align: right; width: 89px;\"\u003E3.3В\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"width: 202px;\"\u003EZero\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003EICSP-4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003EICSP-1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003EICSP-3\u003C\/td\u003E\u003Ctd style=\"text-align: right; width: 89px;\"\u003E3.3В\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"width: 202px;\"\u003E101\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 108px;\"\u003E11 или ICSP-4\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E12 или ICSP-1\u003C\/td\u003E\u003Ctd style=\"text-align: center; width: 109px;\"\u003E13 или ICSP-3\u003C\/td\u003E\u003Ctd style=\"text-align: right; width: 89px;\"\u003E3.3В\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003C\/div\u003E\u003Cbr \/\u003EНе забывайте о том, что некоторые платы требуют питания 3.3В и для них нужно менять положение джампера JP1 на программаторе.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/www.blogger.com\/blogger.g?blogID=794788004739538112\" name=\"Драйвера для USBasp\"\u003E\u003C\/a\u003E \u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EДрайвера для USBasp\u003C\/h2\u003EДля работы с USBasp в Windows следует установить драйвера. Разработчик данного программатора рекомендует использовать драйвера\u0026nbsp;Zadig, скачать их можно на странице \u003Ca href=\"http:\/\/zadig.akeo.ie\/\" target=\"_blank\"\u003Ehttp:\/\/zadig.akeo.ie\/\u003C\/a\u003E. Обратите внимание, начиная с версии драйвера 2.3 прекращена поддержка Windows XP и Vista. Для указанных систем используйте предыдущую версию драйвера:\u0026nbsp;\u003Ca href=\"http:\/\/zadig.akeo.ie\/downloads\/zadig_xp_2.2.exe\"\u003Ezadig_xp_2.2.exe\u003C\/a\u003E\u0026nbsp;для XP и\u0026nbsp;\u003Ca href=\"http:\/\/zadig.akeo.ie\/downloads\/zadig_2.2.exe\"\u003Ezadig_2.2.exe\u003C\/a\u003E для Vista.\u003Cbr \/\u003E\u003Cbr \/\u003EУ меня в системе установлены драйвера из \u003Ca href=\"http:\/\/clc.la\/usbasp-win-driver\" target=\"_blank\"\u003Eэтого\u003C\/a\u003E набора, они подходят как для XP, так и для свежих версий Windows. Скачайте архив, распакуйте его и запустите\u0026nbsp;InstallDriver.exe для установки драйверов.\u003Cbr \/\u003E\u003Cbr \/\u003EПосле установки драйверов программатор будет виден в диспетчере устройств как USBasp, теперь мы можем его использовать:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-TW9R_n2klJ0\/W5laNHPHwXI\/AAAAAAAAAgo\/5dLHP_WK38AIzma5zBDQ8iVenATawf2QwCK4BGAYYCw\/s1600\/USBasp%2B%25D0%2594%25D0%25B8%25D1%2581%25D0%25BF%25D0%25B5%25D1%2582%25D1%2587%25D0%25B5%25D1%2580%2B%25D1%2583%25D1%2581%25D1%2582%25D1%2580%25D0%25BE%25D0%25B9%25D1%2581%25D1%2582%25D0%25B2.png\" imageanchor=\"1\"\u003E\u003Cimg border=\"0\" height=\"200\" src=\"https:\/\/3.bp.blogspot.com\/-TW9R_n2klJ0\/W5laNHPHwXI\/AAAAAAAAAgo\/5dLHP_WK38AIzma5zBDQ8iVenATawf2QwCK4BGAYYCw\/s640\/USBasp%2B%25D0%2594%25D0%25B8%25D1%2581%25D0%25BF%25D0%25B5%25D1%2582%25D1%2587%25D0%25B5%25D1%2580%2B%25D1%2583%25D1%2581%25D1%2582%25D1%2580%25D0%25BE%25D0%25B9%25D1%2581%25D1%2582%25D0%25B2.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EПри работе в\u0026nbsp;Linux или MacOS X установка дополнительного ПО для USBasp не требуется.\u003Cbr \/\u003E\u003Cbr \/\u003EИтак, проверим программатор USBasp в действии. В предыдущих публикациях я описывал процедуру \u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/07\/arduino-as-isp.html\" target=\"_blank\"\u003Eзаписи загрузчика в Ардуино\u003C\/a\u003E и работу с \u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/08\/fuse-bits.html\" target=\"_blank\"\u003Eфьюзами\u003C\/a\u003E с использованием Ардуино в качестве программатора. Эти же действия можно выполнить, используя USBasp.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/www.blogger.com\/blogger.g?blogID=794788004739538112\" name=\"Чтение и запись фьюзов Ардуино\"\u003E\u003C\/a\u003E \u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EЧтение и запись фьюзов Ардуино\u003C\/h2\u003EДля работы с фьюзами будем использовать уже знакомый нам Avrdude. Поэтому запускаем командную строку, переходим в каталог avrdude и вводим команду для чтения младшего конфигурационного байта:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003Eavrdude\u0026nbsp;-C ..\/etc\/avrdude.conf\u0026nbsp;-c usbasp -p m328p -U lfuse:r:-:h\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EВ этой команде использованы следующие параметры:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003E-c \u0026lt;programmer\u0026gt; - псевдоним используемого программатора, в данном случае usbasp.\u003C\/li\u003E\u003Cli\u003E-p \u0026lt;partno\u0026gt; - тип микроконтроллера. Я считываю фьюзы из Ардуино Уно, в которой установлен микроконтроллер ATmega328p, поэтому в качестве \u0026lt;partno\u0026gt; указано значение\u0026nbsp;m328p.\u003C\/li\u003E\u003Cli\u003E-U \u0026lt;memtype\u0026gt;:r|w|v:\u0026lt;filename\u0026gt;[:format] - комплексная опция для указания производимой с памятью операции (чтение. запись, проверка). -U lfuse:r:-:h означает, что требуется прочитать содержимое младшего байта конфигурации и вывести\u0026nbsp;считанное значение\u0026nbsp;на экран в щестнадцатеричном виде.\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003EА вот и результат выполнения приведенной команды:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-yCuujoIvLAw\/W5o9b6s15AI\/AAAAAAAAAhM\/0K2cxzFqF5sOdAjK6XLDwfHgZWcMrrCxwCK4BGAYYCw\/s1600\/USBasp%2BReading%2Bfuses.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Результат чтения младшего конфигурационного байта Ардуино с использованием USBasp\" border=\"0\" height=\"340\" src=\"https:\/\/1.bp.blogspot.com\/-yCuujoIvLAw\/W5o9b6s15AI\/AAAAAAAAAhM\/0K2cxzFqF5sOdAjK6XLDwfHgZWcMrrCxwCK4BGAYYCw\/s640\/USBasp%2BReading%2Bfuses.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EЕсли у вас в результате присутствует строка\u0026nbsp;\u003Ci\u003Eavrdude: warning: cannot set sck period, please check for usbasp\u0026nbsp; firmware update\u003C\/i\u003E, то не обращайте на нее внимание. Это всего лишь предупреждение, не ошибка, работе оно не мешает. Если вы всё же хотите от него избавиться, то нужно обновить прошивку USBasp, данная процедура подробно расписана в статье \u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/10\/usbasp-firmware-update.html\" target=\"_blank\"\u003EПрошивка USBasp\u003C\/a\u003E. Как видно из скриншота, значение младшего конфигурационного байта равно 0xff, команда отработала успешно.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EТеперь проверим запись фьюзов с использованием USBasp. Я изменю значение дополнительного конфигурационного байта с 0xFF на 0xFD, что приведет к установке порога срабатывания схемы BOD в 2.7В. Команда для Avrdude и результат ее выполнения приведены ниже:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cb\u003Eavrdude\u0026nbsp;-C ..\/etc\/avrdude.conf\u0026nbsp;-c usbasp -p m328p -U efuse:w:0xFD:m\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-ACX8Mt7HDC4\/W5o_Ip26P7I\/AAAAAAAAAhY\/xEqfCs9R1OALW56iWo3CmK0_2XfPkdBCwCK4BGAYYCw\/s1600\/USBasp%2BWriting%2Bfuses.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Результат записи дополнительного конфигурационного байта Ардуино с использованием USBasp\" border=\"0\" height=\"340\" src=\"https:\/\/1.bp.blogspot.com\/-ACX8Mt7HDC4\/W5o_Ip26P7I\/AAAAAAAAAhY\/xEqfCs9R1OALW56iWo3CmK0_2XfPkdBCwCK4BGAYYCw\/s640\/USBasp%2BWriting%2Bfuses.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/www.blogger.com\/blogger.g?blogID=794788004739538112\" name=\"Чтение и запись FLASH и EEPROM памяти Ардуино\"\u003E\u003C\/a\u003E \u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EЧтение и запись FLASH и EEPROM памяти Ардуино\u003C\/h2\u003EВ приведенных выше примерах команд для Avrdude в качестве параметра \u0026lt;memtype\u0026gt; использовались значения lfuse и efuse для доступа к конфигурационным байтам микроконтроллера. Данный параметр может принимать и другие значения, они приведены ниже:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003Ecalibration - байты калибровки RC-генератора;\u003C\/li\u003E\u003Cli\u003Eeeprom - энергонезависимая память микроконтроллера;\u003C\/li\u003E\u003Cli\u003Eefuse - дополнительный конфигурационный бит;\u003C\/li\u003E\u003Cli\u003Eflash - FLASH память микроконтроллера;\u003C\/li\u003E\u003Cli\u003Efuse - фьюз-байт для микроконтроллеров с одним fuse-байтом;\u003C\/li\u003E\u003Cli\u003Ehfuse - старший fuse-байт;\u003C\/li\u003E\u003Cli\u003Elfuse - младший fuse-байт;\u003C\/li\u003E\u003Cli\u003Elock - байт блокировки (ячейка защиты);\u003C\/li\u003E\u003Cli\u003Esignature - три байта что обозначают сигнатуру чипа (device ID);\u003C\/li\u003E\u003Cli\u003EfuseN - байт с фьюзами для ATxmega чипов, N - целое число для каждого фьюза что поддерживается устройством;\u003C\/li\u003E\u003Cli\u003Eapplication - область приложений во Flash памяти для МК ATxmega;\u003C\/li\u003E\u003Cli\u003Eapptable - таблица приложений в области Flash памяти для устройств ATxmega;\u003C\/li\u003E\u003Cli\u003Eboot - загрузочная область Flash памяти для устройств ATxmega;\u003C\/li\u003E\u003Cli\u003Eprodsig - область с производственной сигнатурой (calibration) для устройств ATxmega;\u003C\/li\u003E\u003Cli\u003Eusersig - область с пользовательской сигнатурой для устройств ATxmega.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EТаким образом, для чтения FLASH Ардуино Уно (микроконтроллера ATmega328p) может быть использована следующая команда:\u003Cbr \/\u003E\u003Cb\u003Eavrdude\u0026nbsp;-C ..\/etc\/avrdude.conf\u0026nbsp;-p m328p -c usbasp -U flash:r:flash_dump.hex:i\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EФайл с содержимым FLASH памяти микроконтроллера будет создан в каталоге Avrdude. Либо можно прописать в команде полный путь к файлу.\u003Cbr \/\u003E\u003Cbr \/\u003EДля записи в FLASH память содержимого файла flash_dump.hex можно использовать команду:\u003Cbr \/\u003E\u003Cb\u003Eavrdude\u0026nbsp;-C ..\/etc\/avrdude.conf\u0026nbsp;-p m328p -c usbasp -U flash:w:flash_dump.hex:i\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EЧтение EEPROM:\u003Cbr \/\u003E\u003Cb\u003Eavrdude\u0026nbsp;-C ..\/etc\/avrdude.conf\u0026nbsp;-p m328p -c usbasp -U eeprom:r:eeprom_dump.hex:i\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EЗапись EEPROM:\u003Cbr \/\u003E\u003Cb\u003Eavrdude\u0026nbsp;-C ..\/etc\/avrdude.conf\u003C\/b\u003E\u003Cb\u003E\u0026nbsp;-p m328p -c usbasp -U eeprom:w:eeprom_dump.hex:i\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/www.blogger.com\/blogger.g?blogID=794788004739538112\" name=\"Запись загрузчика в Ардуино\"\u003E\u003C\/a\u003E \u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EЗапись загрузчика в Ардуино\u003C\/h2\u003E\u003C\/div\u003E\u003Cdiv\u003EПроцедуру записи загрузчика я описывал ранее в публикации\u0026nbsp;\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/07\/arduino-as-isp.html\" target=\"_blank\"\u003EArduino as ISP - программатор из Ардуино\u003C\/a\u003E. Как и в прошлый раз для записи загрузчика мы будем использовать IDE Arduino. Последовательность шагов следующая:\u003C\/div\u003E\u003Cdiv\u003E\u003Col style=\"text-align: left;\"\u003E\u003Cli\u003EСоединяем USBasp с платой, в которую будем записывать загрузчик и подключаем программатор к компьютеру.\u003C\/li\u003E\u003Cli\u003EЗапускаем IDE Arduino.\u003C\/li\u003E\u003Cli\u003EВ меню \u003Ci\u003EИнструменты \u0026gt; Программатор\u003C\/i\u003E выбираем USBasp.\u003C\/li\u003E\u003Cli\u003EВ меню \u003Ci\u003EИнструменты \u0026gt; Плата\u003C\/i\u003E выбираем значение, соответствующее нашей плате.\u003C\/li\u003E\u003Cli\u003EВ меню \u003Ci\u003EИнструменты\u003C\/i\u003E выбираем команду \u003Ci\u003EЗаписать загрузчик.\u003C\/i\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003EЕсли все сделано правильно, то в нижней части IDE появится сообщение об успешной записи загрузчика:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-B62Gaw_-wyo\/W5qk4W3UswI\/AAAAAAAAAhk\/VlQiFfx6XvENAmsIbgdOsRhDPmuCQNaJwCK4BGAYYCw\/s1600\/Bootloader%2Bflashing%2Bdone.png\" imageanchor=\"1\"\u003E\u003Cimg border=\"0\" src=\"https:\/\/2.bp.blogspot.com\/-B62Gaw_-wyo\/W5qk4W3UswI\/AAAAAAAAAhk\/VlQiFfx6XvENAmsIbgdOsRhDPmuCQNaJwCK4BGAYYCw\/s1600\/Bootloader%2Bflashing%2Bdone.png\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/7936050979708386804\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/09\/usbasp.html#comment-form","title":"Комментарии: 0"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/7936050979708386804"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/7936050979708386804"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/09\/usbasp.html","title":"Программатор USBasp"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-T-1L_bniogI\/W5bD2um4r-I\/AAAAAAAAAfg\/nVIjf7506DknMb9eyvXGvuokSo5zeX-6ACK4BGAYYCw\/s72-c\/AC-PG-USBASP.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-4256446582282147909"},"published":{"$t":"2018-06-24T18:43:00.000+03:00"},"updated":{"$t":"2019-03-20T21:26:28.459+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"spi"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"микросхема"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"проект"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"Генератор сигналов на AD9833"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s1600\/AD9833.jpg\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Генератор AD9833\" border=\"0\" height=\"320\" src=\"https:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s320\/AD9833.jpg\" title=\"AD9833 подключение к Ардуино\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EAD9833 - это программируемый генератор сигналов с низким энергопотреблением. Позволяет генерировать сигналы с частотой до 12.5МГц синусоидальной, треугольной и прямоугольной формы. Программирование осуществляется с использованием трехпроводного интерфейса SPI и не составляет труда. Ниже приведены основные характеристики микросхемы:\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EЦифровое программирование частоты и фазы.\u003C\/li\u003E\u003Cli\u003EПотребляемая мощность 12.65 мВт при напряжении 3 В.\u003C\/li\u003E\u003Cli\u003EДиапазон выходных частот от 0 МГц до 12.5 МГц.\u003C\/li\u003E\u003Cli\u003EРазрешение 28 бит (0.1 Гц при частоте опорного сигнала 25 МГц).\u003C\/li\u003E\u003Cli\u003EСинусоидальные, треугольные и прямоугольные выходные колебания.\u003C\/li\u003E\u003Cli\u003EНапряжение питания от 2.3 В до 5.5 В.\u003C\/li\u003E\u003Cli\u003EТрехпроводной интерфейс SPI.\u003C\/li\u003E\u003Cli\u003EРасширенный температурный диапазон: от –40°C до +105°C.\u003C\/li\u003E\u003Cli\u003EОпция пониженного энергопотребления.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EБолее подробную информацию вы можете найти в \u003Ca href=\"http:\/\/clc.la\/ad9833_datasheet\" target=\"_blank\"\u003Eдаташите\u003C\/a\u003E. В характеристиках также заявлено, что микросхема не требует внешних компонентов, но здесь производитель лукавит: обвязка и источник опорной частоты все же нужны. На Али продаются модули AD9833 с необходимой обвязкой и кварцевым генератором на 25 МГц, как раз с таким модулем я и собираюсь экспериментировать. Данный модуль имеет следующие выводы:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EVCC – плюс питания для цифровых и аналоговых цепей генератора.\u003C\/li\u003E\u003Cli\u003EDGND – цифровая земля.\u003C\/li\u003E\u003Cli\u003ESDATA – вход данных интерфейса SPI. Передача осуществляется 16-битными словами.\u003C\/li\u003E\u003Cli\u003ESCLK – вход тактового сигнала SPI. Используется второй режим работы: (CPOL = 1, CPHA = 0).\u003C\/li\u003E\u003Cli\u003EFSYNC – выбор микросхемы. Перед началом передачи данных должен быть установлен в 0, по завершении в 1.\u003C\/li\u003E\u003Cli\u003EAGND – аналоговая земля.\u003C\/li\u003E\u003Cli\u003EOUT – выход генератора.\u003C\/li\u003E\u003C\/ul\u003EПопробуем подключить этот модуль к Ардуино и научиться им управлять. Для начала ознакомимся с его функциональной схемой:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cimg alt=\"Функциональная схема AD9833\" border=\"0\" height=\"368\" src=\"https:\/\/2.bp.blogspot.com\/-69XH7GVpwgw\/WwpkdLAdMsI\/AAAAAAAAAac\/ZSRJJFMHR5gC4B_WuFojx1aAdrnlTiKDQCK4BGAYYCw\/s640\/AD9833_Functional_Diagram.png\" title=\"\" width=\"640\" \/\u003E\u003C\/div\u003E\u003Cbr \/\u003EAD9833 состоит из следующих основных частей: два регистра выбора частоты, аккумулятор фазы, два регистра выбора фазы и сумматор смещения фазы (вместе эти компоненты составляют генератор с цифровым управлением - NCO), SIN ROM для преобразования информации о фазе в амплитуду и 10-разрядный цифро-аналоговый преобразователь.\u003Cbr \/\u003E\u003Cbr \/\u003EИз схемы видно, что данные с интерфейса SPI передаются в управляющий регистр, регистры выбора фазы и частоты. Именно они определяют сигнал на выходе генератора. И программирование генератора сводится к изменению содержимого указанных регистров.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch3 style=\"text-align: left;\"\u003EУправляющий регистр\u003C\/h3\u003EЭто 16-разрядный регистр, управляющий работой генератора. Подробное описание его битов приведено ниже в таблице. Схема из даташита также наглядно демонстрирует их назначение:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-AiANhL6sEUA\/Wwpk8roXhxI\/AAAAAAAAAao\/fgu6ISaPJC4bdzyz8lYUsTZr4F_3XHStwCK4BGAYYCw\/s1600\/AD9833_Control_Bits.png\" imageanchor=\"1\"\u003E\u003Cimg border=\"0\" height=\"316\" src=\"https:\/\/2.bp.blogspot.com\/-AiANhL6sEUA\/Wwpk8roXhxI\/AAAAAAAAAao\/fgu6ISaPJC4bdzyz8lYUsTZr4F_3XHStwCK4BGAYYCw\/s640\/AD9833_Control_Bits.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Ctable style=\"width: 100%;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth width=\"36\"\u003EБит \u003C\/th\u003E\u003Cth width=\"124\"\u003EНазвание \u003C\/th\u003E\u003Cth width=\"485\"\u003EНазначение \u003C\/th\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E15, 14 \u003C\/td\u003E\u003Ctd\u003EDB15, DB14 \u003C\/td\u003E\u003Ctd\u003EЧтобы AD9833 понял, что принятое по SPI 16-битное слово содержит новое значение для управляющего регистра, два старших бита в слове должны быть установлены в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E13 \u003C\/td\u003E\u003Ctd\u003EB28 \u003C\/td\u003E\u003Ctd\u003EРегистры частоты AD9833 имеют разрядность 28 бит, поэтому для изменения их содержимого требуется передача двух 16-битных слов. Однако в некоторых случаях требуется изменить только старшую или младшую часть регистра частоты. Здесь и используется данный признак: B28 = 1 говорит о том, что необходимо обновить регистр частоты целиком и его новое значение будет передано двумя последовательными записями. Первая запись содержит 14 младших бит, вторая 14 старших бит. Первые два бита в обеих записях определяют регистр частоты, в который будет записано передаваемое значение и должны быть одинаковыми. Обновление регистра частоты происходит после получения полного слова, поэтому запись промежуточного значения в регистр исключена. B28 = 0 позволяет обновить отдельно старшую или младшую часть регистра. Какая именно часть будет изменена определяется управляющим битом HLB. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E12 \u003C\/td\u003E\u003Ctd\u003EHLB \u003C\/td\u003E\u003Ctd\u003EБит HLB определяет, какая из частей регистра частоты (младшая или старшая) будет перезаписана. Используется при B28 = 0. При B28 = 1 значение этого бита игнорируется. HLB = 1 позволяет обновить старшие 14 бит регистра частоты; HLB = 0 позволяет обновить младшие 14 бит регистра частоты. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E11 \u003C\/td\u003E\u003Ctd\u003EFSELECT \u003C\/td\u003E\u003Ctd\u003EБит FSELECT определяет, какой из регистров используется в аккумуляторе фазы – FREQ0 или FREQ1. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E10 \u003C\/td\u003E\u003Ctd\u003EPSELECT \u003C\/td\u003E\u003Ctd\u003EБит PSELECT определяет, данные какого из регистров PHASE0 или PHASE1 добавляются к выходу аккумулятора фазы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E9 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E8 \u003C\/td\u003E\u003Ctd\u003ERESET \u003C\/td\u003E\u003Ctd\u003ERESET = 1 сбрасывает внутренние регистры генератора в 0. Сброс не затрагивает регистры управления, частоты и фазы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E7 \u003C\/td\u003E\u003Ctd\u003ESLEEP1 \u003C\/td\u003E\u003Ctd\u003EПри SLEEP1 = 1 запрещается внутреннее тактирование, приостанавливается работа NCO и выход генератора остается в своем текущем состоянии. При SLEEP1 = 0 тактирование разрешено. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E6 \u003C\/td\u003E\u003Ctd\u003ESLEEP12 \u003C\/td\u003E\u003Ctd\u003EПри SLEEP12 = 1 отключается внутренний ЦАП. Это может быть полезно для генерации прямоугольных импульсов, при которой не требуется выполнение цифро-аналоговых преобразований. При SLEEP12 = 0 внутренний ЦАП активен. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E5 \u003C\/td\u003E\u003Ctd\u003EOPBITEN \u003C\/td\u003E\u003Ctd\u003EДанный бит вместе с битом MODE управляют выходом генератора. При OPBITEN = 1 внутренний ЦАП отключается от выхода VOUT и для генерации выходного сигнала используется значение старшего значащего бита с входа ЦАП, что позволяет получить на выходе генератора прямоугольные импульсы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E4 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E3 \u003C\/td\u003E\u003Ctd\u003EDIV2 \u003C\/td\u003E\u003Ctd\u003EИспользуется в паре со значением OPBITEN = 1. При DIV2 = 1 значение старшего значащего бита данных с входа ЦАП подается напрямую на выход VOUT. DIV2 = 0 позволяет задействовать делитель частоты и уменьшить частоту выходного сигнала вдвое. При OPBITEN = 0 значение данного бита игнорируется. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E2 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E1 \u003C\/td\u003E\u003Ctd\u003EMODE \u003C\/td\u003E\u003Ctd\u003EДанный бит вместе с битом OPBITEN управляют выходом генератора. При OPBITEN = 1 бит MODE должен быть установлен в 0. Значение MODE = 0 позволяет получить на выходе генератора синусоидальный сигнал. При MODE = 1 на выходе будет треугольный сигнал. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E0 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EИ для лучшего понимания назначения битов OPBITEN, MODE и DIV2 я приведу таблицу с их допустимыми комбинациями и формой результирующих сигналов на выходе:\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Ctable style=\"width: 100%;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth width=\"73px\"\u003EOPBITEN \u003C\/th\u003E\u003Cth width=\"73px\"\u003EMODE \u003C\/th\u003E\u003Cth width=\"73px\"\u003EDIV2 \u003C\/th\u003E\u003Cth\u003EСигнал на выходе VOUT \u003C\/th\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003EX \u003C\/td\u003E\u003Ctd\u003EСинусоидальный \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003EX \u003C\/td\u003E\u003Ctd\u003EТреугольный \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd\u003EПрямоугольный с частотой F\/2 \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd\u003EПрямоугольный с частотой F \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003EX \u003C\/td\u003E\u003Ctd\u003EЗарезервировано \u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EРегистры частоты и фазы\u003C\/h3\u003E\u003Cdiv\u003EГенератор AD9833 имеет 2 регистра частоты и 2 регистра фазы разрядностью 28 бит и 12 бит соответственно.\u0026nbsp;\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВыбор активного регистра частоты осуществляется установкой управляющего бита FSELECT: при FSELECT = 0 активным является FREQ0; при FSELECT = 1 активен регистр FREQ1. Результирующая частота на выходе генератора определяется следующим образом:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E(F\u003Csub\u003EMCLK\u003C\/sub\u003E \/ 2\u003Csup\u003E28\u003C\/sup\u003E) * FREQREG,\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003Eгде F\u003Csub\u003EMCLK\u003C\/sub\u003E – это опорная частота, FREQREG – значение, загруженное в активный регистр частоты. Таким образом, если мы хотим получить на выходе генератора сигнал с частотой 400Гц при опорной частоте 25МГц, в активный регистр\u0026nbsp; должно быть загружено значение:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EFREQREG = F\u003Csub\u003EOUT\u003C\/sub\u003E*2\u003Csup\u003E28\u003C\/sup\u003E \/ F\u003Csub\u003EMCLK\u003C\/sub\u003E = 400Гц * 2\u003Csup\u003E28\u003C\/sup\u003E \/ 25МГц ≈ 4295\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EДля того чтобы загрузить значение FREQREG в регистр частоты необходимо старшие биты передаваемого по SPI значения установить в 01 для загрузки в FREQ0 или 10 для загрузки в FREQ1. Напомню, что общение с AD9833 осуществляется по SPI 16-битными словами.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EФаза выходного сигнала определяется следующим образом:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E(2π \/ 2\u003Csup\u003E12\u003C\/sup\u003E) * PHASEREG\u003Cbr \/\u003E\u003Cbr \/\u003Eсоответственно, значение для регистра фазы вычисляется по формуле:\u003Cbr \/\u003E\u003Cbr \/\u003EPHASEREG = PHASE*2\u003Csup\u003E12\u003C\/sup\u003E\u0026nbsp;\/ 2π\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВ приведенных формулах PHASEREG – это значение активного регистра фазы. Выбор активного регистра осуществляется установкой управляющего бита PSELECT: при PSELECT = 0 активным является PHASE0; при PSELECT = 1 активен регистр PHASE1.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EПри записи нового значения в регистр фазы старшие биты должны быть установлены в 11, а выбор регистра, в который должно быть записано значение, осуществляется установкой бита 13: при нулевом его значении будет обновлен регистр PHASE0; при установке указанного бита в 1 будет обновлен регистр PHASE1. 12й бит не используется, а биты с 0 по 11 содержат значение для регистра фазы.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EРазрядность регистра частоты в 28 бит при опорной частоте 25МГц обеспечивает шаг 0.1Гц для установки частоты сигнала на выходе. А 12-битный регистр фазы обеспечивает разрешение 2π\/4096.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ch3 style=\"text-align: left;\"\u003EТестовая программа для AD9833 на Ардуино\u003C\/h3\u003E\u003C\/div\u003E\u003Cdiv\u003EТеперь мы можем написать первую программу для AD9833. Схема подключения модуля AD9833 к Ардуино и скетч приведены ниже.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-Dwk89e02Dxg\/WwqLVPujOgI\/AAAAAAAAAa0\/17AslGl1lskkS4x3Duxy8vYhbHdlWqK2QCK4BGAYYCw\/s1600\/AD9833_Arduino.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Схема подключения AD9833 к Ардуино\" border=\"0\" height=\"428\" src=\"https:\/\/4.bp.blogspot.com\/-Dwk89e02Dxg\/WwqLVPujOgI\/AAAAAAAAAa0\/17AslGl1lskkS4x3Duxy8vYhbHdlWqK2QCK4BGAYYCw\/s640\/AD9833_Arduino.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EС подключением все просто: общение с модулем происходит по интерфейсу SPI, для которого на Ардуино отведены следующие пины:\u003Cbr \/\u003E\u003Cbr \/\u003ED10 - SS (Slave Select - выбор ведомого), к нему подключаем вывод FSYNC модуля.\u003Cbr \/\u003ED11 - MOSI (Master Out Slave In - выход ведущего, вход ведомого), к нему подключаем вывод SDATA.\u003Cbr \/\u003ED13 - SCK (Serial Clock - Тактовый сигнал), к нему подключаем вывод SCLK.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;SPI.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2100\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0001 0000 0000 - Reset + DB28\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x50C7\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0101 0000 1100 0111 - Freq0 LSB (4295)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x4000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0100 0000 0000 0000 - Freq0 MSB (0)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0xC000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/1100 0000 0000 0000 - Phase0 (0)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0000 - Exit Reset\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E WriteAD9833(uint16_t Data){\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.beginTransaction(SPISettings(SPI_CLOCK_DIV2, MSBFIRST, SPI_MODE2));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(SS, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003ELOW\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdelayMicroseconds\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.transfer16(Data);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(SS, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EHIGH\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.endTransaction();\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0000 - Синусоидальный сигнал\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2002\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0010 - MODE=1 - Треугольный\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2020\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0010 0000 - OPBITEN=1 - Прямоугольный (MSB\/2)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2028\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0010 1000 - OPBITEN=1, DIV2=1 - Прямоугольный (MSB)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E }\u003C\/pre\u003E\u003Cbr \/\u003EВ данном скетче выполняются следующие действия:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EПри первом вызове функции WriteAD9833 производится установка управляющего регистра: бит RESET устанавливается в 1 для выполнения сброса; бит DB28 устанавливается в 1 для перезаписи всего содержимого регистра частоты; биты FSELECT и PSELECT содержат 0, поэтому для генерации выходного сигнала будут использоваться регистры FREQ0 и PHASE0.\u003C\/li\u003E\u003Cli\u003EСледующие два вызова передают значение 4295 в регистр частоты FREQ0. Данное значение умещается в 14 младших разрядах, поэтому в старшие разряды регистра записываем нули.\u003C\/li\u003E\u003Cli\u003EСдвиг по фазе не требуется - запишем в регистр PHASE0 значение 0\u003C\/li\u003E\u003Cli\u003EПоследним вызовом WriteAD9833 в процедуре setup снимаем бит RESET, разрешая тем самым работу генератора. Результирующий сигнал поступает на вывод VOUT.\u003C\/li\u003E\u003Cli\u003EСледующие вызовы WriteAD9833 в функции loop обновляют содержимое управляющего регистра, перебирая комбинации битов MODE, OPBITEN и DIV2 для генерации сигнала синусоидальной, треугольной и прямоугольной форм.\u003C\/li\u003E\u003C\/ul\u003EВот как выглядит выходной сигнал генератора в виртуальном осциллографе:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-vG7Kyb1PBSI\/WwW6w_75aNI\/AAAAAAAAAZs\/O-niM5ZaTj4Z3p9GvEi8aQebn9B2NhE0ACK4BGAYYCw\/s1600\/AD9833_sin.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"347\" src=\"https:\/\/4.bp.blogspot.com\/-vG7Kyb1PBSI\/WwW6w_75aNI\/AAAAAAAAAZs\/O-niM5ZaTj4Z3p9GvEi8aQebn9B2NhE0ACK4BGAYYCw\/s640\/AD9833_sin.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EСинусоидальный сигнал (биты\u0026nbsp;MODE и\u0026nbsp;OPBITEN сброшены в 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-CGtEk6UmWoU\/WwW63YFtX6I\/AAAAAAAAAZ0\/Ljzt-KCBqTYm6Se4Z8OTUw1xJqwxtmenACK4BGAYYCw\/s1600\/AD9833_tri.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/2.bp.blogspot.com\/-CGtEk6UmWoU\/WwW63YFtX6I\/AAAAAAAAAZ0\/Ljzt-KCBqTYm6Se4Z8OTUw1xJqwxtmenACK4BGAYYCw\/s640\/AD9833_tri.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EТреугольный сигнал (MODE = 1, OPBITEN = 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-BLid2QyYDuQ\/WwW69XYCHaI\/AAAAAAAAAZ8\/eEH32LW-iSgkXWYUmRyP69W6axIL0G-9wCK4BGAYYCw\/s1600\/AD9833_MSBdiv2.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/3.bp.blogspot.com\/-BLid2QyYDuQ\/WwW69XYCHaI\/AAAAAAAAAZ8\/eEH32LW-iSgkXWYUmRyP69W6axIL0G-9wCK4BGAYYCw\/s640\/AD9833_MSBdiv2.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПрямоугольный сигнал (OPBITEN = 1, MODE = 0, DIV2 = 1)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-N_aGK0opjiM\/WwW7BWtx5qI\/AAAAAAAAAaI\/Ry6MUKMMdF0roHgOL1-5sIRKkvFFiC8QgCK4BGAYYCw\/s1600\/AD9833_MSB.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/2.bp.blogspot.com\/-N_aGK0opjiM\/WwW7BWtx5qI\/AAAAAAAAAaI\/Ry6MUKMMdF0roHgOL1-5sIRKkvFFiC8QgCK4BGAYYCw\/s640\/AD9833_MSB.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПрямоугольный сигнал (OPBITEN = 1, MODE = 0, DIV2 = 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003EОбратите внимание: при генерации синусоидальных и треугольных импульсов, когда сигнал снимается с выхода ЦАП, его амплитуда изменяется в диапазоне 38мВ...0,65В. При генерации импульсов прямоугольной формы мы имеем дело с обычным цифровым сигналом с соответствующими уровнями напряжения. Так в последних двух осциллограммах логической единице соответствует напряжение ~4,5В.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch3 style=\"text-align: left;\"\u003EГенератор на AD9833 с дисплеем и энкодером\u003C\/h3\u003E\u003Cdiv\u003EРазобравшись с управлением AD9833 можно приступать к созданию генератора с интерфейсом управления и индикацией. Для этого добавим в нашу схему энкодер вращения и жидкокристаллический дисплей:\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-nbGuCEW9QLo\/WyZuuKJXIEI\/AAAAAAAAAbY\/8CFdIHr9GCMlViToXqf7OEX_7Ass_IsfACK4BGAYYCw\/s1600\/AD9833_generator.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Схема генератора на AD9833 с дисплеем и энкодером KY-040\" border=\"0\" height=\"466\" src=\"https:\/\/4.bp.blogspot.com\/-nbGuCEW9QLo\/WyZuuKJXIEI\/AAAAAAAAAbY\/8CFdIHr9GCMlViToXqf7OEX_7Ass_IsfACK4BGAYYCw\/s640\/AD9833_generator.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/tsibrov.blogspot.com\/2018\/01\/arduino-text-menu.html\" target=\"_blank\"\u003EРанее\u003C\/a\u003E я писал о том, как можно сделать меню на Ардуино с энкодером вращения. И сейчас я взял такое меню за основу скетча, добавив в него функционал для работы с AD9833. Скачать скетч можно по \u003Ca href=\"http:\/\/clc.la\/ad9833_generator\" target=\"_blank\"\u003Eссылке\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EПри включении питания AD9833 настраивается на генерацию синусоидального сигнала частотой 100Гц, соответствующая информация отображается на дисплее. Вращая ручку энкодера можно изменять его частоту, а при нажатии вызывается меню. В меню доступны следующие опции:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EУстановка частоты (можно задать произвольное значение от 1 до 12,5МГц).\u003C\/li\u003E\u003Cli\u003EУстановка фазы (0 - 360°).\u003C\/li\u003E\u003Cli\u003EВыбор формы сигнала.\u003C\/li\u003E\u003Cli\u003EВыбор значения, на которое изменяется частота при вращении ручки энкодера.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EОстается только поместить все компоненты в подходящий корпус и получится законченное устройство. Результат работы в следующем ролике:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/5NsUpivK9OU\/0.jpg\" frameborder=\"0\" height=\"532\" src=\"https:\/\/www.youtube.com\/embed\/5NsUpivK9OU?feature=player_embedded\" width=\"640\"\u003E\u003C\/iframe\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/4256446582282147909\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/06\/ad9833.html#comment-form","title":"Комментарии: 42"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4256446582282147909"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4256446582282147909"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/06\/ad9833.html","title":"Генератор сигналов на AD9833"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s72-c\/AD9833.jpg","height":"72","width":"72"},"thr$total":{"$t":"42"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-5704387754172988171"},"published":{"$t":"2018-01-28T19:48:00.002+03:00"},"updated":{"$t":"2019-01-06T20:29:20.324+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"дребезг контактов"},{"scheme":"http://www.blogger.com/atom/ns#","term":"микросхема"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"}],"title":{"type":"text","$t":"Устранение дребезга контактов. Часть 3 - микросхемы MAX6816\/MAX6817\/MAX6818"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-9EPiCGF7QEo\/Wl-59p4A3aI\/AAAAAAAAAW0\/ychWhdGC2Bg5_3r_pPi_pgBGc8_Fga--QCK4BGAYYCw\/s1600\/Push_button_bounce.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Дребезг контактов\" border=\"0\" height=\"204\" src=\"https:\/\/4.bp.blogspot.com\/-9EPiCGF7QEo\/Wl-59p4A3aI\/AAAAAAAAAW0\/ychWhdGC2Bg5_3r_pPi_pgBGc8_Fga--QCK4BGAYYCw\/s320\/Push_button_bounce.png\" title=\"\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EМикросхемы MAX6816, MAX6817 и MAX6818 - это одно-, двух- и восьмиканальные аппаратные подавители дребезга производства Maxim Integrated, выполненные по CMOS технологии. Они принимают искаженный контактным дребезгом сигнал и через некоторый интервал времени выдают очищенный цифровой сигнал. Микросхемы не требуют дополнительных компонентов, имеют низкое энергопотребление, защиту от электростатического разряда и способны работать с входным сигналом в диапазоне ±25В.\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003EКроме того MAX6818, разработанная для взаимодействия с шиной данных, имеет выводы с тремя состояниями и вывод, сообщающий об изменении сигнала на входе для упрощения ее опроса.\u003Cbr \/\u003E\u003Cbr \/\u003EБолее подробную информацию о характеристиках микросхем можно найти в \u003Ca href=\"http:\/\/clc.la\/max6816_17_18_datasheet\" target=\"_blank\"\u003Eдаташите\u003C\/a\u003E. При его изучении первое, что бросается в глаза - это время установления очищенного от дребезга сигнала на выходах микросхем: оно составляет около 40мс после стабилизации сигнала на входе. А значит о применении данных микросхем для подавления дребезга механических энкодеров не может быть и речи, т.к. сигнал на их выходах изменяется значительно быстрее. Поэтому я для проверки имеющейся у меня MAX6818 буду использовать обычные кнопки и переключатели. Ниже приведена схема включения MAX6818. Другие две микросхемы подключаются аналогично, за исключением отсутствующих выводов CH и EN.\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-M2oh1jqcf8w\/Wm3MR9OhqdI\/AAAAAAAAAXM\/yDyLKyLQw1UXr7Kx3XWPStp0LJRMtKwJgCK4BGAYYCw\/s1600\/MAX6818_Debounce.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Подключение MAX6818 для устранения дребезга контактов\" border=\"0\" height=\"330\" src=\"https:\/\/4.bp.blogspot.com\/-M2oh1jqcf8w\/Wm3MR9OhqdI\/AAAAAAAAAXM\/yDyLKyLQw1UXr7Kx3XWPStp0LJRMtKwJgCK4BGAYYCw\/s640\/MAX6818_Debounce.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EВывод EN на схеме подключен к земле, таким образом считывание с выводов микросхемы всегда разрешено. Сигнал CH, сообщающий об изменении сигнала на выходах OUT1...OUT8, может быть подключен на вход микроконтроллера (Ардуино), поддерживающий прерывания. Я его сейчас не использую. И на данной схеме нет подтягивающих резисторов на кнопках, т.к. они присутствуют в самой микросхеме (по 63кОм на каждом входе).\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EМикросхема MAX6818 выпускается в SSOP корпусе что не очень удобно для экспериментов с ней, поэтому я сделал для нее монтажную плату. Получилась такая штуковина:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-w18IpGnaF0c\/Wm3-I0DKtdI\/AAAAAAAAAXw\/DKERXV24aGUJNgC3qfYUkE4y9MyGHshNwCK4BGAYYCw\/s1600\/MAX6818_breakout.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"MAX6818 breakout arduino\" border=\"0\" height=\"414\" src=\"https:\/\/1.bp.blogspot.com\/-w18IpGnaF0c\/Wm3-I0DKtdI\/AAAAAAAAAXw\/DKERXV24aGUJNgC3qfYUkE4y9MyGHshNwCK4BGAYYCw\/s640\/MAX6818_breakout.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EНу и собственно осциллограмма работы микросхемы:\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-y0vyeg5r9F8\/Wm3RMts_HwI\/AAAAAAAAAXg\/LbYEXvTzbpwbwD0CR9qHn-tXYMhDnQZKQCK4BGAYYCw\/s1600\/MAX6818_oscillogram.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"MAX6818 устранение дребезга контактов осциллограмма\" border=\"0\" height=\"350\" src=\"https:\/\/1.bp.blogspot.com\/-y0vyeg5r9F8\/Wm3RMts_HwI\/AAAAAAAAAXg\/LbYEXvTzbpwbwD0CR9qHn-tXYMhDnQZKQCK4BGAYYCw\/s640\/MAX6818_oscillogram.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EСверху исходный сигнал с кнопки, снизу - с выхода MAX6818. На фоне задержки в 40 мс дребезг длительностью около 1 мс не так хорошо различим. Но в большинстве случаев эта задержка не препятствует использованию микросхемы в реальных устройствах: для кнопки, нажимаемой человеком, 40 мс не сыграют роли. Другое дело - цена микросхем: на данный момент на Али самое выгодное предложение - это 5$ за 5 микросхем MAX6818. MAX6816 и MAX6817 и того дороже. А с учетом размеров их корпусов (SOT143, SOT23 и SSOP) рассмотренные ранее триггер Шмитта и MC14490 в привычных DIP корпусах кажутся более удобным и выгодным решением для любительских проектов. Поэтому, думаю, лучше оставить MAX6816, MAX6817 и MAX6818 для промышленного применения.\u003Cbr \/\u003E\u003Cbr \/\u003EРекомендую также почитать следующие публикации про подавление дребезга:\u003Cbr \/\u003E\u003Ca href=\"http:\/\/tsibrov.blogspot.com\/2017\/09\/1.html\"\u003EУстранение дребезга контактов. Часть 1 - триггер Шмитта\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2017\/11\/2-mc14490.html\"\u003EУстранение дребезга контактов. Часть 2 - микросхема MC14490\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/5704387754172988171\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/01\/max6818.html#comment-form","title":"Комментарии: 0"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/5704387754172988171"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/5704387754172988171"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/01\/max6818.html","title":"Устранение дребезга контактов. Часть 3 - микросхемы MAX6816\/MAX6817\/MAX6818"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-9EPiCGF7QEo\/Wl-59p4A3aI\/AAAAAAAAAW0\/ychWhdGC2Bg5_3r_pPi_pgBGc8_Fga--QCK4BGAYYCw\/s72-c\/Push_button_bounce.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-3912405522455984384"},"published":{"$t":"2018-01-03T15:19:00.000+03:00"},"updated":{"$t":"2018-09-04T20:02:23.274+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"микросхема"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"фоторезистор"}],"title":{"type":"text","$t":"Аналоговый мультиплексор\/демультиплексор CD4051 - увеличиваем количество аналоговых выводов Ардуино"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-DE6D2XOxcRA\/WkpVuhFCQzI\/AAAAAAAAAUo\/HbjKn2CdHk8AUalX7Qf56X4DJ6mhB5HuQCK4BGAYYCw\/s1600\/CD4051_pinout.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"CD4051 pinout распиновка подключение к Ардуино\" border=\"0\" height=\"265\" src=\"https:\/\/1.bp.blogspot.com\/-DE6D2XOxcRA\/WkpVuhFCQzI\/AAAAAAAAAUo\/HbjKn2CdHk8AUalX7Qf56X4DJ6mhB5HuQCK4BGAYYCw\/s400\/CD4051_pinout.png\" title=\"\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003ECD4051 - это 8 канальный аналоговый CMOS мультиплексор\/демультиплексор. Если вам в вашем проекте не хватает аналоговых входов, то данная микросхема поможет решить эту проблему: используя 1 аналоговый и 3 цифровых входа можно получить 8 аналоговых входов.\u003C\/div\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003EМультиплексором называется устройство, которое позволяет передавать сигнал с одного из нескольких входов на единственный выход. Демультиплексор, напротив, передает сигнал с единственного входа на один из информационных выходов. CD4051 совмещает в себе эти две функции, являясь по сути аналоговым коммутатором, принцип ее работы показан на следующей схеме:\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-Ykkbp4zLBGo\/WkpcI1-dkdI\/AAAAAAAAAU4\/-XPqqiq8B0UteFtCfCFUB4IOYfyvg9K9QCK4BGAYYCw\/s1600\/CD4051_functional_diagram.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"Функциональная схема CD4051\" border=\"0\" height=\"544\" src=\"https:\/\/1.bp.blogspot.com\/-Ykkbp4zLBGo\/WkpcI1-dkdI\/AAAAAAAAAU4\/-XPqqiq8B0UteFtCfCFUB4IOYfyvg9K9QCK4BGAYYCw\/s640\/CD4051_functional_diagram.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EФункциональная схема CD4051\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003EВывод COM подключается к аналоговому выводу микроконтроллера. Значения на цифровых входах A, B, C определяют какой из каналов будет соединен с выводом COM. Соединение возможно только при наличии разрешающего сигнала (низкого уровня) на входе INH.\u003Cbr \/\u003E\u003Cbr \/\u003EТехнические характеристики микросхемы CD4051 вы можете найти в\u0026nbsp;\u003Ca href=\"http:\/\/clc.la\/cd4051_datasheet\" target=\"_blank\"\u003EДаташите\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EТеперь о применении микросхемы. С ее помощью можно, например, управлять 8 светодиодами или считывать значения 8 потенциометров. Можно увеличить количество пьезоизлучателей, подключаемых к Ардуино для создания MIDI барабанной установки. Я для примера покажу, как можно подключить 8 фоторезисторов к Ардуино.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-w66hClVEni0\/WkvQfFqi-oI\/AAAAAAAAAVI\/LyHs5XucevEdsx201FEYWqjFNwOifprxwCK4BGAYYCw\/s1600\/Arduino_CD4051_photoresistors.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"Подключение микросхемы CD4051 к Ардуино для работы с 8 фоторезисторами\" border=\"0\" height=\"504\" src=\"https:\/\/4.bp.blogspot.com\/-w66hClVEni0\/WkvQfFqi-oI\/AAAAAAAAAVI\/LyHs5XucevEdsx201FEYWqjFNwOifprxwCK4BGAYYCw\/s640\/Arduino_CD4051_photoresistors.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EСхема подключения 8 фоторезисторов к Ардуино с использованием аналогового коммутатора CD4051\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EЯ не хочу управлять выводом INH и подсоединил его к земле. Таким образом чтение\/запись сигнала через CD4051 будут всегда разрешены. Вывод COM подключен к пину A0 Ардуино, выводы A, B и C к цифровым пинам 8, 9 и 10 соответственно. Чтобы не устанавливать значение каждого из этих пинов функцией digitalWrite я буду обращаться напрямую к регистру B, который отвечает за значения пинов с 8 по 13. Фоторезисторы я поместил в термоусадочную трубку, так они будут более \"направленными\".\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пример работы с микросхемой CD4051\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E AnalogIn = A0; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ CD4051 pin 3 (Common in\/out)\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E9600\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E8\u003C\/span\u003E,  \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EOUTPUT\u003C\/span\u003E);  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ CD4051 pin 11 (A)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E9\u003C\/span\u003E,  \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EOUTPUT\u003C\/span\u003E);  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ CD4051 pin 10 (B)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E10\u003C\/span\u003E, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EOUTPUT\u003C\/span\u003E);  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ CD4051 pin 9  (C)\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E8\u003C\/span\u003E; i++) {\u003Cbr \/\u003E    PORTB = (PORTB \u0026amp; B11111000) ^ i;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(i);\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\": \"\u003C\/span\u003E);\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EanalogRead\u003C\/span\u003E(AnalogIn));\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1000\u003C\/span\u003E);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EПосле прошивки данного скетча в Ардуино откройте монитор порта, в нем будут отображаться значения, считанные с фоторезисторов. Я же для демонстрации добавил в схему блютуз модуль и вывел полученные значения на смартфон с установленным на нем приложением RemoteXY:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/WhgUALIISmY\/0.jpg\" frameborder=\"0\" height=\"532\" src=\"https:\/\/www.youtube.com\/embed\/WhgUALIISmY?feature=player_embedded\" width=\"640\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003EТаким образом с помощью CD4051 можно увеличить количество аналоговых выводов в Ардуино. Но если этого окажется мало, то можно подключить несколько микросхем CD4051. Для этого пины Ардуино, отвечающие за выбор канала, подключаются к выводам A, B и C всех микросхем, а выбор активной микросхемы осуществляется установкой разрешающего сигнала на входе INH, например, с помощью дешифратора.\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/3912405522455984384\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/01\/cd4051.html#comment-form","title":"Комментарии: 9"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/3912405522455984384"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/3912405522455984384"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/01\/cd4051.html","title":"Аналоговый мультиплексор\/демультиплексор CD4051 - увеличиваем количество аналоговых выводов Ардуино"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/1.bp.blogspot.com\/-DE6D2XOxcRA\/WkpVuhFCQzI\/AAAAAAAAAUo\/HbjKn2CdHk8AUalX7Qf56X4DJ6mhB5HuQCK4BGAYYCw\/s72-c\/CD4051_pinout.png","height":"72","width":"72"},"thr$total":{"$t":"9"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-2706369743932241904"},"published":{"$t":"2017-11-07T00:20:00.001+03:00"},"updated":{"$t":"2019-01-06T20:29:04.162+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"дребезг контактов"},{"scheme":"http://www.blogger.com/atom/ns#","term":"микросхема"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"}],"title":{"type":"text","$t":"Устранение дребезга контактов. Часть 2 - микросхема MC14490"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-sW6hukyxtu0\/WgDRpQt325I\/AAAAAAAAASw\/T9Osz7Z7Cu0xT9iBli4xfDDiGrAYHR9bwCK4BGAYYCw\/s1600\/MC14490PG.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"MC14490PG микросхема для устранения дребезга контактов\" border=\"0\" height=\"204\" src=\"https:\/\/3.bp.blogspot.com\/-sW6hukyxtu0\/WgDRpQt325I\/AAAAAAAAASw\/T9Osz7Z7Cu0xT9iBli4xfDDiGrAYHR9bwCK4BGAYYCw\/s320\/MC14490PG.png\" title=\"\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EПродолжаем тему подавления дребезга контактов и сегодня нам в этом поможет микросхема MC14490, также известная как CD4490. Эта микросхема содержит 6 подавителей дребезга, работающих по принципу цифрового интегратора.\u003Cbr \/\u003E\u003Cdiv\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ca name='more'\u003E\u003C\/a\u003EСогласно документации (ссылка на даташит:\u0026nbsp;\u003Ca href=\"http:\/\/clc.la\/mc14490-datasheet\" target=\"_blank\"\u003EMC14490 datasheet\u003C\/a\u003E) данная микросхема имеет следующие характеристики:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EЗащитные диоды на всех входах\u003C\/li\u003E\u003Cli\u003EПодтягивающие резисторы на цифровых входах\u003C\/li\u003E\u003Cli\u003EВозможность использования внутреннего генератора или внешнего тактового сигнала\u003C\/li\u003E\u003Cli\u003EТТЛ совместимые уровни входов и выходов\u003C\/li\u003E\u003Cli\u003EПодавление дребезга на обоих фронтах сигнала\u003C\/li\u003E\u003Cli\u003EНапряжение питания 3~18В\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003EТакже в документации описан принцип работы с иллюстрацией, которую я привел ниже:\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-lmP-ptnraGs\/Wf9bEUrbPyI\/AAAAAAAAAR4\/ILWg3QsnEmI53-rJOL0dLGGbGBn9p1x0ACK4BGAYYCw\/s1600\/MC14490_illustration.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"MC14490 timing diagram\" border=\"0\" height=\"248\" src=\"https:\/\/2.bp.blogspot.com\/-lmP-ptnraGs\/Wf9bEUrbPyI\/AAAAAAAAAR4\/ILWg3QsnEmI53-rJOL0dLGGbGBn9p1x0ACK4BGAYYCw\/s640\/MC14490_illustration.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EКаждый из 6 подавителей содержит сдвиговый регистр и логику для сравнения входного сигнала с содержимым регистра. При изменении сигнала на линии INPUT в первом тактовом импульсе его инвертированное значение записывается в регистр. Однако в следующем такте значение INPUT в результате дребезга возвращается к HIGH, что приводит к сбросу регистра и весь процесс начинается заново. После стабилизации сигнала на линии INPUT за 3-6 периоды значение HIGH проходит все 4 бита сдвигового регистра и через инвертор подается на линию OUTPUT. Аналогичный процесс произойдет при изменении INPUT от LOW к HIGH в периоде N+1.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EИз описанного вытекает требование к частоте тактового сигнала: 4 тактовых импульса, необходимые для прохождения значения через сдвиговый регистр, не должны укладываться в период нахождения входного сигнала в ложном состоянии.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВнешний тактовый сигнал может подаваться на вход микросхемы OSCin. За неимением внешнего генератора можно задействовать внутренний, для этого нужно лишь установить конденсатор малой емкости между выводами OSCin и OSCout. В даташите приведены формулы расчета емкости конденсатора в зависимости от напряжения питания, но ее можно подобрать и опытным путем. Ниже приведена схема включения MC14490.\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-nu0JI1NY86U\/WgDDDLQW1uI\/AAAAAAAAASY\/eC2jtvo7rMsu8F9umCKy59RVTrPcpUIPACK4BGAYYCw\/s1600\/MC14490_debounce_scheme.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Устранение дребезга контактов. Схема включения MC14490\" border=\"0\" height=\"401\" src=\"https:\/\/1.bp.blogspot.com\/-nu0JI1NY86U\/WgDDDLQW1uI\/AAAAAAAAASY\/eC2jtvo7rMsu8F9umCKy59RVTrPcpUIPACK4BGAYYCw\/s640\/MC14490_debounce_scheme.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003EКак уже отмечалось, на всех входах микросхемы установлены подтягивающие резисторы, поэтому в схеме они необязательны. Распиновка микросхемы приведена в \u003Ca href=\"http:\/\/clc.la\/mc14490-datasheet\" target=\"_blank\"\u003Eдаташите\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EТестировать микросхему я буду все с тем же энкодером вращения, на котором ранее проверял работу фильтра дребезга на триггере Шмитта. Вывод энкодера CLK соединен с входом Ain микросхемы. К нему же подключаю первый щуп осциллографа, чтобы видеть исходный сигнал. Очищенный от дребезга сигнал снимается с вывода Aout, к нему подключен второй щуп. И между выводами микросхемы OSCin и OSCout я установил конденсатор на 68пФ. Включаю двигатель, вращающий энкодер, и получаю следующий результат:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-nPIWYFic094\/Wf9lX9crN8I\/AAAAAAAAASI\/V1XXVwTs-90cqQUYEpiLTsa2eu1BReviQCK4BGAYYCw\/s1600\/1.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Результат работы MC14490: искаженный дребезгом исходный сигнал и очищенный на выходе микросхемы\" border=\"0\" height=\"353\" src=\"https:\/\/4.bp.blogspot.com\/-nPIWYFic094\/Wf9lX9crN8I\/AAAAAAAAASI\/V1XXVwTs-90cqQUYEpiLTsa2eu1BReviQCK4BGAYYCw\/s640\/1.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003EЖелтый - это исходный сигнал с вывода CLK энкодера, голубой - очищенный от дребезга на выходе MC14490. Результат налицо! На мой взгляд данный способ подавления дребезга привлекательнее чем с использованием RC фильтра и триггера Шмитта: результирующий сигнал не инвертирован, длительности импульсов не изменены, да и в целом дребезг фильтруется более эффективно. Но MC14490 стоит в несколько раз дороже чем инвертирующий триггер Шмитта. Так что выбор за вами.\u003Cbr \/\u003E\u003Cbr \/\u003EРекомендую также почитать следующие публикации про подавление дребезга:\u003Cbr \/\u003E\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2017\/09\/1.html\"\u003EУстранение дребезга контактов. Часть 1 - триггер Шмитта\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/01\/max6818.html\"\u003EУстранение дребезга контактов. Часть 3 - микросхемы MAX6816\/MAX6817\/MAX6818\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/2706369743932241904\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/11\/2-mc14490.html#comment-form","title":"Комментарии: 2"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/2706369743932241904"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/2706369743932241904"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/11\/2-mc14490.html","title":"Устранение дребезга контактов. Часть 2 - микросхема MC14490"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-sW6hukyxtu0\/WgDRpQt325I\/AAAAAAAAASw\/T9Osz7Z7Cu0xT9iBli4xfDDiGrAYHR9bwCK4BGAYYCw\/s72-c\/MC14490PG.png","height":"72","width":"72"},"thr$total":{"$t":"2"}}]}});