// API callback
related_results_labels_thumbs({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-794788004739538112"},"updated":{"$t":"2019-04-15T11:47:52.329+03:00"},"category":[{"term":"ардуино"},{"term":"подключение"},{"term":"микросхема"},{"term":"программатор"},{"term":"энергопотребление"},{"term":"проект"},{"term":"энкодер вращения"},{"term":"lcd"},{"term":"spi"},{"term":"arduino pro mini"},{"term":"atmega328p"},{"term":"tiny"},{"term":"дребезг контактов"},{"term":"загрузчик"},{"term":"прерывания"},{"term":"digispark"},{"term":"midi"},{"term":"пьезоизлучатель"},{"term":"Светодиодная матрица"},{"term":"блютуз"},{"term":"датчик"},{"term":"фоторезистор"}],"title":{"type":"text","$t":"Про Ардуино и не только"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/-\/%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82?alt=json-in-script\u0026max-results=6"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/search\/label\/%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"5"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"6"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-4256446582282147909"},"published":{"$t":"2018-06-24T18:43:00.000+03:00"},"updated":{"$t":"2019-03-20T21:26:28.459+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"spi"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"микросхема"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"проект"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"Генератор сигналов на AD9833"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s1600\/AD9833.jpg\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Генератор AD9833\" border=\"0\" height=\"320\" src=\"https:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s320\/AD9833.jpg\" title=\"AD9833 подключение к Ардуино\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EAD9833 - это программируемый генератор сигналов с низким энергопотреблением. Позволяет генерировать сигналы с частотой до 12.5МГц синусоидальной, треугольной и прямоугольной формы. Программирование осуществляется с использованием трехпроводного интерфейса SPI и не составляет труда. Ниже приведены основные характеристики микросхемы:\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EЦифровое программирование частоты и фазы.\u003C\/li\u003E\u003Cli\u003EПотребляемая мощность 12.65 мВт при напряжении 3 В.\u003C\/li\u003E\u003Cli\u003EДиапазон выходных частот от 0 МГц до 12.5 МГц.\u003C\/li\u003E\u003Cli\u003EРазрешение 28 бит (0.1 Гц при частоте опорного сигнала 25 МГц).\u003C\/li\u003E\u003Cli\u003EСинусоидальные, треугольные и прямоугольные выходные колебания.\u003C\/li\u003E\u003Cli\u003EНапряжение питания от 2.3 В до 5.5 В.\u003C\/li\u003E\u003Cli\u003EТрехпроводной интерфейс SPI.\u003C\/li\u003E\u003Cli\u003EРасширенный температурный диапазон: от –40°C до +105°C.\u003C\/li\u003E\u003Cli\u003EОпция пониженного энергопотребления.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EБолее подробную информацию вы можете найти в \u003Ca href=\"http:\/\/clc.la\/ad9833_datasheet\" target=\"_blank\"\u003Eдаташите\u003C\/a\u003E. В характеристиках также заявлено, что микросхема не требует внешних компонентов, но здесь производитель лукавит: обвязка и источник опорной частоты все же нужны. На Али продаются модули AD9833 с необходимой обвязкой и кварцевым генератором на 25 МГц, как раз с таким модулем я и собираюсь экспериментировать. Данный модуль имеет следующие выводы:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EVCC – плюс питания для цифровых и аналоговых цепей генератора.\u003C\/li\u003E\u003Cli\u003EDGND – цифровая земля.\u003C\/li\u003E\u003Cli\u003ESDATA – вход данных интерфейса SPI. Передача осуществляется 16-битными словами.\u003C\/li\u003E\u003Cli\u003ESCLK – вход тактового сигнала SPI. Используется второй режим работы: (CPOL = 1, CPHA = 0).\u003C\/li\u003E\u003Cli\u003EFSYNC – выбор микросхемы. Перед началом передачи данных должен быть установлен в 0, по завершении в 1.\u003C\/li\u003E\u003Cli\u003EAGND – аналоговая земля.\u003C\/li\u003E\u003Cli\u003EOUT – выход генератора.\u003C\/li\u003E\u003C\/ul\u003EПопробуем подключить этот модуль к Ардуино и научиться им управлять. Для начала ознакомимся с его функциональной схемой:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cimg alt=\"Функциональная схема AD9833\" border=\"0\" height=\"368\" src=\"https:\/\/2.bp.blogspot.com\/-69XH7GVpwgw\/WwpkdLAdMsI\/AAAAAAAAAac\/ZSRJJFMHR5gC4B_WuFojx1aAdrnlTiKDQCK4BGAYYCw\/s640\/AD9833_Functional_Diagram.png\" title=\"\" width=\"640\" \/\u003E\u003C\/div\u003E\u003Cbr \/\u003EAD9833 состоит из следующих основных частей: два регистра выбора частоты, аккумулятор фазы, два регистра выбора фазы и сумматор смещения фазы (вместе эти компоненты составляют генератор с цифровым управлением - NCO), SIN ROM для преобразования информации о фазе в амплитуду и 10-разрядный цифро-аналоговый преобразователь.\u003Cbr \/\u003E\u003Cbr \/\u003EИз схемы видно, что данные с интерфейса SPI передаются в управляющий регистр, регистры выбора фазы и частоты. Именно они определяют сигнал на выходе генератора. И программирование генератора сводится к изменению содержимого указанных регистров.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch3 style=\"text-align: left;\"\u003EУправляющий регистр\u003C\/h3\u003EЭто 16-разрядный регистр, управляющий работой генератора. Подробное описание его битов приведено ниже в таблице. Схема из даташита также наглядно демонстрирует их назначение:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-AiANhL6sEUA\/Wwpk8roXhxI\/AAAAAAAAAao\/fgu6ISaPJC4bdzyz8lYUsTZr4F_3XHStwCK4BGAYYCw\/s1600\/AD9833_Control_Bits.png\" imageanchor=\"1\"\u003E\u003Cimg border=\"0\" height=\"316\" src=\"https:\/\/2.bp.blogspot.com\/-AiANhL6sEUA\/Wwpk8roXhxI\/AAAAAAAAAao\/fgu6ISaPJC4bdzyz8lYUsTZr4F_3XHStwCK4BGAYYCw\/s640\/AD9833_Control_Bits.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Ctable style=\"width: 100%;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth width=\"36\"\u003EБит \u003C\/th\u003E\u003Cth width=\"124\"\u003EНазвание \u003C\/th\u003E\u003Cth width=\"485\"\u003EНазначение \u003C\/th\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E15, 14 \u003C\/td\u003E\u003Ctd\u003EDB15, DB14 \u003C\/td\u003E\u003Ctd\u003EЧтобы AD9833 понял, что принятое по SPI 16-битное слово содержит новое значение для управляющего регистра, два старших бита в слове должны быть установлены в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E13 \u003C\/td\u003E\u003Ctd\u003EB28 \u003C\/td\u003E\u003Ctd\u003EРегистры частоты AD9833 имеют разрядность 28 бит, поэтому для изменения их содержимого требуется передача двух 16-битных слов. Однако в некоторых случаях требуется изменить только старшую или младшую часть регистра частоты. Здесь и используется данный признак: B28 = 1 говорит о том, что необходимо обновить регистр частоты целиком и его новое значение будет передано двумя последовательными записями. Первая запись содержит 14 младших бит, вторая 14 старших бит. Первые два бита в обеих записях определяют регистр частоты, в который будет записано передаваемое значение и должны быть одинаковыми. Обновление регистра частоты происходит после получения полного слова, поэтому запись промежуточного значения в регистр исключена. B28 = 0 позволяет обновить отдельно старшую или младшую часть регистра. Какая именно часть будет изменена определяется управляющим битом HLB. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E12 \u003C\/td\u003E\u003Ctd\u003EHLB \u003C\/td\u003E\u003Ctd\u003EБит HLB определяет, какая из частей регистра частоты (младшая или старшая) будет перезаписана. Используется при B28 = 0. При B28 = 1 значение этого бита игнорируется. HLB = 1 позволяет обновить старшие 14 бит регистра частоты; HLB = 0 позволяет обновить младшие 14 бит регистра частоты. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E11 \u003C\/td\u003E\u003Ctd\u003EFSELECT \u003C\/td\u003E\u003Ctd\u003EБит FSELECT определяет, какой из регистров используется в аккумуляторе фазы – FREQ0 или FREQ1. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E10 \u003C\/td\u003E\u003Ctd\u003EPSELECT \u003C\/td\u003E\u003Ctd\u003EБит PSELECT определяет, данные какого из регистров PHASE0 или PHASE1 добавляются к выходу аккумулятора фазы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E9 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E8 \u003C\/td\u003E\u003Ctd\u003ERESET \u003C\/td\u003E\u003Ctd\u003ERESET = 1 сбрасывает внутренние регистры генератора в 0. Сброс не затрагивает регистры управления, частоты и фазы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E7 \u003C\/td\u003E\u003Ctd\u003ESLEEP1 \u003C\/td\u003E\u003Ctd\u003EПри SLEEP1 = 1 запрещается внутреннее тактирование, приостанавливается работа NCO и выход генератора остается в своем текущем состоянии. При SLEEP1 = 0 тактирование разрешено. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E6 \u003C\/td\u003E\u003Ctd\u003ESLEEP12 \u003C\/td\u003E\u003Ctd\u003EПри SLEEP12 = 1 отключается внутренний ЦАП. Это может быть полезно для генерации прямоугольных импульсов, при которой не требуется выполнение цифро-аналоговых преобразований. При SLEEP12 = 0 внутренний ЦАП активен. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E5 \u003C\/td\u003E\u003Ctd\u003EOPBITEN \u003C\/td\u003E\u003Ctd\u003EДанный бит вместе с битом MODE управляют выходом генератора. При OPBITEN = 1 внутренний ЦАП отключается от выхода VOUT и для генерации выходного сигнала используется значение старшего значащего бита с входа ЦАП, что позволяет получить на выходе генератора прямоугольные импульсы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E4 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E3 \u003C\/td\u003E\u003Ctd\u003EDIV2 \u003C\/td\u003E\u003Ctd\u003EИспользуется в паре со значением OPBITEN = 1. При DIV2 = 1 значение старшего значащего бита данных с входа ЦАП подается напрямую на выход VOUT. DIV2 = 0 позволяет задействовать делитель частоты и уменьшить частоту выходного сигнала вдвое. При OPBITEN = 0 значение данного бита игнорируется. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E2 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E1 \u003C\/td\u003E\u003Ctd\u003EMODE \u003C\/td\u003E\u003Ctd\u003EДанный бит вместе с битом OPBITEN управляют выходом генератора. При OPBITEN = 1 бит MODE должен быть установлен в 0. Значение MODE = 0 позволяет получить на выходе генератора синусоидальный сигнал. При MODE = 1 на выходе будет треугольный сигнал. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E0 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EИ для лучшего понимания назначения битов OPBITEN, MODE и DIV2 я приведу таблицу с их допустимыми комбинациями и формой результирующих сигналов на выходе:\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Ctable style=\"width: 100%;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth width=\"73px\"\u003EOPBITEN \u003C\/th\u003E\u003Cth width=\"73px\"\u003EMODE \u003C\/th\u003E\u003Cth width=\"73px\"\u003EDIV2 \u003C\/th\u003E\u003Cth\u003EСигнал на выходе VOUT \u003C\/th\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003EX \u003C\/td\u003E\u003Ctd\u003EСинусоидальный \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003EX \u003C\/td\u003E\u003Ctd\u003EТреугольный \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd\u003EПрямоугольный с частотой F\/2 \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd\u003EПрямоугольный с частотой F \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003EX \u003C\/td\u003E\u003Ctd\u003EЗарезервировано \u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EРегистры частоты и фазы\u003C\/h3\u003E\u003Cdiv\u003EГенератор AD9833 имеет 2 регистра частоты и 2 регистра фазы разрядностью 28 бит и 12 бит соответственно.\u0026nbsp;\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВыбор активного регистра частоты осуществляется установкой управляющего бита FSELECT: при FSELECT = 0 активным является FREQ0; при FSELECT = 1 активен регистр FREQ1. Результирующая частота на выходе генератора определяется следующим образом:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E(F\u003Csub\u003EMCLK\u003C\/sub\u003E \/ 2\u003Csup\u003E28\u003C\/sup\u003E) * FREQREG,\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003Eгде F\u003Csub\u003EMCLK\u003C\/sub\u003E – это опорная частота, FREQREG – значение, загруженное в активный регистр частоты. Таким образом, если мы хотим получить на выходе генератора сигнал с частотой 400Гц при опорной частоте 25МГц, в активный регистр\u0026nbsp; должно быть загружено значение:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EFREQREG = F\u003Csub\u003EOUT\u003C\/sub\u003E*2\u003Csup\u003E28\u003C\/sup\u003E \/ F\u003Csub\u003EMCLK\u003C\/sub\u003E = 400Гц * 2\u003Csup\u003E28\u003C\/sup\u003E \/ 25МГц ≈ 4295\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EДля того чтобы загрузить значение FREQREG в регистр частоты необходимо старшие биты передаваемого по SPI значения установить в 01 для загрузки в FREQ0 или 10 для загрузки в FREQ1. Напомню, что общение с AD9833 осуществляется по SPI 16-битными словами.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EФаза выходного сигнала определяется следующим образом:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E(2π \/ 2\u003Csup\u003E12\u003C\/sup\u003E) * PHASEREG\u003Cbr \/\u003E\u003Cbr \/\u003Eсоответственно, значение для регистра фазы вычисляется по формуле:\u003Cbr \/\u003E\u003Cbr \/\u003EPHASEREG = PHASE*2\u003Csup\u003E12\u003C\/sup\u003E\u0026nbsp;\/ 2π\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВ приведенных формулах PHASEREG – это значение активного регистра фазы. Выбор активного регистра осуществляется установкой управляющего бита PSELECT: при PSELECT = 0 активным является PHASE0; при PSELECT = 1 активен регистр PHASE1.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EПри записи нового значения в регистр фазы старшие биты должны быть установлены в 11, а выбор регистра, в который должно быть записано значение, осуществляется установкой бита 13: при нулевом его значении будет обновлен регистр PHASE0; при установке указанного бита в 1 будет обновлен регистр PHASE1. 12й бит не используется, а биты с 0 по 11 содержат значение для регистра фазы.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EРазрядность регистра частоты в 28 бит при опорной частоте 25МГц обеспечивает шаг 0.1Гц для установки частоты сигнала на выходе. А 12-битный регистр фазы обеспечивает разрешение 2π\/4096.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ch3 style=\"text-align: left;\"\u003EТестовая программа для AD9833 на Ардуино\u003C\/h3\u003E\u003C\/div\u003E\u003Cdiv\u003EТеперь мы можем написать первую программу для AD9833. Схема подключения модуля AD9833 к Ардуино и скетч приведены ниже.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-Dwk89e02Dxg\/WwqLVPujOgI\/AAAAAAAAAa0\/17AslGl1lskkS4x3Duxy8vYhbHdlWqK2QCK4BGAYYCw\/s1600\/AD9833_Arduino.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Схема подключения AD9833 к Ардуино\" border=\"0\" height=\"428\" src=\"https:\/\/4.bp.blogspot.com\/-Dwk89e02Dxg\/WwqLVPujOgI\/AAAAAAAAAa0\/17AslGl1lskkS4x3Duxy8vYhbHdlWqK2QCK4BGAYYCw\/s640\/AD9833_Arduino.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EС подключением все просто: общение с модулем происходит по интерфейсу SPI, для которого на Ардуино отведены следующие пины:\u003Cbr \/\u003E\u003Cbr \/\u003ED10 - SS (Slave Select - выбор ведомого), к нему подключаем вывод FSYNC модуля.\u003Cbr \/\u003ED11 - MOSI (Master Out Slave In - выход ведущего, вход ведомого), к нему подключаем вывод SDATA.\u003Cbr \/\u003ED13 - SCK (Serial Clock - Тактовый сигнал), к нему подключаем вывод SCLK.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;SPI.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2100\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0001 0000 0000 - Reset + DB28\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x50C7\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0101 0000 1100 0111 - Freq0 LSB (4295)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x4000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0100 0000 0000 0000 - Freq0 MSB (0)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0xC000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/1100 0000 0000 0000 - Phase0 (0)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0000 - Exit Reset\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E WriteAD9833(uint16_t Data){\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.beginTransaction(SPISettings(SPI_CLOCK_DIV2, MSBFIRST, SPI_MODE2));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(SS, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003ELOW\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdelayMicroseconds\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.transfer16(Data);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(SS, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EHIGH\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.endTransaction();\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0000 - Синусоидальный сигнал\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2002\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0010 - MODE=1 - Треугольный\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2020\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0010 0000 - OPBITEN=1 - Прямоугольный (MSB\/2)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2028\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0010 1000 - OPBITEN=1, DIV2=1 - Прямоугольный (MSB)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E }\u003C\/pre\u003E\u003Cbr \/\u003EВ данном скетче выполняются следующие действия:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EПри первом вызове функции WriteAD9833 производится установка управляющего регистра: бит RESET устанавливается в 1 для выполнения сброса; бит DB28 устанавливается в 1 для перезаписи всего содержимого регистра частоты; биты FSELECT и PSELECT содержат 0, поэтому для генерации выходного сигнала будут использоваться регистры FREQ0 и PHASE0.\u003C\/li\u003E\u003Cli\u003EСледующие два вызова передают значение 4295 в регистр частоты FREQ0. Данное значение умещается в 14 младших разрядах, поэтому в старшие разряды регистра записываем нули.\u003C\/li\u003E\u003Cli\u003EСдвиг по фазе не требуется - запишем в регистр PHASE0 значение 0\u003C\/li\u003E\u003Cli\u003EПоследним вызовом WriteAD9833 в процедуре setup снимаем бит RESET, разрешая тем самым работу генератора. Результирующий сигнал поступает на вывод VOUT.\u003C\/li\u003E\u003Cli\u003EСледующие вызовы WriteAD9833 в функции loop обновляют содержимое управляющего регистра, перебирая комбинации битов MODE, OPBITEN и DIV2 для генерации сигнала синусоидальной, треугольной и прямоугольной форм.\u003C\/li\u003E\u003C\/ul\u003EВот как выглядит выходной сигнал генератора в виртуальном осциллографе:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-vG7Kyb1PBSI\/WwW6w_75aNI\/AAAAAAAAAZs\/O-niM5ZaTj4Z3p9GvEi8aQebn9B2NhE0ACK4BGAYYCw\/s1600\/AD9833_sin.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"347\" src=\"https:\/\/4.bp.blogspot.com\/-vG7Kyb1PBSI\/WwW6w_75aNI\/AAAAAAAAAZs\/O-niM5ZaTj4Z3p9GvEi8aQebn9B2NhE0ACK4BGAYYCw\/s640\/AD9833_sin.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EСинусоидальный сигнал (биты\u0026nbsp;MODE и\u0026nbsp;OPBITEN сброшены в 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-CGtEk6UmWoU\/WwW63YFtX6I\/AAAAAAAAAZ0\/Ljzt-KCBqTYm6Se4Z8OTUw1xJqwxtmenACK4BGAYYCw\/s1600\/AD9833_tri.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/2.bp.blogspot.com\/-CGtEk6UmWoU\/WwW63YFtX6I\/AAAAAAAAAZ0\/Ljzt-KCBqTYm6Se4Z8OTUw1xJqwxtmenACK4BGAYYCw\/s640\/AD9833_tri.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EТреугольный сигнал (MODE = 1, OPBITEN = 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-BLid2QyYDuQ\/WwW69XYCHaI\/AAAAAAAAAZ8\/eEH32LW-iSgkXWYUmRyP69W6axIL0G-9wCK4BGAYYCw\/s1600\/AD9833_MSBdiv2.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/3.bp.blogspot.com\/-BLid2QyYDuQ\/WwW69XYCHaI\/AAAAAAAAAZ8\/eEH32LW-iSgkXWYUmRyP69W6axIL0G-9wCK4BGAYYCw\/s640\/AD9833_MSBdiv2.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПрямоугольный сигнал (OPBITEN = 1, MODE = 0, DIV2 = 1)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-N_aGK0opjiM\/WwW7BWtx5qI\/AAAAAAAAAaI\/Ry6MUKMMdF0roHgOL1-5sIRKkvFFiC8QgCK4BGAYYCw\/s1600\/AD9833_MSB.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/2.bp.blogspot.com\/-N_aGK0opjiM\/WwW7BWtx5qI\/AAAAAAAAAaI\/Ry6MUKMMdF0roHgOL1-5sIRKkvFFiC8QgCK4BGAYYCw\/s640\/AD9833_MSB.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПрямоугольный сигнал (OPBITEN = 1, MODE = 0, DIV2 = 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003EОбратите внимание: при генерации синусоидальных и треугольных импульсов, когда сигнал снимается с выхода ЦАП, его амплитуда изменяется в диапазоне 38мВ...0,65В. При генерации импульсов прямоугольной формы мы имеем дело с обычным цифровым сигналом с соответствующими уровнями напряжения. Так в последних двух осциллограммах логической единице соответствует напряжение ~4,5В.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch3 style=\"text-align: left;\"\u003EГенератор на AD9833 с дисплеем и энкодером\u003C\/h3\u003E\u003Cdiv\u003EРазобравшись с управлением AD9833 можно приступать к созданию генератора с интерфейсом управления и индикацией. Для этого добавим в нашу схему энкодер вращения и жидкокристаллический дисплей:\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-nbGuCEW9QLo\/WyZuuKJXIEI\/AAAAAAAAAbY\/8CFdIHr9GCMlViToXqf7OEX_7Ass_IsfACK4BGAYYCw\/s1600\/AD9833_generator.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Схема генератора на AD9833 с дисплеем и энкодером KY-040\" border=\"0\" height=\"466\" src=\"https:\/\/4.bp.blogspot.com\/-nbGuCEW9QLo\/WyZuuKJXIEI\/AAAAAAAAAbY\/8CFdIHr9GCMlViToXqf7OEX_7Ass_IsfACK4BGAYYCw\/s640\/AD9833_generator.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/tsibrov.blogspot.com\/2018\/01\/arduino-text-menu.html\" target=\"_blank\"\u003EРанее\u003C\/a\u003E я писал о том, как можно сделать меню на Ардуино с энкодером вращения. И сейчас я взял такое меню за основу скетча, добавив в него функционал для работы с AD9833. Скачать скетч можно по \u003Ca href=\"http:\/\/clc.la\/ad9833_generator\" target=\"_blank\"\u003Eссылке\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EПри включении питания AD9833 настраивается на генерацию синусоидального сигнала частотой 100Гц, соответствующая информация отображается на дисплее. Вращая ручку энкодера можно изменять его частоту, а при нажатии вызывается меню. В меню доступны следующие опции:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EУстановка частоты (можно задать произвольное значение от 1 до 12,5МГц).\u003C\/li\u003E\u003Cli\u003EУстановка фазы (0 - 360°).\u003C\/li\u003E\u003Cli\u003EВыбор формы сигнала.\u003C\/li\u003E\u003Cli\u003EВыбор значения, на которое изменяется частота при вращении ручки энкодера.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EОстается только поместить все компоненты в подходящий корпус и получится законченное устройство. Результат работы в следующем ролике:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/5NsUpivK9OU\/0.jpg\" frameborder=\"0\" height=\"532\" src=\"https:\/\/www.youtube.com\/embed\/5NsUpivK9OU?feature=player_embedded\" width=\"640\"\u003E\u003C\/iframe\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/4256446582282147909\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/06\/ad9833.html#comment-form","title":"Комментарии: 42"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4256446582282147909"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4256446582282147909"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/06\/ad9833.html","title":"Генератор сигналов на AD9833"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s72-c\/AD9833.jpg","height":"72","width":"72"},"thr$total":{"$t":"42"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-1132246510290428468"},"published":{"$t":"2017-11-27T22:50:00.000+03:00"},"updated":{"$t":"2018-09-04T19:59:59.725+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"проект"}],"title":{"type":"text","$t":"Саймон говорит - игра на Ардуино"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-PhukwvFaLw0\/WhsEqDyuSlI\/AAAAAAAAATk\/hn_COidl7gUchl8hV-KEVJTchbLj9T6VgCK4BGAYYCw\/s1600\/Simon_game.jpg\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Саймон говорит - игра для развития памяти на Ардуино\" border=\"0\" height=\"218\" src=\"https:\/\/4.bp.blogspot.com\/-PhukwvFaLw0\/WhsEqDyuSlI\/AAAAAAAAATk\/hn_COidl7gUchl8hV-KEVJTchbLj9T6VgCK4BGAYYCw\/s320\/Simon_game.jpg\" title=\"\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EСаймон говорит - детская игра, популярная прежде всего в англоговорящих странах. В ней игроки должны выполнять приказы, которые отдает ведущий. Приказы начинаются со слов \"Саймон говорит ...\", как правило, это просты активные действия, например, \"подпрыгни\", \"похлопай в ладоши\" и т.п. Идея этой игры легла в основу электронной игрушки, весьма популярной в конце\u0026nbsp;1970-х и начала 1980-х годов. Задачей игрока было запомнить продемонстрированную ему последовательность вспышек и звуков и затем воспроизвести ее. Эта игрушка развивает зрительную и слуховую память, скорость реакции. Ее до сих пор можно найти в магазинах. Но, чем покупать, гораздо интереснее собрать такую игрушку самому. Этим мы сегодня и займемся.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003EДля сборки игры потребуются:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EАрдуино. Я использую Arduino Nano;\u003C\/li\u003E\u003Cli\u003E4 светодиода разных цветов;\u003C\/li\u003E\u003Cli\u003E4 кнопки;\u003C\/li\u003E\u003Cli\u003EДинамик на 8 Ом. Можно обойтись и без него, но со звуком играть гораздо интереснее;\u003C\/li\u003E\u003Cli\u003EРезисторы: 4 по 10 кОм для кнопок, 4 по 220 Ом для светодиодов и 1 резистор на 100 Ом для динамика;\u003C\/li\u003E\u003Cli\u003EНу и провода, чтобы всё это соединить.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EСобираем устройство по следующей схеме:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-_LZ-BkA7Oyk\/WhmvEiGvmiI\/AAAAAAAAATQ\/5bTbFupsfwQAzmfX16p_41Kp5r8hbKWyQCK4BGAYYCw\/s1600\/Simon_Says_Arduino_game.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Саймон говорит - схема на Ардуино\" border=\"0\" height=\"524\" src=\"https:\/\/1.bp.blogspot.com\/-_LZ-BkA7Oyk\/WhmvEiGvmiI\/AAAAAAAAATQ\/5bTbFupsfwQAzmfX16p_41Kp5r8hbKWyQCK4BGAYYCw\/s640\/Simon_Says_Arduino_game.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EВ классической игрушке использовались именно 4 кнопки и светодиода, но я при сборке своей решил отступить от этого правила и сократил их количество до трех, чтобы пятилетнему ребенку было попроще играть. В качестве корпуса можно использовать любую подходящую коробку или контейнер, мне, например, попалась под руку коробка от виртуального осциллографа. Для этого я проделал в ней отверстия для кнопок, светодиодов и выключателя. Светодиоды закрепил термоклеем, остальное отлично зафиксировалось штатными гайками. В итоге получилось вот что:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-ec6k-WWzZyA\/WhsIeuyp4KI\/AAAAAAAAATw\/XGLpPxXWbUkSNA9tXLglcUr9DJ9EzirWACK4BGAYYCw\/s1600\/Simon_Says_Arduino.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Самодельная игра на Ардуино Саймон говорит\" border=\"0\" height=\"360\" src=\"https:\/\/1.bp.blogspot.com\/-ec6k-WWzZyA\/WhsIeuyp4KI\/AAAAAAAAATw\/XGLpPxXWbUkSNA9tXLglcUr9DJ9EzirWACK4BGAYYCw\/s640\/Simon_Says_Arduino.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-ZwIokK6r7J8\/WhsKtRwugLI\/AAAAAAAAAUU\/3lba15b0a4ABYSl1-bBHtPVHUuYpf6tIQCK4BGAYYCw\/s1600\/Simon_Says_Arduino_Inside.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Внутри коробки\" border=\"0\" height=\"640\" src=\"https:\/\/1.bp.blogspot.com\/-ZwIokK6r7J8\/WhsKtRwugLI\/AAAAAAAAAUU\/3lba15b0a4ABYSl1-bBHtPVHUuYpf6tIQCK4BGAYYCw\/s640\/Simon_Says_Arduino_Inside.png\" title=\"\" width=\"596\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EКогда устройство собрано остается только прошить Ардуино. Ниже приведен код, я снабдил его достаточным количеством комментариев. Думаю, кто захочет, сможет без труда в нем разобраться. Скачать данный скетч можно по \u003Ca href=\"http:\/\/clc.la\/simon_says\" target=\"_blank\"\u003Eссылке\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E SequenceMaxLen 50      \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Длина последовательности\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E ShowingTime 300        \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Длительность отображения элемента последовательности (мс)\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E DelayBetweenLeds 200   \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Задержка между отображением элементов (мс)\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E WaitingTime 10000      \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Время ожидания ввода (мс)\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E RepeatRightSequence 1  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Нужно ли повторять правильную последовательность при проигрыше\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E Sequence[SequenceMaxLen]; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Последовательность включения светодиодов\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E CurrentLen;               \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Текущая длина последовательности\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E CurrentIndex;              \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Номер обрабатываемого элемента последовательности\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E ButtonsNLeds[] = {\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E}; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Номера выводов, к которым подключены кнопки и светодиоды\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E ButtonCount = \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(ButtonsNLeds) \/ \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(ButtonsNLeds[\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E]);\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebool\u003C\/span\u003E ButtonStillPressed;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eenum\u003C\/span\u003E eMode {mStartNewGame, mShowingSequence, mRepeatSequence, mWaitingForButtons};\u003Cbr \/\u003EeMode Mode;                    \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Текущий режим: отображение последовательности\/ожидание ввода\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E tm;              \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Переменная для отслеживания временных интервалов\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_Speaker 12         \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пин к которому подключен динамик\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E Notes[] = {\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E880\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E988\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1047\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1175\u003C\/span\u003E}; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Частоты нот для каждой из кнопок (A5, B5, C6, D6)\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E SetPinMode(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E NewPinMode) {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; ButtonCount; i++)\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(ButtonsNLeds[i], NewPinMode);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E Blink(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E Count, \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E DelayTime) {\u003Cbr \/\u003E  SetPinMode(\u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EOUTPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E t = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; t \u0026lt; Count; t++) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; ButtonCount; i++)\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(ButtonsNLeds[i], \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(DelayTime);\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; ButtonCount; i++)\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(ButtonsNLeds[i], \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E);\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(DelayTime);\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E Win() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etone\u003C\/span\u003E(pin_Speaker, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2637\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E125\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E162\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etone\u003C\/span\u003E(pin_Speaker, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2093\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E500\u003C\/span\u003E);\u003Cbr \/\u003E  SetPinMode(\u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EOUTPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E t = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; t \u0026lt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E; t++) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; ButtonCount; i++) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(ButtonsNLeds[i], \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E50\u003C\/span\u003E);\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(ButtonsNLeds[i], \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E);\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E20\u003C\/span\u003E);\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E9600\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ErandomSeed\u003C\/span\u003E(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EanalogRead\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E));\u003Cbr \/\u003E  Mode = mStartNewGame;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eswitch\u003C\/span\u003E (Mode) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E mStartNewGame: { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Новая игра\u003C\/span\u003E\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Mode = mStartNewGame\"\u003C\/span\u003E);\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; SequenceMaxLen; i++) \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Создаем последовательность\u003C\/span\u003E\u003Cbr \/\u003E          Sequence[i] = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Erandom\u003C\/span\u003E(ButtonCount);\u003Cbr \/\u003E        SetPinMode(\u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EOUTPUT\u003C\/span\u003E);\u003Cbr \/\u003E        Blink(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E800\u003C\/span\u003E);\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(DelayBetweenLeds); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пауза перед включением первого светодиода\u003C\/span\u003E\u003Cbr \/\u003E        Mode = mShowingSequence;\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Mode = mShowingSequence\"\u003C\/span\u003E);\u003Cbr \/\u003E        CurrentIndex = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-1\u003C\/span\u003E;\u003Cbr \/\u003E        CurrentLen = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E mRepeatSequence:\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (RepeatRightSequence == \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E        Mode = mStartNewGame;\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E mShowingSequence: { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Показываем последовательность\u003C\/span\u003E\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (CurrentIndex == \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-1\u003C\/span\u003E) {\u003Cbr \/\u003E          CurrentIndex = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Sequence: \"\u003C\/span\u003E);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(Sequence[CurrentIndex]);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(ButtonsNLeds[Sequence[\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E]], \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EHIGH\u003C\/span\u003E);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etone\u003C\/span\u003E(pin_Speaker, Notes[Sequence[\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E]], ShowingTime);\u003Cbr \/\u003E          tm = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + ShowingTime;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() \u0026gt;= tm) {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(ButtonsNLeds[Sequence[CurrentIndex]], \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003ELOW\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Гасим светодиод\u003C\/span\u003E\u003Cbr \/\u003E          CurrentIndex++;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (CurrentIndex \u0026lt; CurrentLen) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Если показана еще не вся последовательность\u003C\/span\u003E\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(DelayBetweenLeds);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\", \"\u003C\/span\u003E);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(Sequence[CurrentIndex]);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(ButtonsNLeds[Sequence[CurrentIndex]], \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EHIGH\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ то включаем следующий светодиод\u003C\/span\u003E\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etone\u003C\/span\u003E(pin_Speaker, Notes[Sequence[CurrentIndex]], ShowingTime);\u003Cbr \/\u003E            tm = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + ShowingTime;\u003Cbr \/\u003E          }\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E {\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E();\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Mode == mRepeatSequence) {\u003Cbr \/\u003E              Mode = mStartNewGame; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Начинаем новую игру\u003C\/span\u003E\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1000\u003C\/span\u003E);\u003Cbr \/\u003E            }\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E {\u003Cbr \/\u003E              Mode = mWaitingForButtons; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Иначе переключаемся в режим ввода\u003C\/span\u003E\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Mode = mWaitingForButtons\"\u003C\/span\u003E);\u003Cbr \/\u003E              SetPinMode(\u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E              CurrentIndex = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E              tm = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + WaitingTime;\u003Cbr \/\u003E            }\u003Cbr \/\u003E          }\u003Cbr \/\u003E        }\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E mWaitingForButtons: { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Ожидаем ввода последовательности\u003C\/span\u003E\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() \u0026gt; tm) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Время вышло. Game over\u003C\/span\u003E\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etone\u003C\/span\u003E(pin_Speaker, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E110\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E800\u003C\/span\u003E);\u003Cbr \/\u003E          Blink(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E50\u003C\/span\u003E);\u003Cbr \/\u003E          Mode = mRepeatSequence; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Показываем правильную последовательность\u003C\/span\u003E\u003Cbr \/\u003E          CurrentIndex = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-1\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; ButtonCount; i++) {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(ButtonsNLeds[i]) == \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EHIGH\u003C\/span\u003E) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Если кнопка нажата\u003C\/span\u003E\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E50\u003C\/span\u003E);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (ButtonStillPressed) \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Кнопка все еще нажата, прерываем обработку\u003C\/span\u003E\u003Cbr \/\u003E            ButtonStillPressed = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Button pressed: \"\u003C\/span\u003E);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(i);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etone\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E12\u003C\/span\u003E, Notes[i], \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E300\u003C\/span\u003E);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (i == Sequence[CurrentIndex]) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Нажата верная кнопка\u003C\/span\u003E\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\" - Right!\"\u003C\/span\u003E);\u003Cbr \/\u003E              CurrentIndex++;\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (CurrentIndex \u0026lt; CurrentLen) \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Если введена еще не вся последовательность\u003C\/span\u003E\u003Cbr \/\u003E                tm = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + WaitingTime; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ то ожидаем следующую кнопку\u003C\/span\u003E\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Иначе (введена вся последовательность)\u003C\/span\u003E\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E500\u003C\/span\u003E);\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (CurrentLen == SequenceMaxLen) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Конец игры\u003C\/span\u003E\u003Cbr \/\u003E                  Win();\u003Cbr \/\u003E                  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E500\u003C\/span\u003E);\u003Cbr \/\u003E                  Mode = mStartNewGame; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Начинаем новую игру\u003C\/span\u003E\u003Cbr \/\u003E                  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E                }\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E800\u003C\/span\u003E);\u003Cbr \/\u003E                CurrentLen++; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ увеличиваем ее длину\u003C\/span\u003E\u003Cbr \/\u003E                Mode = mShowingSequence; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ и переключаем режим\u003C\/span\u003E\u003Cbr \/\u003E                SetPinMode(\u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EOUTPUT\u003C\/span\u003E);\u003Cbr \/\u003E                CurrentIndex = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-1\u003C\/span\u003E;\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Mode = mShowingSequence\"\u003C\/span\u003E);\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E              }\u003Cbr \/\u003E            }\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Если нажата неверная кнопка\u003C\/span\u003E\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\" - Wrong!\"\u003C\/span\u003E);\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etone\u003C\/span\u003E(pin_Speaker, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E110\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E800\u003C\/span\u003E);\u003Cbr \/\u003E              SetPinMode(\u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EOUTPUT\u003C\/span\u003E);\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E t = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; t \u0026lt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E10\u003C\/span\u003E; t++) {\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(ButtonsNLeds[i], \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EHIGH\u003C\/span\u003E);\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E50\u003C\/span\u003E);\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(ButtonsNLeds[i], \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003ELOW\u003C\/span\u003E);\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E50\u003C\/span\u003E);\u003Cbr \/\u003E              }\u003Cbr \/\u003E              Mode = mRepeatSequence; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Показываем правильную последовательность\u003C\/span\u003E\u003Cbr \/\u003E              CurrentIndex = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-1\u003C\/span\u003E;\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Mode = mRepeatSequence\"\u003C\/span\u003E);\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E            }\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E          }\u003Cbr \/\u003E        }\u003Cbr \/\u003E        ButtonStillPressed = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EИ в заключение видео получившейся игрушки. Ребенку \"коробочка\" понравилась:)\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i9.ytimg.com\/vi\/KcdOpxgXD3w\/default.jpg?sqp=CLzW8dAF\u0026amp;rs=AOn4CLBnk-5EcKBTYWqHgg634yuD-DD4bQ\" frameborder=\"0\" height=\"532\" src=\"https:\/\/www.youtube.com\/embed\/KcdOpxgXD3w?feature=player_embedded\" width=\"640\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/1132246510290428468\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/11\/blog-post.html#comment-form","title":"Комментарии: 4"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/1132246510290428468"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/1132246510290428468"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/11\/blog-post.html","title":"Саймон говорит - игра на Ардуино"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-PhukwvFaLw0\/WhsEqDyuSlI\/AAAAAAAAATk\/hn_COidl7gUchl8hV-KEVJTchbLj9T6VgCK4BGAYYCw\/s72-c\/Simon_game.jpg","height":"72","width":"72"},"thr$total":{"$t":"4"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-1019604351486411564"},"published":{"$t":"2017-10-21T19:24:00.000+03:00"},"updated":{"$t":"2019-01-07T14:42:53.222+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"midi"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"проект"},{"scheme":"http://www.blogger.com/atom/ns#","term":"пьезоизлучатель"}],"title":{"type":"text","$t":"Arduino MIDI-drums. Часть 2"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003EНе так давно я рассказывал о создании \u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2017\/08\/arduino-midi-drums.html\"\u003EMIDI барабанов на Ардуино\u003C\/a\u003E\u0026nbsp;и в предложенном тогда скетче оставался открытым один вопрос: громкость барабанов. Сегодня я решил вернуться к данной теме и модифицировать код таким образом, чтобы сила удара по барабану влияла на громкость его звучания.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003EВ чем суть изменений. В прошлой раз я описал основную идею: когда мы зафиксировали удар по барабану, вместо того чтобы сразу воспроизвести данную ноту следует сделать еще несколько считываний. Среднее от этих значений можно принять за громкость. Чем сильнее удар, тем дольше не будет спадать сигнал на аналоговом входе Ардуино, тем больше будет среднее значение. При слабом ударе, наоборот. Ну и, конечно, считывать значения нужно не одно за другим, прервав обработку остальных входов Ардуино, а постепенно, в общем цикле. После вычисления среднего значения останется преобразовать его функцией map к диапазону 0..127 и подать MIDI сообщение NOTE ON. Ниже реализация описанного метода.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E SamplesRequired 8 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Количество считываний для определения громкости\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Estruct\u003C\/span\u003E drum       \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Структура для хранения информации об инструменте\u003C\/span\u003E\u003Cbr \/\u003E{\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E SamplesCounter; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Счетчик считанных значений для определения громкости\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E Velocity; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Громкость\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E Note;      \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Нота\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E Threshold;  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Порог чувствительности\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E PlayTime;   \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Максимальное время звучания (мс)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E NoteOffTime; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Время снятия ноты\u003C\/span\u003E\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003Edrum Drums[] = \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Массив инструментов (не больше 6). Номера мнструментов можно подсмотреть \u003C\/span\u003E\u003Cbr \/\u003E               \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ в Википедии: https:\/\/en.wikipedia.org\/wiki\/Percussion_instrument\u003C\/span\u003E\u003Cbr \/\u003E{\u003Cbr \/\u003E  {\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E35\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E400\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E50\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E},\u003Cbr \/\u003E  {\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E38\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E400\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E50\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E},\u003Cbr \/\u003E  {\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E40\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E400\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E50\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E},\u003Cbr \/\u003E  {\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E49\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E400\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E50\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E}\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E DrumCount = \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(Drums) \/ \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(Drums[\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E]);\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E hit = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E i;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E()\u003Cbr \/\u003E{\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E115200\u003C\/span\u003E);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E()\u003Cbr \/\u003E{\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; DrumCount; i++)\u003Cbr \/\u003E  {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Drums[i].SamplesCounter == SamplesRequired)\u003Cbr \/\u003E    { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Проверяем не пора ли снять ноту\u003C\/span\u003E\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() \u0026gt;= Drums[i].NoteOffTime)\u003Cbr \/\u003E      {\u003Cbr \/\u003E        Drums[i].SamplesCounter = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Нулевое значение - признак что нота не звучит\u003C\/span\u003E\u003Cbr \/\u003E        Drums[i].Velocity = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E        MIDI_TX(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E128\u003C\/span\u003E, Drums[i].Note, Drums[i].Velocity); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Снимаем ноту (128 = NOTE OFF)\u003C\/span\u003E\u003Cbr \/\u003E      }\u003Cbr \/\u003E    }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E    {\u003Cbr \/\u003E      hit = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EanalogRead\u003C\/span\u003E(i); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/  Считываем значение с аналогового входа\u003C\/span\u003E\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E  ((Drums[i].SamplesCounter \u0026gt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) and (Drums[i].SamplesCounter \u0026lt; SamplesRequired))\u003Cbr \/\u003E      { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Нужно произвести несколько считываний для определения уровня громкости\u003C\/span\u003E\u003Cbr \/\u003E        Drums[i].Velocity += hit; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Суммируем значения\u003C\/span\u003E\u003Cbr \/\u003E        Drums[i].SamplesCounter++;\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Drums[i].SamplesCounter == SamplesRequired)\u003Cbr \/\u003E        { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/Получено необходимое количество выборок. Найдем среднее значение\u003C\/span\u003E\u003Cbr \/\u003E          Drums[i].Velocity = Drums[i].Velocity \/ SamplesRequired;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Drums[i].Velocity \u0026lt; Drums[i].Threshold) Drums[i].Velocity = Drums[i].Threshold;\u003Cbr \/\u003E          Drums[i].Velocity = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emap\u003C\/span\u003E(Drums[i].Velocity, Drums[i].Threshold, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1023\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E40\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E127\u003C\/span\u003E);\u003Cbr \/\u003E          MIDI_TX(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E144\u003C\/span\u003E, Drums[i].Note, Drums[i].Velocity); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Посылаем сообщение взятия ноты (144 = NOTE ON)\u003C\/span\u003E\u003Cbr \/\u003E          Drums[i].NoteOffTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + Drums[i].PlayTime;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (hit \u0026gt;= Drums[i].Threshold)\u003Cbr \/\u003E      {\u003Cbr \/\u003E        Drums[i].Velocity = hit;\u003Cbr \/\u003E        Drums[i].SamplesCounter++;\u003Cbr \/\u003E      }\u003Cbr \/\u003E\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E MIDI_TX(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E MESSAGE, \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E PITCH, \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E VELOCITY)\u003Cbr \/\u003E{\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(MESSAGE + \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E9\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ 9 - номер MIDI канала для перкуссии\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(PITCH);       \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Нота\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(VELOCITY);    \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Громкость\u003C\/span\u003E\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EМне попадался и другой способ определения громкости, в нем измерялось время от момента прохождения сигналом порогового уровня до того момента как сигнал снова опустится ниже этого уровня. Время затухания сигнала пропорционально силе удара, поэтому его можно использовать для определения громкости. Не знаю, будет ли это способ лучше, надо попробовать его реализовать.\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/1019604351486411564\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/10\/arduino-midi-drums-2.html#comment-form","title":"Комментарии: 2"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/1019604351486411564"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/1019604351486411564"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/10\/arduino-midi-drums-2.html","title":"Arduino MIDI-drums. Часть 2"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"thr$total":{"$t":"2"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-2467254917309598564"},"published":{"$t":"2017-08-12T16:16:00.001+03:00"},"updated":{"$t":"2018-09-13T22:20:30.065+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"arduino pro mini"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"проект"}],"title":{"type":"text","$t":"USB to Serial адаптер из дата-кабеля для Samsung C100"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/4.bp.blogspot.com\/-b1Bmx1pbCAU\/WX9-MZZD_rI\/AAAAAAAAAFo\/LNpKv3rIJ84RxF0XK1yBYwHgMPcfKp-ugCLcBGAs\/s1600\/SAM_0724.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Дата-кабель Samsung C100\" border=\"0\" data-original-height=\"900\" data-original-width=\"1600\" height=\"225\" src=\"https:\/\/4.bp.blogspot.com\/-b1Bmx1pbCAU\/WX9-MZZD_rI\/AAAAAAAAAFo\/LNpKv3rIJ84RxF0XK1yBYwHgMPcfKp-ugCLcBGAs\/s400\/SAM_0724.JPG\" title=\"\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EПомню, в далеком 2004 году ходил я с Samsung C100, это был мой первый телефон) Самого C100 давно уж нет, остался от него только дата-кабель, купленный за 550 рублей - немалые деньги были в то время. Так у меня этот кабель и валялся, выбросить жалко было. Валялся пока на днях не наткнулся на него, подумав: почему бы не использовать его в качестве usb to serial адаптера, например, для прошивки ардуинок, не имеющих собственного преобразователя.\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-JgNsIoLN9nU\/WX9-JBYZziI\/AAAAAAAAAFY\/7nwMYuWODikvGEmAKmu9ResCFmEhY9mVACEwYBhgL\/s1600\/SAM_0728.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Дата кабель Samsung C100 на базе PL-2303\" border=\"0\" data-original-height=\"900\" data-original-width=\"1600\" height=\"360\" src=\"https:\/\/1.bp.blogspot.com\/-JgNsIoLN9nU\/WX9-JBYZziI\/AAAAAAAAAFY\/7nwMYuWODikvGEmAKmu9ResCFmEhY9mVACEwYBhgL\/s640\/SAM_0728.JPG\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EДата-кабель построен на базе микросхемы\u0026nbsp;pl-2303. Драйвера на него установились автоматически. Их также можно скачать на сайте производителя - \u003Ca href=\"http:\/\/www.prolific.com.tw\/US\/ShowProduct.aspx?p_id=225\u0026amp;pcid=41\" target=\"_blank\"\u003EProlific\u003C\/a\u003E для установки вручную. Разобраться с назначением выводов мне помогла найденная в интернете схема:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-08FW7wVEHgo\/WX-L_YN3iEI\/AAAAAAAAAGI\/Y1ugah1mDQgWHITS8T9UQpamiRkETqa6QCPcBGAYYCw\/s1600\/pl2303_pinout.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Распиновка PL-2303\" border=\"0\" data-original-height=\"410\" data-original-width=\"640\" src=\"https:\/\/3.bp.blogspot.com\/-08FW7wVEHgo\/WX-L_YN3iEI\/AAAAAAAAAGI\/Y1ugah1mDQgWHITS8T9UQpamiRkETqa6QCPcBGAYYCw\/s1600\/pl2303_pinout.jpg\" title=\"\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EВ моем кабеле были распаяны 6 контактов:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EЧерный (7) - GND\u003C\/li\u003E\u003Cli\u003EКрасный \u0026nbsp;(5) - CTS\u003C\/li\u003E\u003Cli\u003EБелый \u0026nbsp;(9) - Tx\u003C\/li\u003E\u003Cli\u003EЗеленый (8) - Rx\u003C\/li\u003E\u003Cli\u003EСиний - VCC\u003C\/li\u003E\u003Cli\u003EОплетка - GND\u003C\/li\u003E\u003C\/ul\u003EМеня в первую очередь интересовали Rx и Tx, CTS мне не понадобится. Для проверки своей задумки я решил воспользоваться Arduino Pro Mini, эта плата как раз не имеет встроенного преобразователя. Итак я соединил кабель с платой (напомню, что Rx и Tx кабеля соединяются соответственно с Tx и Rx микроконтроллера) и установил соответствующие настройки в среде Arduino: плата Arduino Pro or Pro Mini, процессор ATmega328 (5V, 16 MHz) и порт в моем случае\u0026nbsp;COM12.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-Oy2CCi48VZk\/WYCi0HAQb2I\/AAAAAAAAAGQ\/LIg2lv3G2t8flFLC67-_r6ZTP1XM57nPgCLcBGAs\/s1600\/%25D0%2591%25D0%25B5%25D0%25B7%25D1%258B%25D0%25BC%25D1%258F%25D0%25BD%25D0%25BD%25D1%258B%25D0%25B9.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Загрузка скетча в Arduino Pro Mini\" border=\"0\" data-original-height=\"1271\" data-original-width=\"1600\" height=\"507\" src=\"https:\/\/2.bp.blogspot.com\/-Oy2CCi48VZk\/WYCi0HAQb2I\/AAAAAAAAAGQ\/LIg2lv3G2t8flFLC67-_r6ZTP1XM57nPgCLcBGAs\/s640\/%25D0%2591%25D0%25B5%25D0%25B7%25D1%258B%25D0%25BC%25D1%258F%25D0%25BD%25D0%25BD%25D1%258B%25D0%25B9.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cbr \/\u003EОткрываю в IDE Arduino пример Blink и нажимаю Загрузить. Здесь есть один важный момент: \u003Cb\u003Eкак только надпись \"Компиляция скетча...\" изменится на \"Загрузка...\" нужно быстро нажать кнопку сброса на Ардуино.\u003C\/b\u003E Если все сделано правильно, то надпись в среде разработки сменится на \"Загрузка завершена\", как на скриншоте ниже.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/4.bp.blogspot.com\/-hZCsiSdqn14\/WX-L_voH84I\/AAAAAAAAAF4\/JgP35iZHClopPxv6_AcZhyBNLeVT2yOCQCLcBGAs\/s1600\/IDE_scr.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"\" border=\"0\" data-original-height=\"602\" data-original-width=\"545\" src=\"https:\/\/4.bp.blogspot.com\/-hZCsiSdqn14\/WX-L_voH84I\/AAAAAAAAAF4\/JgP35iZHClopPxv6_AcZhyBNLeVT2yOCQCLcBGAs\/s1600\/IDE_scr.png\" title=\"\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EНе скажу, конечно, что я жить не мог без этого преобразователя. Но в любом случае приятно, что задуманное получилось, может когда-нибудь он мне пригодится.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/2467254917309598564\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/08\/usb-to-serial-samsung-c100.html#comment-form","title":"Комментарии: 0"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/2467254917309598564"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/2467254917309598564"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/08\/usb-to-serial-samsung-c100.html","title":"USB to Serial адаптер из дата-кабеля для Samsung C100"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-b1Bmx1pbCAU\/WX9-MZZD_rI\/AAAAAAAAAFo\/LNpKv3rIJ84RxF0XK1yBYwHgMPcfKp-ugCLcBGAs\/s72-c\/SAM_0724.JPG","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-4110389009122291911"},"published":{"$t":"2017-08-06T16:12:00.001+03:00"},"updated":{"$t":"2018-11-17T09:43:05.373+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"midi"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"проект"},{"scheme":"http://www.blogger.com/atom/ns#","term":"пьезоизлучатель"}],"title":{"type":"text","$t":"Arduino MIDI-drums - барабаны из Ардуино"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003EПопалось мне как-то в интернете видео про барабаны из пьезоизлучателей и Ардуино. Идея мне очень понравилась и я решил собрать что-то подобное для сынишки. Поэтому начал изучать информацию по данной теме.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-jg8AC84Bq8o\/WYcJ-B65SiI\/AAAAAAAAAHs\/llobCyXKeUA8huM78F1_eJJrHu2f99AWgCLcBGAs\/s1600\/SAM_0735.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"MIDI-барабаны из пьезоизлучателей и Ардуино\" border=\"0\" data-original-height=\"900\" data-original-width=\"1600\" height=\"360\" src=\"https:\/\/3.bp.blogspot.com\/-jg8AC84Bq8o\/WYcJ-B65SiI\/AAAAAAAAAHs\/llobCyXKeUA8huM78F1_eJJrHu2f99AWgCLcBGAs\/s640\/SAM_0735.JPG\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EПьезоэлектрический излучатель\u0026nbsp;состоит из металлической пластины, на которую нанесён слой пьезоэлектрика, имеющий на внешней стороне токопроводящее напыление. Пластина и напыление являются двумя контактами. Пьезоизлучатель способен как генерировать звуковой сигнал из электрической энергии, так и\u0026nbsp;конвертировать приходящие механические колебания в электрические. Именно на этом эффекте и основан принцип работы MIDI-барабанов, описанных в данной статье.\u003Cbr \/\u003E\u003Ca href=\"https:\/\/draft.blogger.com\/null\" name=\"more\"\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EС подключением к Ардуино все просто, кроме собственно пьезоизлучателя нужен резистор на 1МОм. Ниже приведена схема подключения одного барабана.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/4.bp.blogspot.com\/-h3n0oI10pVc\/WYb6MVNBveI\/AAAAAAAAAHc\/zSEKQKEwzEIapiX5-TMfE1ndEevFgh55gCLcBGAs\/s1600\/piezo%2B1_bb.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Подключение пьезоизлучателя к Ардуино\" border=\"0\" data-original-height=\"1083\" data-original-width=\"795\" height=\"640\" src=\"https:\/\/4.bp.blogspot.com\/-h3n0oI10pVc\/WYb6MVNBveI\/AAAAAAAAAHc\/zSEKQKEwzEIapiX5-TMfE1ndEevFgh55gCLcBGAs\/s640\/piezo%2B1_bb.png\" title=\"\" width=\"467\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cbr \/\u003EСигнал с пьезоизлучателя поступает на аналоговый вход Ардуино, а значит, используя плату UNO, можно подключить до 6 барабанов (если нужно больше, то почитайте мою публикацию про \u003Ca href=\"http:\/\/tsibrov.blogspot.ru\/2018\/01\/cd4051.html\" target=\"_blank\"\u003Eаналоговый коммутатор CD5041\u003C\/a\u003E). Разрешение аналоговых входов 10 бит, т.е. считанное значение будет в диапазоне 0-1023. При этом необходимо отсеять шум, вызванный посторонними звуками и вибрациями. Для этого достаточно игнорировать все значения, меньшие некоторого порогового значения. Превышение выбранного порога будем принимать за удар по барабану.\u003Cbr \/\u003E\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cbr \/\u003EТеперь когда мы можем отследить момент удара по барабану необходимо воспроизвести соответствующий звук. Эту задачу можно возложить на компьютер. Для этого будем передавать ему сообщения в MIDI-формате. Интересующимся рекомендую почитать статью \u003Ca href=\"http:\/\/www.muzoborudovanie.ru\/articles\/midi\/midi2.php\"\u003EMIDI в деталях. Часть 2\u0026nbsp;\u003Cspan style=\"font-family: \u0026quot;calibri\u0026quot; , sans-serif; font-size: 14.6667px;\"\u003E–\u0026nbsp;\u003C\/span\u003EСообщения канала\u003C\/a\u003E, она мне здорово помогла. Для остальных же скажу, что на Ардуино необходимо реализовать передачу MIDI-сообщений NOTE ON и NOTE OFF через Serial. Данные сообщения состоят из 3 байт:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-9BdQJO7HGEU\/WYTAtcSWj2I\/AAAAAAAAAG8\/xUAhpeW8FKg3TvIAPcIksOXv3yIaBjhFwCLcBGAs\/s1600\/%25D0%2591%25D0%25B5%25D0%25B7%25D1%258B%25D0%25BC%25D1%258F%25D0%25BD%25D0%25BD%25D1%258B%25D0%25B9.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" data-original-height=\"328\" data-original-width=\"640\" height=\"328\" src=\"https:\/\/2.bp.blogspot.com\/-9BdQJO7HGEU\/WYTAtcSWj2I\/AAAAAAAAAG8\/xUAhpeW8FKg3TvIAPcIksOXv3yIaBjhFwCLcBGAs\/s640\/%25D0%2591%25D0%25B5%25D0%25B7%25D1%258B%25D0%25BC%25D1%258F%25D0%25BD%25D0%25BD%25D1%258B%25D0%25B9.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EКомпьютер, а точнее установленная на нем музыкальная программа, при получении с MIDI-входа сообщения NOTE ON воспроизводит ноту с заданной частотой и громкостью (частота ноты определяется ее номером). Соответственно, NOTE OFF используется для снятия ноты. Здесь есть момент, имеющий отношение к нашим MIDI-барабанам: большинство звуков ударных имеют фиксированное время звучания, и управлять их длительностью с помощью команды NOTE OFF мы не можем. Тем не менее данная команда должна рано или поздно поступить, как того требует спецификация. Также отмечу, что для перкуссии в стандарте MIDI зарезервирован отдельный 10-й канал, поэтому Ардуино будет передавать в сообщениях номер канала 9 (нумерация с 0).\u003Cbr \/\u003E\u003Cbr \/\u003EКак было сказано ранее, для воспроизведения звука требуется установка соответствующей программы. И такой подход применялся во всех публикациях на данную тему которые мне попадались. При этом входящие с Ардуино сообщения должны перенаправляться на MIDI-вход, например, при помощи программы Hairless MIDI \u0026lt;-\u0026gt; Serial. Я не музыкант, ничего подобного у меня на компьютере не установлено. И захламлять систему ненужным ПО не хотелось бы. Я поступил иначе: написал свою программу, которая читает сообщения из указанного COM порта и воспроизводит соответствующие звуки. Мне для написания ПО ближе всего Delphi, но т.к. это платный продукт, то для размещения здесь готовой программы и исходников к ней я воспользовался бесплатной средой Lazarus. В своей программе можно было бы отойти от формата сообщений MIDI, я рассматривал вариант с передачей номера барабана вместо конкретной ноты. И уже в программе можно сопоставить каждому барабану свой инструмент. Но в итоге я оставил эту затею, по крайней мере для публикации. Пусть лучше это будет MIDI-совместимое решение.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/GiSCbkNoZaQ\/0.jpg\" frameborder=\"0\" height=\"532\" src=\"https:\/\/www.youtube.com\/embed\/GiSCbkNoZaQ?feature=player_embedded\" width=\"640\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003EВот и видео работы моих барабанов. Ниже есть ссылка для скачивания скетча и исходников программы для компьютера. Есть еще один момент, о котором стоит упомянуть: громкость барабанов. Чем сильнее удар, тем громче должен быть звук. Силу удара можно определить, сделав несколько считываний с пьезоизлучателя, по ним вычисляетсясреднее значение и уже на его основе можно рассчитать значение громкости. Но я хочу напомнить, что барабаны создавались как игрушка ребенку, поэтому я не стал так заморачиваться и при каждом ударе в MIDI-сообщении передается максимальная громкость - 127. Возможно, позже вернусь к данной теме и попробую доработать этот момент.\u003Cbr \/\u003E\u003Ca href=\"https:\/\/drive.google.com\/file\/d\/0Bzaa2zpsYEBnRW1hRlVBYXpJMFU\/view?usp=sharing\"\u003E\u003Cbr \/\u003E\u003C\/a\u003E\u003Ca href=\"http:\/\/clc.la\/arduinomididrums\" target=\"_blank\"\u003EСкетч для Ардуино\u0026nbsp;и программа для компьютера\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/clc.la\/arduinomididrums_lazarus\" target=\"_blank\"\u003EИсходники для Lazarus\u003C\/a\u003E\u0026nbsp;(в архиве также есть необходимый компонент для работы с COM портом)\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/4110389009122291911\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/08\/arduino-midi-drums.html#comment-form","title":"Комментарии: 18"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4110389009122291911"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4110389009122291911"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/08\/arduino-midi-drums.html","title":"Arduino MIDI-drums - барабаны из Ардуино"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-jg8AC84Bq8o\/WYcJ-B65SiI\/AAAAAAAAAHs\/llobCyXKeUA8huM78F1_eJJrHu2f99AWgCLcBGAs\/s72-c\/SAM_0735.JPG","height":"72","width":"72"},"thr$total":{"$t":"18"}}]}});