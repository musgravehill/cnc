// API callback
related_results_labels_thumbs({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-794788004739538112"},"updated":{"$t":"2019-04-15T11:47:52.329+03:00"},"category":[{"term":"ардуино"},{"term":"подключение"},{"term":"микросхема"},{"term":"программатор"},{"term":"энергопотребление"},{"term":"проект"},{"term":"энкодер вращения"},{"term":"lcd"},{"term":"spi"},{"term":"arduino pro mini"},{"term":"atmega328p"},{"term":"tiny"},{"term":"дребезг контактов"},{"term":"загрузчик"},{"term":"прерывания"},{"term":"digispark"},{"term":"midi"},{"term":"пьезоизлучатель"},{"term":"Светодиодная матрица"},{"term":"блютуз"},{"term":"датчик"},{"term":"фоторезистор"}],"title":{"type":"text","$t":"Про Ардуино и не только"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/-\/%D1%8D%D0%BD%D0%BA%D0%BE%D0%B4%D0%B5%D1%80+%D0%B2%D1%80%D0%B0%D1%89%D0%B5%D0%BD%D0%B8%D1%8F?alt=json-in-script\u0026max-results=6"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/search\/label\/%D1%8D%D0%BD%D0%BA%D0%BE%D0%B4%D0%B5%D1%80%20%D0%B2%D1%80%D0%B0%D1%89%D0%B5%D0%BD%D0%B8%D1%8F"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"5"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"6"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-4780808054013150817"},"published":{"$t":"2018-10-12T15:22:00.000+03:00"},"updated":{"$t":"2019-04-09T09:57:31.432+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"LiquidCrystal_I2C_Ext - библиотека для создания меню на Ардуино"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003EЯ обратил внимание, что тема создания меню на Ардуино и ЖК дисплее весьма популярна. И ей уже посвящена одна из моих публикаций. Но я понимаю, что для новичков адаптация моего скетча может показаться нетривиальной задачей. Поэтому я решил написать библиотеку для создания меню на Ардуино и ЖК дисплее с I2C управлением, которую было бы легко использовать даже начинающему ардуинщику.\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003EВ моем распоряжении имеется ЖК дисплей 20x4 с I2C интерфейсом, к сожалению без поддержки кириллицы. Для работы с ним нужна библиотека, я использую LiquidCrystal_I2C. И, чтобы моя библиотека не была отдельной надстройкой, завязанной на LiquidCrystal_I2C, я решил доработать последнюю, добавив в нее новые функции. И речь не только о создании меню: я добавил в библиотеку различные наработки, накопившиеся у меня за время работы с данным дисплеем.\u003Cbr \/\u003E\u003Cbr \/\u003EКак и прежде для навигации по меню необходим инкрементный энкодер с кнопкой, например, KY-040. Код для работы с ним был помещен непосредственно в библиотеку. Необходимо лишь указать к каким выводам Ардуино подключен энкодер.\u003Cbr \/\u003E\u003Cbr \/\u003EПолучившуюся библиотеку я назвал LiquidCrystal_I2C_Ext, скачать ее можно по ссылке\u0026nbsp;\u003Ca href=\"http:\/\/clc.la\/LiquidCrystal_I2C_Ext\" target=\"_blank\"\u003Ehttp:\/\/clc.la\/LiquidCrystal_I2C_Ext\u003C\/a\u003E . По сравнению с предшественницей в ней появились следующие функции:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003E\u003Cb\u003EprintAt(x, y, text)\u003C\/b\u003E – вывод текста на дисплей с указанной позиции.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003Eprintf(format, …)\u003C\/b\u003E – форматированный вывод текста. Лично мне очень не хватало этой функции. Если раньше приходилось делать несколько вызовов print, или выводить текст в промежуточный буфер функцией sprintf, то сейчас достаточно одного вызова printf.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EprintfAt(x, y, format, …)\u003C\/b\u003E – форматированный вывод с указанной позиции.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EattachEncoder(pinA, pinB, pinBtn)\u003C\/b\u003E – сообщает библиотеке, к каким выводам Ардуино подключен энкодер. Должна быть вызвана перед использованием описанных далее функций.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EgetEncoderState()\u003C\/b\u003E – опрос состояния энкодера. Возвращает значение типа eEncoderState (перечисляемый тип, описан в библиотеке как {eNone, eLeft, eRight, eButton}).\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EprintMultiline(text)\u003C\/b\u003E – вывод длинного текста с возможностью вертикальной прокрутки. Возврат из функции осуществляется при нажатии кнопки энкодера.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputVal(title, min, max, default, [step])\u003C\/b\u003E – ввод значения путем вращения ручки энкодера. title – заголовок; параметры min и max задают диапазон, в котором может изменяться значение; default – начальное значение; step –\u0026nbsp;величина приращения, по умолчанию равна 1. Выход из функции осуществляется при нажатии кнопки энкодера.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputValAt(x, y, min, max, default, [step])\u003C\/b\u003E – аналогична функции inputVal, но в отличие от нее не очищает дисплей при вызове и ввод значения осуществляется с указанной позиции. Данная функция может использоваться в паре с printf\/printfAt, когда требуется вывести не статичный заголовок.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputValBitwise(title, value, precision, [scale], [signed])\u003C\/b\u003E – в отличие от функции inputVal, которая подходит для ввода значений из небольшого диапазона, inputValBitwise позволяет вводить значения путем редактирования отдельных разрядов числа. Параметр title определяет заголовок; value – ссылка на переменную, в которую будет помещен результат ввода; precision – общее количество разрядов в числе; scale –\u0026nbsp;количество разрядов после запятой, значение по умолчанию 0; signed –\u0026nbsp;разрешает (при значении 1) или запрещает (при значении 0 –\u0026nbsp;по умолчанию) ввод отрицательных чисел. Функция возвращает 1, если пользователь подтвердил ввод, 0, если отказался.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EinputStrVal(title, buffer, length, available_symbols)\u003C\/b\u003E – аналогично функции inputValBitwise предоставляет возможность поразрядного ввода, но кроме цифр могут быть введены и другие символы. Параметр title определяет заголовок; buffer – ссылка на символьный буфер, в который будет помещен результат ввода; length – количество вводимых символов; параметр available_symbols –\u0026nbsp;это строка символов, доступных для ввода. Функция возвращает 1, если пользователь подтвердил ввод, 0, если отказался.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EselectVal(title, list_of_values, count, selected_index)\u003C\/b\u003E – позволяет выбрать значение из списка list и возвращает индекс выбранного элемента.\u0026nbsp; title – отображаемый на дисплее заголовок, list – список значений для выбора, представляет собой массив значений типа char*, String или int; count – количество элементов; selected_index – индекс выбранного по умолчанию элемента.\u003C\/li\u003E\u003Cli\u003E\u003Cb\u003EshowMenu(menu, menu_length, show_title)\u003C\/b\u003E – отображает меню и возвращает ключ выбранного элемента. menu – массив элементов типа sMenuItem; menu_length – длина меню; show_title – признак необходимости отображения заголовка.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003E\u003Ci\u003EОбращаю внимание тех, кто уже скачивал библиотеку ранее. С момента публикации данной статьи в библиотеку были внесены несколько значительных изменений. Например, больше нет функций inputIntVal и inputIntValAt, которые работали только с целыми числами, вместо них теперь доступны inputVal и inputValAt - они подходят как для ввода целых чисел, так и для ввода чисел с плавающей точкой. Аналогичные изменения были внесены в функцию поразрядного ввода чисел. Со временем я добавлю в библиотеку файл changelog для описания вносимых изменений. И, возможно, придется подобрать для библиотеки другое имя, поскольку\u0026nbsp;LiquidCrystal_I2C_Ext уже используется.\u003C\/i\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EЯ приведу несколько примеров с данными функциями, чтобы не осталось вопросов по их использованию.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EprintAt, printf, printfAt\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E hello[] = \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Hello, world!\"\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003EString\u003C\/span\u003E s = \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"String example\"\u003C\/span\u003E;\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"millis=%lu\"\u003C\/span\u003E, \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E());\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, hello);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E, s);\u003Cbr \/\u003E  lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"%s\"\u003C\/span\u003E, s.c_str());\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EФункция printAt поддерживает те же типы данных, что и print: вы можете выводить на дисплей целые и дробные числа, текстовые строки (будь то массив символов или переменная типа String). А при работе с функциями форматированного вывода не забывайте, что они не поддерживают тип String и передавать им нужно указатель на строку в стиле Си. Для этого достаточно вызвать функцию c_str() класса String, в примере выше это показано.\u003Cbr \/\u003E\u003Cbr \/\u003EГоворя о форматированном выводе, хочу отметить еще один момент. Реализация функций семейства printf на Ардуино поддерживает не все команды форматирования. Это было сделано с целью уменьшить размер библиотеки. Лично я столкнулся с невозможностью указать в формате printf значения width и precision через переменную (т.е. через символ *).\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EattachEncoder, getEncoderState\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E x = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Счетчик\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E  lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"%d \"\u003C\/span\u003E, x);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Опрашиваем состояние энкодера\u003C\/span\u003E\u003Cbr \/\u003E  eEncoderState EncoderState = lcd.getEncoderState();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eswitch\u003C\/span\u003E (EncoderState) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eLeft: \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ При вращении влево уменьшаем счетчик\u003C\/span\u003E\u003Cbr \/\u003E      x--;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eRight: \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ При вращении вправо увеличиваем счетчик\u003C\/span\u003E\u003Cbr \/\u003E      x++;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eButton: \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ При нажатии обнуляем\u003C\/span\u003E\u003Cbr \/\u003E      x = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eNone: \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Состояние энкодера не изменилось. Выходим из функции\u003C\/span\u003E\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E  }\u003Cbr \/\u003E  lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"%d \"\u003C\/span\u003E, x); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Выводим значение счетчика на дисплей\u003C\/span\u003E\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv\u003EВ данном примере выполняется подключение энкодера и опрос его состояния в цикле. При вращении энкодера изменяется значение переменной x и выводится на дисплей. Нажатие на кнопку приводит к обнулению переменной.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003EprintMultiline\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;avr\/pgmspace.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E text_1[] PROGMEM = \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Using PROGMEM example\"\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E text_2[] PROGMEM = \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"This text is stored in FLASH\"\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E* \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etext\u003C\/span\u003E[] PROGMEM = {text_1, text_2};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E *\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebuffer\u003C\/span\u003E;\u003Cbr \/\u003E  lcd.printMultiline(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebuffer\u003C\/span\u003E = (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E*) malloc(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E30\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Выделяем память для чтения строки из памяти программ\u003C\/span\u003E\u003Cbr \/\u003E  strcpy_P(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebuffer\u003C\/span\u003E, (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E*)pgm_read_word(\u0026amp;(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etext\u003C\/span\u003E[\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E]))); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Считываем строку из памяти программ\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printMultiline(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebuffer\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Выводим содержимое буфера на экран\u003C\/span\u003E\u003Cbr \/\u003E  strcpy_P(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebuffer\u003C\/span\u003E, (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E*)pgm_read_word(\u0026amp;(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Etext\u003C\/span\u003E[\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E])));\u003Cbr \/\u003E  lcd.printMultiline(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebuffer\u003C\/span\u003E);\u003Cbr \/\u003E  free(\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebuffer\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ И освобождаем буфер\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printMultiline(F(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Using F() macro example. Press button to continue.\"\u003C\/span\u003E));\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: left;\"\u003EНа функции printMultiline нужно остановиться поподробнее. Она позволяет выводить на дисплей длинные строки с возможностью прокрутки. Но, объявив несколько таких строк в своем скетче, при компиляции вы можете заметить, как быстро они \"съедают\" память данных. Например, в Ардуино Уно для хранения данных доступно всего 2кб, тогда как для кода программы отведено 32кб. Поэтому при наличии в программе большого объема текстовых данных целесообразно разместить их в памяти программ. Для этого используется ключевое слово PROGMEM.\u0026nbsp;\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EPROGMEM –\u0026nbsp;это модификатор переменных, он сообщает компилятору, что указанная переменная должна быть размещена не в памяти данных, а в памяти программ. Работает этот модификатор только с типами данных, объявленными в файле pgmspace.h, частью которой он является. Чтобы впоследствии процессор мог что-то сделать с этими данными, они должны быть скопированы из flash в SRAM. Для этого в примере выше выделяется буфер, в который происходит считывание строк. После того как данные выведены на дисплей буфер может быть освобожден.\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EЕще один вариант размещения строки в памяти программ –\u0026nbsp;это использование макроса F() непосредственно в функции printMultiline. В примере это также показано.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EinputVal, inputValAt\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Запрашиваем длину массива:\u003C\/span\u003E\u003Cbr \/\u003E  uint8_t len = lcd.inputVal(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input array len\"\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E8\u003C\/span\u003E);\u003Cbr \/\u003E  uint8_t A[len];\u003Cbr \/\u003E  uint8_t t;\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Запрашиваем элементы массива:\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (uint8_t i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; len; i++) {\u003Cbr \/\u003E    lcd.printfAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input A[%d]: \"\u003C\/span\u003E, i);\u003Cbr \/\u003E    A[i] = lcd.inputValAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E12\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E9\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Сортируем массив:\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (uint8_t i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; len - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E; i++) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (uint8_t j = i + \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E; j \u0026lt; len; j++) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E(A[i] \u0026gt; A[j]){\u003Cbr \/\u003E        t = A[i];\u003Cbr \/\u003E        A[i] = A[j];\u003Cbr \/\u003E        A[j] = t;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Выводим отсортированный массив на дисплей:\u003C\/span\u003E\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Sorted array:\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (uint8_t i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; len; i++)\u003Cbr \/\u003E    lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"%d \"\u003C\/span\u003E, A[i]);\u003Cbr \/\u003E  \u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Для продолжения ждем нажатия кнопки:\u003C\/span\u003E\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Press button\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"to continue\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() != eButton);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: left;\"\u003EДля демонстрации использования функций inputVal и inputValAt в данном примере предлагается ввести длину массива, а затем элементы массива. Введенный массив сортируется и выводится на дисплей. Отличие этих двух функций состоит в том, что inputValAt при вызове не очищает дисплей и позволяет предварительно вывести на дисплей заголовок, используя printf. В скетче выше это используется для отображения индекса вводимого элемента массива. \u003C\/div\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EinputValBitwise\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E v = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (lcd.inputValBitwise(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input value\"\u003C\/span\u003E, v, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E))\u003Cbr \/\u003E    lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"You entered %ld\"\u003C\/span\u003E, v);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input canceled\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Press button\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"to continue\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() != eButton); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Для продолжения ждем нажатия кнопки\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EВ данном скетче для ввода значения используется функция inputValBitwise. В параметрах функции присутствует заголовок, переменная, в которую будет помещено введенное значение, и количество разрядов для ввода. При подтверждении ввода на дисплей выводится соответствующее сообщение.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EinputStrVal\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E ip[] = \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"192.168.001.001\"\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (lcd.inputStrVal(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input IP\"\u003C\/span\u003E, ip, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E15\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"0123456789\"\u003C\/span\u003E)){\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"You entered:\"\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, ip);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input canceled\"\u003C\/span\u003E);\u003Cbr \/\u003E  press_button_to_continue();\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E press_button_to_continue(){\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Press button\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.printAt(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E3\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"to continue\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewhile\u003C\/span\u003E (lcd.getEncoderState() != eButton);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EЗдесь функция inputStrVal используется для ввода IP адреса. При вызове функции содержимое переданного буфера рассматривается как значение по умолчанию и выводится на дисплей. Последний параметр функции определяет разрешенные для ввода символы, в данном случае только цифры.\u0026nbsp;Если буфер содержит символы, которые не могут быть введены, то их не удастся изменить. Таким образом можно реализовать маскированный ввод.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EselectVal\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E index;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003EString\u003C\/span\u003E list[] = {\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Off\"\u003C\/span\u003E, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"On\"\u003C\/span\u003E};\u003Cbr \/\u003E  index = lcd.selectVal(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Turn backlight\"\u003C\/span\u003E, list, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E, lcd.getBacklight());\u003Cbr \/\u003E  lcd.setBacklight(index);\u003Cbr \/\u003E  lcd.printf(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Backlight turned %s\"\u003C\/span\u003E, list[index].c_str());\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2000\u003C\/span\u003E);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EФункция selectVal очень полезна при выборе значения из списка. Эта задача может быть решена и с использованием меню, но преимущество функции selectVal состоит в том, что она не только позволяет выбрать значение, но еще и показывает текущее выбранное значение. Функция работает с массивами значений типа char*, String или int и возвращает индекс выбранного элемента.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003Cb\u003EshowMenu\u003C\/b\u003E\u003C\/h2\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;Wire.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C_Ext.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C_Ext lcd(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x27\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E20\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Пины для энкодера\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinCLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinDT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pinSW  4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Перечислим значения, используемые в меню для задания связи родитель-потомок\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eenum\u003C\/span\u003E {mkBack, mkRoot, mkRun, mkOptions, mkMode, mkSpeed, mkLog, mkSelftest, mkHelp, mkFAQ, mkIndex, mkAbout};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Опишем меню\u003C\/span\u003E\u003Cbr \/\u003EsMenuItem menu[] = {\u003Cbr \/\u003E  {mkBack, mkRoot, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Menu demo\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkRun, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Run\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkOptions, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Options\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkMode, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Mode\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkSpeed, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Speed\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkLog, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Print log\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkSelftest, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Selftest\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkOptions, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Back\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkHelp, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Help\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkFAQ, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"FAQ\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkIndex, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Index\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkAbout, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"About\"\u003C\/span\u003E},\u003Cbr \/\u003E      {mkHelp, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Back\"\u003C\/span\u003E},\u003Cbr \/\u003E    {mkRoot, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Exit menu\"\u003C\/span\u003E}\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Определим колчество элементов в меню\u003C\/span\u003E\u003Cbr \/\u003Euint8_t menuLen = \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(menu) \/ \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(sMenuItem);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.attachEncoder(pinDT, pinCLK, pinSW);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  uint8_t selectedMenuItem = lcd.showMenu(menu, menuLen, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkRun)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Run selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkMode)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Mode selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkSpeed)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Speed selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkLog)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Print log selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkSelftest)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Selftest selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkFAQ)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"FAQ selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkIndex)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Index selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkAbout)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"About selected\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (selectedMenuItem == mkBack)\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Exit selected\"\u003C\/span\u003E);\u003Cbr \/\u003E\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2000\u003C\/span\u003E);\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EНу и, наконец, последняя функция –\u0026nbsp;showMenu, которая берет на себя отрисовку меню и навигацию по нему. Работу с ней можно разделить на 3 этапа. Сначала нужно описать меню. Для этого в библиотеке определена структура sMenuItem:\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Estruct\u003C\/span\u003E sMenuItem {\u003Cbr \/\u003E  uint8_t parent;\u003Cbr \/\u003E  uint8_t key;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E    *caption;\u003Cbr \/\u003E};\u003C\/pre\u003E\u003Cbr \/\u003EПараметры parent и key служат для задания иерархии, caption –\u0026nbsp;указатель на название элемента меню. В примере показано, как описывается меню в виде массива элементов sMenuItem.\u003Cbr \/\u003E\u003Cbr \/\u003EВ качестве parent и key могут быть использованы целочисленные значения, начиная с 1. Но гораздо удобнее определить для них символьные имена, т.е. работать с перечислением. Обратите внимание на то, что первым в перечислении определено значение mkBack, ему соответствует значение 0. Данное значение является служебным и используется для пунктов меню, отвечающих за возврат на уровень выше.\u003Cbr \/\u003E\u003Cbr \/\u003EСледующий этап –\u0026nbsp;вызов функции showMenu. Ее параметрами являются описанное ранее меню, его длина и признак отвечающий за вывод заголовка.\u003Cbr \/\u003E\u003Cbr \/\u003EПри выборе пункта меню, не имеющего подменю, функция возвращает соответствующее ему значение key. И остается последний этап –\u0026nbsp;проанализировать вернувшееся значение при помощи if или case и выполнить соответствующее выбранному элементу действие.\u003Cbr \/\u003E\u003Cbr \/\u003EПо-моему, получилась интересная библиотека.\u0026nbsp; Есть некоторые вещи, которые хотелось бы доработать (например, в меню нет прокрутки длинных названий),\u0026nbsp; но я решил их пока отложить, т.к. сейчас занимаюсь другими проектами. В общем скачивайте, пробуйте, оставляйте комментарии.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/4780808054013150817\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/10\/LiquidCrystalI2CExt.html#comment-form","title":"Комментарии: 67"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4780808054013150817"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4780808054013150817"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/10\/LiquidCrystalI2CExt.html","title":"LiquidCrystal_I2C_Ext - библиотека для создания меню на Ардуино"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"thr$total":{"$t":"67"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-4256446582282147909"},"published":{"$t":"2018-06-24T18:43:00.000+03:00"},"updated":{"$t":"2019-03-20T21:26:28.459+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"spi"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"микросхема"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"проект"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"Генератор сигналов на AD9833"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s1600\/AD9833.jpg\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Генератор AD9833\" border=\"0\" height=\"320\" src=\"https:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s320\/AD9833.jpg\" title=\"AD9833 подключение к Ардуино\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EAD9833 - это программируемый генератор сигналов с низким энергопотреблением. Позволяет генерировать сигналы с частотой до 12.5МГц синусоидальной, треугольной и прямоугольной формы. Программирование осуществляется с использованием трехпроводного интерфейса SPI и не составляет труда. Ниже приведены основные характеристики микросхемы:\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EЦифровое программирование частоты и фазы.\u003C\/li\u003E\u003Cli\u003EПотребляемая мощность 12.65 мВт при напряжении 3 В.\u003C\/li\u003E\u003Cli\u003EДиапазон выходных частот от 0 МГц до 12.5 МГц.\u003C\/li\u003E\u003Cli\u003EРазрешение 28 бит (0.1 Гц при частоте опорного сигнала 25 МГц).\u003C\/li\u003E\u003Cli\u003EСинусоидальные, треугольные и прямоугольные выходные колебания.\u003C\/li\u003E\u003Cli\u003EНапряжение питания от 2.3 В до 5.5 В.\u003C\/li\u003E\u003Cli\u003EТрехпроводной интерфейс SPI.\u003C\/li\u003E\u003Cli\u003EРасширенный температурный диапазон: от –40°C до +105°C.\u003C\/li\u003E\u003Cli\u003EОпция пониженного энергопотребления.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EБолее подробную информацию вы можете найти в \u003Ca href=\"http:\/\/clc.la\/ad9833_datasheet\" target=\"_blank\"\u003Eдаташите\u003C\/a\u003E. В характеристиках также заявлено, что микросхема не требует внешних компонентов, но здесь производитель лукавит: обвязка и источник опорной частоты все же нужны. На Али продаются модули AD9833 с необходимой обвязкой и кварцевым генератором на 25 МГц, как раз с таким модулем я и собираюсь экспериментировать. Данный модуль имеет следующие выводы:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EVCC – плюс питания для цифровых и аналоговых цепей генератора.\u003C\/li\u003E\u003Cli\u003EDGND – цифровая земля.\u003C\/li\u003E\u003Cli\u003ESDATA – вход данных интерфейса SPI. Передача осуществляется 16-битными словами.\u003C\/li\u003E\u003Cli\u003ESCLK – вход тактового сигнала SPI. Используется второй режим работы: (CPOL = 1, CPHA = 0).\u003C\/li\u003E\u003Cli\u003EFSYNC – выбор микросхемы. Перед началом передачи данных должен быть установлен в 0, по завершении в 1.\u003C\/li\u003E\u003Cli\u003EAGND – аналоговая земля.\u003C\/li\u003E\u003Cli\u003EOUT – выход генератора.\u003C\/li\u003E\u003C\/ul\u003EПопробуем подключить этот модуль к Ардуино и научиться им управлять. Для начала ознакомимся с его функциональной схемой:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cimg alt=\"Функциональная схема AD9833\" border=\"0\" height=\"368\" src=\"https:\/\/2.bp.blogspot.com\/-69XH7GVpwgw\/WwpkdLAdMsI\/AAAAAAAAAac\/ZSRJJFMHR5gC4B_WuFojx1aAdrnlTiKDQCK4BGAYYCw\/s640\/AD9833_Functional_Diagram.png\" title=\"\" width=\"640\" \/\u003E\u003C\/div\u003E\u003Cbr \/\u003EAD9833 состоит из следующих основных частей: два регистра выбора частоты, аккумулятор фазы, два регистра выбора фазы и сумматор смещения фазы (вместе эти компоненты составляют генератор с цифровым управлением - NCO), SIN ROM для преобразования информации о фазе в амплитуду и 10-разрядный цифро-аналоговый преобразователь.\u003Cbr \/\u003E\u003Cbr \/\u003EИз схемы видно, что данные с интерфейса SPI передаются в управляющий регистр, регистры выбора фазы и частоты. Именно они определяют сигнал на выходе генератора. И программирование генератора сводится к изменению содержимого указанных регистров.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch3 style=\"text-align: left;\"\u003EУправляющий регистр\u003C\/h3\u003EЭто 16-разрядный регистр, управляющий работой генератора. Подробное описание его битов приведено ниже в таблице. Схема из даташита также наглядно демонстрирует их назначение:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-AiANhL6sEUA\/Wwpk8roXhxI\/AAAAAAAAAao\/fgu6ISaPJC4bdzyz8lYUsTZr4F_3XHStwCK4BGAYYCw\/s1600\/AD9833_Control_Bits.png\" imageanchor=\"1\"\u003E\u003Cimg border=\"0\" height=\"316\" src=\"https:\/\/2.bp.blogspot.com\/-AiANhL6sEUA\/Wwpk8roXhxI\/AAAAAAAAAao\/fgu6ISaPJC4bdzyz8lYUsTZr4F_3XHStwCK4BGAYYCw\/s640\/AD9833_Control_Bits.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Ctable style=\"width: 100%;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth width=\"36\"\u003EБит \u003C\/th\u003E\u003Cth width=\"124\"\u003EНазвание \u003C\/th\u003E\u003Cth width=\"485\"\u003EНазначение \u003C\/th\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E15, 14 \u003C\/td\u003E\u003Ctd\u003EDB15, DB14 \u003C\/td\u003E\u003Ctd\u003EЧтобы AD9833 понял, что принятое по SPI 16-битное слово содержит новое значение для управляющего регистра, два старших бита в слове должны быть установлены в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E13 \u003C\/td\u003E\u003Ctd\u003EB28 \u003C\/td\u003E\u003Ctd\u003EРегистры частоты AD9833 имеют разрядность 28 бит, поэтому для изменения их содержимого требуется передача двух 16-битных слов. Однако в некоторых случаях требуется изменить только старшую или младшую часть регистра частоты. Здесь и используется данный признак: B28 = 1 говорит о том, что необходимо обновить регистр частоты целиком и его новое значение будет передано двумя последовательными записями. Первая запись содержит 14 младших бит, вторая 14 старших бит. Первые два бита в обеих записях определяют регистр частоты, в который будет записано передаваемое значение и должны быть одинаковыми. Обновление регистра частоты происходит после получения полного слова, поэтому запись промежуточного значения в регистр исключена. B28 = 0 позволяет обновить отдельно старшую или младшую часть регистра. Какая именно часть будет изменена определяется управляющим битом HLB. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E12 \u003C\/td\u003E\u003Ctd\u003EHLB \u003C\/td\u003E\u003Ctd\u003EБит HLB определяет, какая из частей регистра частоты (младшая или старшая) будет перезаписана. Используется при B28 = 0. При B28 = 1 значение этого бита игнорируется. HLB = 1 позволяет обновить старшие 14 бит регистра частоты; HLB = 0 позволяет обновить младшие 14 бит регистра частоты. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E11 \u003C\/td\u003E\u003Ctd\u003EFSELECT \u003C\/td\u003E\u003Ctd\u003EБит FSELECT определяет, какой из регистров используется в аккумуляторе фазы – FREQ0 или FREQ1. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E10 \u003C\/td\u003E\u003Ctd\u003EPSELECT \u003C\/td\u003E\u003Ctd\u003EБит PSELECT определяет, данные какого из регистров PHASE0 или PHASE1 добавляются к выходу аккумулятора фазы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E9 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E8 \u003C\/td\u003E\u003Ctd\u003ERESET \u003C\/td\u003E\u003Ctd\u003ERESET = 1 сбрасывает внутренние регистры генератора в 0. Сброс не затрагивает регистры управления, частоты и фазы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E7 \u003C\/td\u003E\u003Ctd\u003ESLEEP1 \u003C\/td\u003E\u003Ctd\u003EПри SLEEP1 = 1 запрещается внутреннее тактирование, приостанавливается работа NCO и выход генератора остается в своем текущем состоянии. При SLEEP1 = 0 тактирование разрешено. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E6 \u003C\/td\u003E\u003Ctd\u003ESLEEP12 \u003C\/td\u003E\u003Ctd\u003EПри SLEEP12 = 1 отключается внутренний ЦАП. Это может быть полезно для генерации прямоугольных импульсов, при которой не требуется выполнение цифро-аналоговых преобразований. При SLEEP12 = 0 внутренний ЦАП активен. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E5 \u003C\/td\u003E\u003Ctd\u003EOPBITEN \u003C\/td\u003E\u003Ctd\u003EДанный бит вместе с битом MODE управляют выходом генератора. При OPBITEN = 1 внутренний ЦАП отключается от выхода VOUT и для генерации выходного сигнала используется значение старшего значащего бита с входа ЦАП, что позволяет получить на выходе генератора прямоугольные импульсы. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E4 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E3 \u003C\/td\u003E\u003Ctd\u003EDIV2 \u003C\/td\u003E\u003Ctd\u003EИспользуется в паре со значением OPBITEN = 1. При DIV2 = 1 значение старшего значащего бита данных с входа ЦАП подается напрямую на выход VOUT. DIV2 = 0 позволяет задействовать делитель частоты и уменьшить частоту выходного сигнала вдвое. При OPBITEN = 0 значение данного бита игнорируется. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E2 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E1 \u003C\/td\u003E\u003Ctd\u003EMODE \u003C\/td\u003E\u003Ctd\u003EДанный бит вместе с битом OPBITEN управляют выходом генератора. При OPBITEN = 1 бит MODE должен быть установлен в 0. Значение MODE = 0 позволяет получить на выходе генератора синусоидальный сигнал. При MODE = 1 на выходе будет треугольный сигнал. \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E0 \u003C\/td\u003E\u003Ctd\u003EЗарезервирован \u003C\/td\u003E\u003Ctd\u003EДанный бит зарезервирован и должен быть установлен в 0. \u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003EИ для лучшего понимания назначения битов OPBITEN, MODE и DIV2 я приведу таблицу с их допустимыми комбинациями и формой результирующих сигналов на выходе:\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Ctable style=\"width: 100%;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth width=\"73px\"\u003EOPBITEN \u003C\/th\u003E\u003Cth width=\"73px\"\u003EMODE \u003C\/th\u003E\u003Cth width=\"73px\"\u003EDIV2 \u003C\/th\u003E\u003Cth\u003EСигнал на выходе VOUT \u003C\/th\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\" width=\"73\"\u003EX \u003C\/td\u003E\u003Ctd\u003EСинусоидальный \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003EX \u003C\/td\u003E\u003Ctd\u003EТреугольный \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd\u003EПрямоугольный с частотой F\/2 \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E0 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd\u003EПрямоугольный с частотой F \u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003E1 \u003C\/td\u003E\u003Ctd style=\"text-align: center;\"\u003EX \u003C\/td\u003E\u003Ctd\u003EЗарезервировано \u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch3 style=\"text-align: left;\"\u003EРегистры частоты и фазы\u003C\/h3\u003E\u003Cdiv\u003EГенератор AD9833 имеет 2 регистра частоты и 2 регистра фазы разрядностью 28 бит и 12 бит соответственно.\u0026nbsp;\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВыбор активного регистра частоты осуществляется установкой управляющего бита FSELECT: при FSELECT = 0 активным является FREQ0; при FSELECT = 1 активен регистр FREQ1. Результирующая частота на выходе генератора определяется следующим образом:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E(F\u003Csub\u003EMCLK\u003C\/sub\u003E \/ 2\u003Csup\u003E28\u003C\/sup\u003E) * FREQREG,\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003Eгде F\u003Csub\u003EMCLK\u003C\/sub\u003E – это опорная частота, FREQREG – значение, загруженное в активный регистр частоты. Таким образом, если мы хотим получить на выходе генератора сигнал с частотой 400Гц при опорной частоте 25МГц, в активный регистр\u0026nbsp; должно быть загружено значение:\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EFREQREG = F\u003Csub\u003EOUT\u003C\/sub\u003E*2\u003Csup\u003E28\u003C\/sup\u003E \/ F\u003Csub\u003EMCLK\u003C\/sub\u003E = 400Гц * 2\u003Csup\u003E28\u003C\/sup\u003E \/ 25МГц ≈ 4295\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EДля того чтобы загрузить значение FREQREG в регистр частоты необходимо старшие биты передаваемого по SPI значения установить в 01 для загрузки в FREQ0 или 10 для загрузки в FREQ1. Напомню, что общение с AD9833 осуществляется по SPI 16-битными словами.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EФаза выходного сигнала определяется следующим образом:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E(2π \/ 2\u003Csup\u003E12\u003C\/sup\u003E) * PHASEREG\u003Cbr \/\u003E\u003Cbr \/\u003Eсоответственно, значение для регистра фазы вычисляется по формуле:\u003Cbr \/\u003E\u003Cbr \/\u003EPHASEREG = PHASE*2\u003Csup\u003E12\u003C\/sup\u003E\u0026nbsp;\/ 2π\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EВ приведенных формулах PHASEREG – это значение активного регистра фазы. Выбор активного регистра осуществляется установкой управляющего бита PSELECT: при PSELECT = 0 активным является PHASE0; при PSELECT = 1 активен регистр PHASE1.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EПри записи нового значения в регистр фазы старшие биты должны быть установлены в 11, а выбор регистра, в который должно быть записано значение, осуществляется установкой бита 13: при нулевом его значении будет обновлен регистр PHASE0; при установке указанного бита в 1 будет обновлен регистр PHASE1. 12й бит не используется, а биты с 0 по 11 содержат значение для регистра фазы.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EРазрядность регистра частоты в 28 бит при опорной частоте 25МГц обеспечивает шаг 0.1Гц для установки частоты сигнала на выходе. А 12-битный регистр фазы обеспечивает разрешение 2π\/4096.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Ch3 style=\"text-align: left;\"\u003EТестовая программа для AD9833 на Ардуино\u003C\/h3\u003E\u003C\/div\u003E\u003Cdiv\u003EТеперь мы можем написать первую программу для AD9833. Схема подключения модуля AD9833 к Ардуино и скетч приведены ниже.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-Dwk89e02Dxg\/WwqLVPujOgI\/AAAAAAAAAa0\/17AslGl1lskkS4x3Duxy8vYhbHdlWqK2QCK4BGAYYCw\/s1600\/AD9833_Arduino.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Схема подключения AD9833 к Ардуино\" border=\"0\" height=\"428\" src=\"https:\/\/4.bp.blogspot.com\/-Dwk89e02Dxg\/WwqLVPujOgI\/AAAAAAAAAa0\/17AslGl1lskkS4x3Duxy8vYhbHdlWqK2QCK4BGAYYCw\/s640\/AD9833_Arduino.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EС подключением все просто: общение с модулем происходит по интерфейсу SPI, для которого на Ардуино отведены следующие пины:\u003Cbr \/\u003E\u003Cbr \/\u003ED10 - SS (Slave Select - выбор ведомого), к нему подключаем вывод FSYNC модуля.\u003Cbr \/\u003ED11 - MOSI (Master Out Slave In - выход ведущего, вход ведомого), к нему подключаем вывод SDATA.\u003Cbr \/\u003ED13 - SCK (Serial Clock - Тактовый сигнал), к нему подключаем вывод SCLK.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;SPI.h\u0026gt;\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2100\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0001 0000 0000 - Reset + DB28\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x50C7\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0101 0000 1100 0111 - Freq0 LSB (4295)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x4000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0100 0000 0000 0000 - Freq0 MSB (0)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0xC000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/1100 0000 0000 0000 - Phase0 (0)\u003C\/span\u003E\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0000 - Exit Reset\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E WriteAD9833(uint16_t Data){\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.beginTransaction(SPISettings(SPI_CLOCK_DIV2, MSBFIRST, SPI_MODE2));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(SS, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003ELOW\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdelayMicroseconds\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.transfer16(Data);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalWrite\u003C\/span\u003E(SS, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EHIGH\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESPI\u003C\/span\u003E.endTransaction();\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2000\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0000 - Синусоидальный сигнал\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2002\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0000 0010 - MODE=1 - Треугольный\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2020\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0010 0000 - OPBITEN=1 - Прямоугольный (MSB\/2)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E  WriteAD9833(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x2028\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/0010 0000 0010 1000 - OPBITEN=1, DIV2=1 - Прямоугольный (MSB)\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5000\u003C\/span\u003E);\u003Cbr \/\u003E }\u003C\/pre\u003E\u003Cbr \/\u003EВ данном скетче выполняются следующие действия:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EПри первом вызове функции WriteAD9833 производится установка управляющего регистра: бит RESET устанавливается в 1 для выполнения сброса; бит DB28 устанавливается в 1 для перезаписи всего содержимого регистра частоты; биты FSELECT и PSELECT содержат 0, поэтому для генерации выходного сигнала будут использоваться регистры FREQ0 и PHASE0.\u003C\/li\u003E\u003Cli\u003EСледующие два вызова передают значение 4295 в регистр частоты FREQ0. Данное значение умещается в 14 младших разрядах, поэтому в старшие разряды регистра записываем нули.\u003C\/li\u003E\u003Cli\u003EСдвиг по фазе не требуется - запишем в регистр PHASE0 значение 0\u003C\/li\u003E\u003Cli\u003EПоследним вызовом WriteAD9833 в процедуре setup снимаем бит RESET, разрешая тем самым работу генератора. Результирующий сигнал поступает на вывод VOUT.\u003C\/li\u003E\u003Cli\u003EСледующие вызовы WriteAD9833 в функции loop обновляют содержимое управляющего регистра, перебирая комбинации битов MODE, OPBITEN и DIV2 для генерации сигнала синусоидальной, треугольной и прямоугольной форм.\u003C\/li\u003E\u003C\/ul\u003EВот как выглядит выходной сигнал генератора в виртуальном осциллографе:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-vG7Kyb1PBSI\/WwW6w_75aNI\/AAAAAAAAAZs\/O-niM5ZaTj4Z3p9GvEi8aQebn9B2NhE0ACK4BGAYYCw\/s1600\/AD9833_sin.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"347\" src=\"https:\/\/4.bp.blogspot.com\/-vG7Kyb1PBSI\/WwW6w_75aNI\/AAAAAAAAAZs\/O-niM5ZaTj4Z3p9GvEi8aQebn9B2NhE0ACK4BGAYYCw\/s640\/AD9833_sin.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EСинусоидальный сигнал (биты\u0026nbsp;MODE и\u0026nbsp;OPBITEN сброшены в 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-CGtEk6UmWoU\/WwW63YFtX6I\/AAAAAAAAAZ0\/Ljzt-KCBqTYm6Se4Z8OTUw1xJqwxtmenACK4BGAYYCw\/s1600\/AD9833_tri.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/2.bp.blogspot.com\/-CGtEk6UmWoU\/WwW63YFtX6I\/AAAAAAAAAZ0\/Ljzt-KCBqTYm6Se4Z8OTUw1xJqwxtmenACK4BGAYYCw\/s640\/AD9833_tri.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EТреугольный сигнал (MODE = 1, OPBITEN = 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-BLid2QyYDuQ\/WwW69XYCHaI\/AAAAAAAAAZ8\/eEH32LW-iSgkXWYUmRyP69W6axIL0G-9wCK4BGAYYCw\/s1600\/AD9833_MSBdiv2.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/3.bp.blogspot.com\/-BLid2QyYDuQ\/WwW69XYCHaI\/AAAAAAAAAZ8\/eEH32LW-iSgkXWYUmRyP69W6axIL0G-9wCK4BGAYYCw\/s640\/AD9833_MSBdiv2.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПрямоугольный сигнал (OPBITEN = 1, MODE = 0, DIV2 = 1)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-N_aGK0opjiM\/WwW7BWtx5qI\/AAAAAAAAAaI\/Ry6MUKMMdF0roHgOL1-5sIRKkvFFiC8QgCK4BGAYYCw\/s1600\/AD9833_MSB.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"348\" src=\"https:\/\/2.bp.blogspot.com\/-N_aGK0opjiM\/WwW7BWtx5qI\/AAAAAAAAAaI\/Ry6MUKMMdF0roHgOL1-5sIRKkvFFiC8QgCK4BGAYYCw\/s640\/AD9833_MSB.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EПрямоугольный сигнал (OPBITEN = 1, MODE = 0, DIV2 = 0)\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003EОбратите внимание: при генерации синусоидальных и треугольных импульсов, когда сигнал снимается с выхода ЦАП, его амплитуда изменяется в диапазоне 38мВ...0,65В. При генерации импульсов прямоугольной формы мы имеем дело с обычным цифровым сигналом с соответствующими уровнями напряжения. Так в последних двух осциллограммах логической единице соответствует напряжение ~4,5В.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ch3 style=\"text-align: left;\"\u003EГенератор на AD9833 с дисплеем и энкодером\u003C\/h3\u003E\u003Cdiv\u003EРазобравшись с управлением AD9833 можно приступать к созданию генератора с интерфейсом управления и индикацией. Для этого добавим в нашу схему энкодер вращения и жидкокристаллический дисплей:\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-nbGuCEW9QLo\/WyZuuKJXIEI\/AAAAAAAAAbY\/8CFdIHr9GCMlViToXqf7OEX_7Ass_IsfACK4BGAYYCw\/s1600\/AD9833_generator.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Схема генератора на AD9833 с дисплеем и энкодером KY-040\" border=\"0\" height=\"466\" src=\"https:\/\/4.bp.blogspot.com\/-nbGuCEW9QLo\/WyZuuKJXIEI\/AAAAAAAAAbY\/8CFdIHr9GCMlViToXqf7OEX_7Ass_IsfACK4BGAYYCw\/s640\/AD9833_generator.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/tsibrov.blogspot.com\/2018\/01\/arduino-text-menu.html\" target=\"_blank\"\u003EРанее\u003C\/a\u003E я писал о том, как можно сделать меню на Ардуино с энкодером вращения. И сейчас я взял такое меню за основу скетча, добавив в него функционал для работы с AD9833. Скачать скетч можно по \u003Ca href=\"http:\/\/clc.la\/ad9833_generator\" target=\"_blank\"\u003Eссылке\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EПри включении питания AD9833 настраивается на генерацию синусоидального сигнала частотой 100Гц, соответствующая информация отображается на дисплее. Вращая ручку энкодера можно изменять его частоту, а при нажатии вызывается меню. В меню доступны следующие опции:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EУстановка частоты (можно задать произвольное значение от 1 до 12,5МГц).\u003C\/li\u003E\u003Cli\u003EУстановка фазы (0 - 360°).\u003C\/li\u003E\u003Cli\u003EВыбор формы сигнала.\u003C\/li\u003E\u003Cli\u003EВыбор значения, на которое изменяется частота при вращении ручки энкодера.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EОстается только поместить все компоненты в подходящий корпус и получится законченное устройство. Результат работы в следующем ролике:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/5NsUpivK9OU\/0.jpg\" frameborder=\"0\" height=\"532\" src=\"https:\/\/www.youtube.com\/embed\/5NsUpivK9OU?feature=player_embedded\" width=\"640\"\u003E\u003C\/iframe\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/4256446582282147909\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/06\/ad9833.html#comment-form","title":"Комментарии: 42"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4256446582282147909"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/4256446582282147909"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/06\/ad9833.html","title":"Генератор сигналов на AD9833"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-tN6CdYwMg6s\/WyQMYhQrmVI\/AAAAAAAAAbA\/Mr2xHivY5dkQ95C8l6JXwj_KS1MYMSFDQCK4BGAYYCw\/s72-c\/AD9833.jpg","height":"72","width":"72"},"thr$total":{"$t":"42"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-6066046460405325723"},"published":{"$t":"2018-01-04T20:26:00.000+03:00"},"updated":{"$t":"2018-11-20T18:12:15.936+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"lcd"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"Текстовое меню на Ардуино"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-1v-V86ohqeA\/Wk4hPRnJAKI\/AAAAAAAAAWE\/fIZE0cFQckcu2qCf54HyPzQZHLXpcU08gCK4BGAYYCw\/s1600\/Arduino_text_menu.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Текстовое меню для Ардуино на ЖК дисплее и энкодере вращения\" border=\"0\" height=\"225\" src=\"https:\/\/3.bp.blogspot.com\/-1v-V86ohqeA\/Wk4hPRnJAKI\/AAAAAAAAAWE\/fIZE0cFQckcu2qCf54HyPzQZHLXpcU08gCK4BGAYYCw\/s320\/Arduino_text_menu.png\" title=\"\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EВ данной публикации я хочу поделиться опытом создания текстового меню на Ардуино. Я буду использовать жидкокристаллический I2C дисплей 20x4 и энкодер вращения KY-040 в качестве элемента управления. О подключении энкодера к Ардуино и подавлении дребезга контактов было написано уже достаточно, с подключением дисплея вопросов тоже\u0026nbsp;быть не должно. Поэтому сегодня я уделю внимание именно программной реализации.\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003EИтак, имеем:\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EКлон Arduino UNO;\u003C\/li\u003E\u003Cli\u003EI2C дисплей 20x4. Для работы с ним необходима библиотека\u0026nbsp;\u003Ca href=\"https:\/\/github.com\/fdebrabander\/Arduino-LiquidCrystal-I2C-library\" target=\"_blank\"\u003ELiquidCrystal_I2C\u003C\/a\u003E. Думаю, вместо него можно использовать дисплей без I2C интерфейса и библиотеку\u0026nbsp;LiquidCrystal. В этом случае правки скетча если и потребуются, то минимальные;\u003C\/li\u003E\u003Cli\u003EЭнкодер вращения с кнопкой. Я использую модуль KY-040 с микросхемой\u0026nbsp;\u003Ca href=\"http:\/\/tsibrov.blogspot.com\/2017\/11\/2-mc14490.html\" target=\"_blank\"\u003EMC14490 \u003C\/a\u003Eдля подавления дребезга. Но все же состояние энкодера буду опрашивать в цикле. Вариант с прерываниями оставлю на потом.\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003E\u003Cbr \/\u003EСоединяю все это на макетной плате по следующей схеме:\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-TYYTdldJ8rI\/Wk5gmx4cpvI\/AAAAAAAAAWU\/4AMQgLasANE4wTfnKyUeWOxw9CFNFSwiQCK4BGAYYCw\/s1600\/Arduino_encoder_menu.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Текстовое меню на Ардуино. Схема с энкодером вращения KY-040\" border=\"0\" height=\"254\" src=\"https:\/\/4.bp.blogspot.com\/-TYYTdldJ8rI\/Wk5gmx4cpvI\/AAAAAAAAAWU\/4AMQgLasANE4wTfnKyUeWOxw9CFNFSwiQCK4BGAYYCw\/s640\/Arduino_encoder_menu.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EМои основные требования к реализации:\u003C\/div\u003E\u003Cdiv\u003E\u003Ca href=\"https:\/\/draft.blogger.com\/blogger.g?blogID=794788004739538112\" imageanchor=\"1\" style=\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\"\u003E\u003Cimg border=\"0\" height=\"16\" id=\"2vxa1kzh4w9z\" src=\"data:image\/gif;base64,R0lGODlhEAAQAOUdAOvr69HR0cHBwby8vOzs7PHx8ff397W1tbOzs+Xl5ebm5vDw8PPz88PDw7e3t+3t7dvb2+7u7vX19eTk5OPj4+rq6tbW1unp6bu7u+fn5+jo6N\/f3+\/v7\/7+\/ra2ttXV1f39\/fz8\/Li4uMXFxfb29vLy8vr6+sLCwtPT0\/j4+PT09MDAwL+\/v7m5ubS0tM7OzsrKytra2tTU1MfHx+Li4tDQ0M\/Pz9nZ2b6+vgAAAAAAAAAAAAAAAAAAAAAAAAAAACH\/C05FVFNDQVBFMi4wAwEAAAAh+QQFMAA5ACwAAAAAEAAQAAAGg8CcMAcICAY5QsEwHBYPCMQhl6guGM5GNOqgVhMPbA6y5Xq\/kZwkN3Fsu98EJcdYKCo5i7kKwCorVRd4GAg5GVgAfBpxaRtsZwkaiwpfD0NxkYl8QngARF8AdhmeDwl4pngUCQsVHDl2m2iveDkXcZ6YTgS3kAS0RKWxVQ+\/TqydrE1BACH5BAkwADkALAAAAAAQABAAAAZ+wJwwJ1kQIgNBgDMcdh6KRILgQSAOn46TIJVSrdZGSMjpeqtgREAoYWi6BFF6xCAJS6ZyYhEIUwxNQgYkFxwBByh2gU0kKRVHi4sgOQuRTRJtJgwSBJElihwMQioqGmw5gEMLKk2AEkSBq4ElQmNNoYG2OVpDuE6Lrzmfp0NBACH5BAUwADkALAAAAAAQABAAAAaFwJwwJ1kQCDlCwTAcMh6KhDQnVSwYTkJ1un1gc5wtdxsh5iqaLbVKyVEWigq4ugZgTyiA9CK\/JHIZWCsICCxpVWV\/EzkHhAgth1UPQ4OOLXpScmebFA6ELHAZclBycXIULi8VZXCZawplFG05flWlakIVWravCgSaZ1CuksBDFQsAcsfFQQAh+QQJMAA5ACwAAAAAEAAQAAAGQcCccEgsGo\/IpHLJzDGaOcKCCUgkAEuFNaFRbq1dJCxX2WKRCFdMmJiiEQjRp1BJwu8y5R3RWNsRBx9+SSsxgzlBACH5BAkwADkALAAAAAAQABAAAAaJwJwwJ1kQCDlCwTAcMh6KhDQnVSwYTkJ1un1gc5wtdxsh5iqaLbVKyTEWigq4ugZglRXpRX5J5DJYAFIAaVVlfhNrURqFVQ9DYhqCgzkzCGdnVQBwGRU0LQiXCRUAORQJCwAcOTChoYplBXIKLq6vUXRCCQ22olUEcroJB66KD8FNCjUrlxWpTUEAIfkEBTAAOQAsAAAAABAAEAAABobAnDAnWRAIOULBMBwyHoqENCdVLBhOQnW6fWBznC13G8nZchXNllql5Bg2xA1cZQOwShwCMdDkLgk5GVgAUgAie3syVDkTbFIaiIkIJ0NiGnp7HiNonRVVAHEuFjlQFVQVAI0JCzYjrKCPZQWnf1unYkMVWrFbBLVoUIaPD8C6CwCnAMhNQQA7\" style=\"cursor: move;\" width=\"16\" \/\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EВозможность удобного описания меню;\u003C\/li\u003E\u003Cli\u003EВозможность построения многоуровнего меню - само собой;\u003C\/li\u003E\u003Cli\u003EПрокрутка длинных пунктов меню;\u003C\/li\u003E\u003Cli\u003EФишки вроде индикаторов, подсказывающих, что не все пункты уместились на экране или автоотключение подсветки\u0026nbsp;тоже будут кстати.\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003EХотелось бы, конечно, чтобы это было оформлено в виде библиотеки, но не получится: слишком много зависимостей от используемых компонентов. Если бы речь шла о ЖК шилде с кнопками, то это другое дело. А так придётся добавлять код для меню в основную программу. Сразу приведу пример использования меню, чтобы было проще объяснять его работу. Скачать скетч можно по \u003Ca href=\"http:\/\/clc.la\/arduino_text_menu\" target=\"_blank\"\u003Eссылке\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ ***** I2C дисплей *****\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-meta-string\"\u003E\u0026lt;LiquidCrystal_I2C.h\u0026gt;\u003C\/span\u003E \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ https:\/\/github.com\/fdebrabander\/Arduino-LiquidCrystal-I2C-library\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E cols 20\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E rows 4\u003C\/span\u003E\u003Cbr \/\u003ELiquidCrystal_I2C lcd(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x27\u003C\/span\u003E, cols, rows);\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E *Blank;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ ********** Параметры меню **********\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E ShowScrollBar 1     \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Показывать индикаторы прокрутки (0\/1)\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E ScrollLongCaptions 1\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Прокручивать длинные названия (0\/1)\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E ScrollDelay 800     \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Задержка при прокрутке текста\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E BacklightDelay 20000\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Длительность подсветки\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E ReturnFromMenu 0    \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Выходить из меню после выбора элемента(0\/1)\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eenum\u003C\/span\u003E eMenuKey {mkNull, mkBack, mkRoot, mkQuad, mkQuadSetA, mkQuadSetB, mkQuadSetC, mkQuadCalc, mkMulti, mkSettings, mkSetMotors,\u003Cbr \/\u003E               mkMotorsAuto, mkMotorsManual, mkSetSensors, mkSetUltrasonic, mkSetLightSensors, mkSetDefaults\u003Cbr \/\u003E              };\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ ********** Переменные для энкодера ***************\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_CLK 2 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Энкодер пин A\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_DT  4 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Энкодер пин B\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_Btn 3 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Кнопка\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E CurrentTime, PrevEncoderTime;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eenum\u003C\/span\u003E eEncoderState {eNone, eLeft, eRight, eButton};\u003Cbr \/\u003EeEncoderState EncoderState;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E EncoderA, EncoderB, EncoderAPrev, counter;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebool\u003C\/span\u003E ButtonPrev;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ ********** Прототипы функций ***************\u003C\/span\u003E\u003Cbr \/\u003EeEncoderState GetEncoderState();\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E LCDBacklight(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E v = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E);\u003Cbr \/\u003EeMenuKey DrawMenu(eMenuKey Key);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ ********** Обработчики для пунктов меню **********\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E InputValue(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E* Title, \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E DefaultValue, \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E MinValue, \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E MaxValue) {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Вспомогательная функция для ввода значения\u003C\/span\u003E\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(Title);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(DefaultValue);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edelay\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E100\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewhile\u003C\/span\u003E (\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E)\u003Cbr \/\u003E  {\u003Cbr \/\u003E    EncoderState = GetEncoderState();\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eswitch\u003C\/span\u003E (EncoderState) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eNone: {\u003Cbr \/\u003E          LCDBacklight();\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Econtinue\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eButton: {\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E DefaultValue;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eLeft: {\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (DefaultValue \u0026gt; MinValue) DefaultValue--;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eRight: {\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (DefaultValue \u0026lt; MaxValue) DefaultValue++;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(Blank);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(DefaultValue);\u003Cbr \/\u003E  }\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E A = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E, B = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E, C = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-3\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E Demo() {\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"It's just a demo\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewhile\u003C\/span\u003E (GetEncoderState() == eNone) LCDBacklight();\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E InputA() {\u003Cbr \/\u003E  A = InputValue(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input A\"\u003C\/span\u003E, A, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E10\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewhile\u003C\/span\u003E (A == \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Shouldn't be 0!\"\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input another value\"\u003C\/span\u003E);\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewhile\u003C\/span\u003E (GetEncoderState() == eNone) LCDBacklight();\u003Cbr \/\u003E    A = InputValue(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input A\"\u003C\/span\u003E, A, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E10\u003C\/span\u003E);\u003Cbr \/\u003E  }\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E InputB() {\u003Cbr \/\u003E  B = InputValue(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input B\"\u003C\/span\u003E, B, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E10\u003C\/span\u003E);\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E InputC() {\u003Cbr \/\u003E  C = InputValue(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Input C\"\u003C\/span\u003E, C, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E-10\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E10\u003C\/span\u003E);\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E Solve() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E D;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Efloat\u003C\/span\u003E X1, X2;\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(A);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"X^2\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (B \u0026gt;= \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"+\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(B);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"X\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (C \u0026gt;= \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"+\"\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(C);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"=0\"\u003C\/span\u003E);\u003Cbr \/\u003E  D = B * B - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E * A * C;\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (rows \u0026gt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E) {\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"D=\"\u003C\/span\u003E);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(D);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (D == \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E    X1 = -B \/ \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E * A;\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"X1=X2=\"\u003C\/span\u003E); lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(X1);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (D \u0026gt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E    X1 = (-B - \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esqrt\u003C\/span\u003E(B * B - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E * A * C)) \/ (\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E * A);\u003Cbr \/\u003E    X2 = (-B + \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esqrt\u003C\/span\u003E(B * B - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E4\u003C\/span\u003E * A * C)) \/ (\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E * A);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"X1=\"\u003C\/span\u003E);  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(X1);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\";X2=\"\u003C\/span\u003E); lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(X2);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Roots are complex\"\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewhile\u003C\/span\u003E (GetEncoderState() == eNone) LCDBacklight();\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ ******************** Меню ********************\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E ScrollUp[\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E8\u003C\/span\u003E]  = {\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x4\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0xa\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x11\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x1f\u003C\/span\u003E};\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E ScrollDown[\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E8\u003C\/span\u003E]  = {\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x0\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x1f\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x11\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0xa\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0x4\u003C\/span\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E ItemsOnPage = rows;    \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Максимальное количество элементов для отображения на экране\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E BacklightOffTime = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E ScrollTime = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E ScrollPos;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E CaptionMaxLength;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Estruct\u003C\/span\u003E sMenuItem {\u003Cbr \/\u003E  eMenuKey  Parent;       \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Ключ родителя\u003C\/span\u003E\u003Cbr \/\u003E  eMenuKey  Key;          \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Ключ\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E      *Caption;     \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Название пункта меню\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E      (*Handler)(); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Обработчик\u003C\/span\u003E\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003EsMenuItem Menu[] = {\u003Cbr \/\u003E  {mkNull, mkRoot, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Menu\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E    {mkRoot, mkQuad, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Quadratic Equation Calculator\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E      {mkQuad, mkQuadSetA, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Enter value A\"\u003C\/span\u003E, InputA},\u003Cbr \/\u003E      {mkQuad, mkQuadSetB, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Enter value B\"\u003C\/span\u003E, InputB},\u003Cbr \/\u003E      {mkQuad, mkQuadSetC, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Enter value C\"\u003C\/span\u003E, InputC},\u003Cbr \/\u003E      {mkQuad, mkQuadCalc, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Solve\"\u003C\/span\u003E, Solve},\u003Cbr \/\u003E      {mkQuad, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Back\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E    {mkRoot, mkMulti, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Multi-level menu example\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E      {mkMulti, mkSettings, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Settings\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E        {mkSettings, mkSetMotors, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Motors\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E          {mkSetMotors, mkMotorsAuto, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Auto calibration\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E          {mkSetMotors, mkMotorsManual, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Manual calibration\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E          {mkSetMotors, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Back\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E        {mkSettings, mkSetSensors, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Sensors\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E          {mkSetSensors, mkSetUltrasonic, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Ultrasonic\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E          {mkSetSensors, mkSetLightSensors, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Light sensors\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E          {mkSetSensors, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Back\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E        {mkSettings, mkSetDefaults, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Restore defaults\"\u003C\/span\u003E, Demo},\u003Cbr \/\u003E        {mkSettings, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Back\"\u003C\/span\u003E, NULL},\u003Cbr \/\u003E      {mkMulti, mkBack, \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Back\"\u003C\/span\u003E, NULL}\u003Cbr \/\u003E};\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Econst\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E MenuLength = \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(Menu) \/ \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(Menu[\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E]);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E LCDBacklight(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E v) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Управление подсветкой\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (v == \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Выключить подсветку\u003C\/span\u003E\u003Cbr \/\u003E    BacklightOffTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E();\u003Cbr \/\u003E    lcd.noBacklight();\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (v == \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/Включить подсветку\u003C\/span\u003E\u003Cbr \/\u003E    BacklightOffTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + BacklightDelay;\u003Cbr \/\u003E    lcd.backlight();\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Выключить если время вышло\u003C\/span\u003E\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (BacklightOffTime \u0026lt; \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E())\u003Cbr \/\u003E      lcd.noBacklight();\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E      lcd.backlight();\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003EeMenuKey DrawMenu(eMenuKey Key) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Отрисовка указанного уровня меню и навигация по нему\u003C\/span\u003E\u003Cbr \/\u003E  eMenuKey Result;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E k, l, Offset, CursorPos, y;\u003Cbr \/\u003E  sMenuItem **SubMenu = NULL;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebool\u003C\/span\u003E NeedRepaint;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003EString\u003C\/span\u003E S;\u003Cbr \/\u003E  l = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E  LCDBacklight(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Запишем в SubMenu элементы подменю\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; MenuLength; i++) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Menu[i].Key == Key) {\u003Cbr \/\u003E      k = i;\u003Cbr \/\u003E    }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Menu[i].Parent == Key) {\u003Cbr \/\u003E      l++;\u003Cbr \/\u003E      SubMenu = (sMenuItem**) realloc (SubMenu, l * \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E*));\u003Cbr \/\u003E      SubMenu[l - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E] = \u0026amp;Menu[i];\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (l == \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ l==0 - подменю нет\u003C\/span\u003E\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E ((ReturnFromMenu == \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) and (Menu[k].Handler != NULL)) (*Menu[k].Handler)(); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Вызываем обработчик если он есть\u003C\/span\u003E\u003Cbr \/\u003E    LCDBacklight(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E Key; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ и возвращаем индекс данного пункта меню\u003C\/span\u003E\u003Cbr \/\u003E  }\u003Cbr \/\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Иначе рисуем подменю\u003C\/span\u003E\u003Cbr \/\u003E  CursorPos = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E  Offset = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E  ScrollPos = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E  NeedRepaint = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Edo\u003C\/span\u003E {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (NeedRepaint) {\u003Cbr \/\u003E      NeedRepaint = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eclear\u003C\/span\u003E();\u003Cbr \/\u003E      y = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E i = Offset; i \u0026lt; \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emin\u003C\/span\u003E(l, Offset + ItemsOnPage); i++) {\u003Cbr \/\u003E        lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, y++);\u003Cbr \/\u003E        lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003EString\u003C\/span\u003E(SubMenu[i]-\u0026gt;Caption).substring(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, CaptionMaxLength));\u003Cbr \/\u003E      }\u003Cbr \/\u003E      lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E      lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"\u0026gt;\"\u003C\/span\u003E);\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (ShowScrollBar) {\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Offset \u0026gt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E          lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(cols - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E);\u003Cbr \/\u003E          lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E);\u003Cbr \/\u003E        }\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Offset + ItemsOnPage \u0026lt; l) {\u003Cbr \/\u003E          lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(cols - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, ItemsOnPage - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E        }\u003Cbr \/\u003E      }\u003Cbr \/\u003E    }\u003Cbr \/\u003E    EncoderState = GetEncoderState();\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eswitch\u003C\/span\u003E (EncoderState) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eLeft: {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Прокрутка меню вверх\u003C\/span\u003E\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          ScrollTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (CursorPos \u0026gt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) {  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Если есть возможность, поднимаем курсор\u003C\/span\u003E\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E ((ScrollLongCaptions) and (ScrollPos)) {\u003Cbr \/\u003E              \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Если предыдущий пункт меню прокручивался, то выводим его заново\u003C\/span\u003E\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(Blank);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003EString\u003C\/span\u003E(SubMenu[Offset + CursorPos]-\u0026gt;Caption).substring(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, CaptionMaxLength));\u003Cbr \/\u003E              ScrollPos = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E            }\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Стираем курсор на старом месте, рисуем в новом\u003C\/span\u003E\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, CursorPos--);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\" \"\u003C\/span\u003E);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"\u0026gt;\"\u003C\/span\u003E);\u003Cbr \/\u003E          }\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Offset \u0026gt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E) {\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/Курсор уже в крайнем положении. Если есть пункты выше, то перерисовываем меню\u003C\/span\u003E\u003Cbr \/\u003E            Offset--;\u003Cbr \/\u003E            NeedRepaint = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E          }\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eRight: {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Прокрутка меню вниз\u003C\/span\u003E\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          ScrollTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (CursorPos \u0026lt; \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emin\u003C\/span\u003E(l, ItemsOnPage) - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E) {\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Если есть возможность, то опускаем курсор\u003C\/span\u003E\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E ((ScrollLongCaptions) and (ScrollPos)) {\u003Cbr \/\u003E              \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Если предыдущий пункт меню прокручивался, то выводим его заново\u003C\/span\u003E\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(Blank);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E              lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003EString\u003C\/span\u003E(SubMenu[Offset + CursorPos]-\u0026gt;Caption).substring(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, CaptionMaxLength));\u003Cbr \/\u003E              ScrollPos = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E            }\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Стираем курсор на старом месте, рисуем в новом\u003C\/span\u003E\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, CursorPos++);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\" \"\u003C\/span\u003E);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E            lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(\u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"\u0026gt;\"\u003C\/span\u003E);\u003Cbr \/\u003E          }\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E {\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Курсор уже в крайнем положении. Если есть пункты ниже, то перерисовываем меню\u003C\/span\u003E\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (Offset + CursorPos + \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E \u0026lt; l) {\u003Cbr \/\u003E              Offset++;\u003Cbr \/\u003E              NeedRepaint = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E            }\u003Cbr \/\u003E          }\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eButton: {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Выбран элемент меню. Нажатие кнопки Назад обрабатываем отдельно\u003C\/span\u003E\u003Cbr \/\u003E          LCDBacklight(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E          ScrollTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (SubMenu[CursorPos + Offset]-\u0026gt;Key == mkBack) {\u003Cbr \/\u003E            free(SubMenu);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E mkBack;\u003Cbr \/\u003E          }\u003Cbr \/\u003E          Result = DrawMenu(SubMenu[CursorPos + Offset]-\u0026gt;Key);\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E ((Result != mkBack) and (ReturnFromMenu)) {\u003Cbr \/\u003E            free(SubMenu);\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E Result;\u003Cbr \/\u003E          }\u003Cbr \/\u003E          NeedRepaint = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E        }\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eNone: {\u003Cbr \/\u003E          \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (ScrollLongCaptions) {\u003Cbr \/\u003E            \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ При бездействии прокручиваем длинные названия\u003C\/span\u003E\u003Cbr \/\u003E            S = SubMenu[CursorPos + Offset]-\u0026gt;Caption;\u003Cbr \/\u003E            \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (S.length() \u0026gt; CaptionMaxLength)\u003Cbr \/\u003E            {\u003Cbr \/\u003E              \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (ScrollTime \u0026lt; \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E())\u003Cbr \/\u003E              {\u003Cbr \/\u003E                ScrollPos++;\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (ScrollPos == S.length() - CaptionMaxLength)\u003Cbr \/\u003E                  ScrollTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Небольшая задержка когда вывели все название\u003C\/span\u003E\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (ScrollPos \u0026gt; S.length() - CaptionMaxLength)\u003Cbr \/\u003E                {\u003Cbr \/\u003E                  ScrollPos = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E                  ScrollTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + ScrollDelay * \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Задержка перед началом прокрутки\u003C\/span\u003E\u003Cbr \/\u003E                }\u003Cbr \/\u003E                \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E\u003Cbr \/\u003E                  ScrollTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E() + ScrollDelay;\u003Cbr \/\u003E                lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E                lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(Blank);\u003Cbr \/\u003E                lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EsetCursor\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, CursorPos);\u003Cbr \/\u003E                lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprint\u003C\/span\u003E(S.substring(ScrollPos, ScrollPos + CaptionMaxLength));\u003Cbr \/\u003E              }\u003Cbr \/\u003E            }\u003Cbr \/\u003E          }\u003Cbr \/\u003E          LCDBacklight();\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E  } \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewhile\u003C\/span\u003E (\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/****************************************\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_CLK, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_DT,  \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_Btn, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT_PULLUP\u003C\/span\u003E);\u003Cbr \/\u003E  lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E();\u003Cbr \/\u003E  lcd.backlight();\u003Cbr \/\u003E  CaptionMaxLength = cols - \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E  Blank = (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E*) malloc(cols * \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Esizeof\u003C\/span\u003E(\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Echar\u003C\/span\u003E));\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Efor\u003C\/span\u003E (\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebyte\u003C\/span\u003E i = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E; i \u0026lt; CaptionMaxLength; i++)\u003Cbr \/\u003E    Blank[i] = \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E' '\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (ShowScrollBar) {\u003Cbr \/\u003E    CaptionMaxLength--;\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EcreateChar\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E, ScrollUp);\u003Cbr \/\u003E    lcd.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EcreateChar\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E, ScrollDown);\u003Cbr \/\u003E  }\u003Cbr \/\u003E  Blank[CaptionMaxLength] = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  DrawMenu(mkRoot);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ ******************** Энкодер с кнопкой ********************\u003C\/span\u003E\u003Cbr \/\u003EeEncoderState GetEncoderState() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Считываем состояние энкодера\u003C\/span\u003E\u003Cbr \/\u003E  eEncoderState Result = eNone;\u003Cbr \/\u003E  CurrentTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (CurrentTime \u0026gt;= (PrevEncoderTime + \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E)) {\u003Cbr \/\u003E    PrevEncoderTime = CurrentTime;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_Btn) == \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003ELOW\u003C\/span\u003E ) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (ButtonPrev) {\u003Cbr \/\u003E        Result = eButton; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Нажата кнопка\u003C\/span\u003E\u003Cbr \/\u003E        ButtonPrev = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E {\u003Cbr \/\u003E      ButtonPrev = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E      EncoderA = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_DT);\u003Cbr \/\u003E      EncoderB = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_CLK);\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E ((!EncoderA) \u0026amp;\u0026amp; (EncoderAPrev)) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Сигнал A изменился с 1 на 0\u003C\/span\u003E\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (EncoderB) Result = eRight;     \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ B=1 =\u0026gt; энкодер вращается по часовой\u003C\/span\u003E\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E          Result = eLeft;      \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ B=0 =\u0026gt; энкодер вращается против часовой\u003C\/span\u003E\u003Cbr \/\u003E      }\u003Cbr \/\u003E      EncoderAPrev = EncoderA; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ запомним текущее состояние\u003C\/span\u003E\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E Result;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EМеню - это массив элементов\u0026nbsp;sMenuItem, каждый из которых имеет свой уникальный ключ и ключ родителя для создания иерархии, а также название и ссылку на функцию-обработчик. В качестве ключа я использую перечисления, т.к. они удобнее чем просто числовые значения. Ключ\u0026nbsp;mkBack имеет особое назначение: он нужен для пунктов меню \"Back\" - возврат на вышестоящий уровень меню.\u003Cbr \/\u003E\u003Cbr \/\u003EРеакция на выбор определенного пункта меню может быть построена двумя способами:\u003Cbr \/\u003E\u003Col style=\"text-align: left;\"\u003E\u003Cli\u003EЗадание функции обработчика. В этом случае параметр ReturnFromMenu должен быть установлен в 0. Если выбранный элемент не содержит дочерних элементов (т.е. это не подменю) и если для него задана функция-обработчик, то она будет вызвана. После выполнения функции управление будет передано обратно в меню.\u003C\/li\u003E\u003Cli\u003EАнализ значения, возвращаемого\u0026nbsp;функцией\u0026nbsp;DrawMenu. Для этого параметр ReturnFromMenu должен быть установлен в 1. Анализ возвращаемого значения (ключа выбранного элемента меню) легко осуществить при помощи оператора switch.\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003EВ данном примере я использую обработчики. Кроме упомянутого параметра ReturnFromMenu в скетче есть и другие: ShowScrollBar, ScrollLongCaptions, ScrollDelay, BacklightDelay. Их назначение понятно из названия.\u003C\/div\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003EФункция DrawMenu принимает ключ подменю, которое требуется отрисовать. Затем в цикле анализируется состояние энкодера. При его вращении осуществляется перемещение курсора и перерисовка меню. При нажатии вызывается функция DrawMenu для выбранного элемента. В остальное время выполняется прокрутка длинных названий.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003EМеню верхнего уровня в данном скетче содержит 2 элемента: первый для решения квадратных уравнений, второй просто как пример построения многоуровнего меню. Параметр\u0026nbsp;ReturnFromMenu установлен в 0 и при выборе пунктов меню вызываются соответствующие обработчики. Так осуществляется задание коэффициентов квадратного уравнения и нахождение его корней (функции InputA, InputB, InputC, Solve). В обработчиках следует помнить об управлении подсветкой дисплея, для этого регулярно вызывается функция\u0026nbsp;LCDBacklight. Функция loop содержит единственный вызов\u0026nbsp;DrawMenu. Вся дальнейшая работа будет заключаться в отрисовке меню и выполнении функций-обработчиков.\u003Cbr \/\u003E\u003Cbr \/\u003EВот в общем-то и всё, остальное должно быть понятно из примера. Ну и в заключение дочитавшим до конца предлагаю видео работы этого меню:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/NQlAMYiuV1o\/0.jpg\" frameborder=\"0\" height=\"532\" src=\"https:\/\/www.youtube.com\/embed\/NQlAMYiuV1o?feature=player_embedded\" width=\"640\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/6066046460405325723\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/01\/arduino-text-menu.html#comment-form","title":"Комментарии: 33"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/6066046460405325723"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/6066046460405325723"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2018\/01\/arduino-text-menu.html","title":"Текстовое меню на Ардуино"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-1v-V86ohqeA\/Wk4hPRnJAKI\/AAAAAAAAAWE\/fIZE0cFQckcu2qCf54HyPzQZHLXpcU08gCK4BGAYYCw\/s72-c\/Arduino_text_menu.png","height":"72","width":"72"},"thr$total":{"$t":"33"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-262095219248519107"},"published":{"$t":"2017-10-10T12:23:00.001+03:00"},"updated":{"$t":"2019-01-06T17:23:34.404+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"прерывания"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"Работа с энкодером вращения с использованием прерываний"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-41C5U31YyWk\/WdpzdDDcfAI\/AAAAAAAAAQU\/_ZoQZEti17w_38DYqsqq_Bl-_FuQSZJsQCK4BGAYYCw\/s1600\/rotary_encoder.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Энкодер вращения KY-040\" border=\"0\" height=\"180\" src=\"https:\/\/1.bp.blogspot.com\/-41C5U31YyWk\/WdpzdDDcfAI\/AAAAAAAAAQU\/_ZoQZEti17w_38DYqsqq_Bl-_FuQSZJsQCK4BGAYYCw\/s320\/rotary_encoder.png\" title=\"\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EТеперь, когда мы научились избавляться от дребезга контактов (смотрите \u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2017\/09\/1.html\" target=\"_blank\"\u003Eпредыдущую статью\u003C\/a\u003E), можно попробовать другой способ работы с энкодером: с использованием прерываний. Я буду экспериментировать все с тем же модулем KY-040, Arduino Uno и инвертирующим триггером Шмитта (SN74HC14N).\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cdiv style=\"text-align: left;\"\u003EДля начала пара слов о прерываниях в Ардуино. Углубляться не станем, т.к. данная тема заслуживает отдельной публикации и знакомиться с ней в рамках подключения энкодера, пожалуй, не лучший вариант. Поэтому пока ограничимся определением и небольшим описанием внешних прерываний Ардуино.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: left;\"\u003EПрерывание - это сигнал от аппаратного обеспечения, сообщающий о наступлении некоторого приоритетного события, требующего немедленного внимания. В ответ на запрос прерывания микроконтроллер приостанавливает выполнение текущего кода и вызывает специальную функцию - обработчик прерывания\u0026nbsp;(Interrupt Service Routine, ISR). Данная функция реагирует на событие, выполняя определенные действия, после чего возвращает управление в прерванный код.\u003C\/div\u003E\u003Cbr \/\u003EДля работы с энкодером мы будем использовать \u003Cb\u003Eвнешние прерывания\u003C\/b\u003E Ардуино. Внешними они называются потому, что их инициирует внешнее по отношению к микроконтроллеру устройство. Плата Arduino Uno (а также большинство других плат из семейства Ардуино), к которой я собираюсь подключать энкодер, может обрабатывать до двух внешних прерываний на цифровых выводах 2 и 3. Для этого необходимо задать функции обработки прерываний при помощи функции \u003Cb\u003Eattachinterrupt(interrupt, function, mode)\u003C\/b\u003E. Параметры данной функции:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003Einterrupt - номер прерывания. Может быть указан явно (0 для цифрового вывода 2 и 1 для вывода 3 в случае использования Arduno Uno), но лучше воспользоваться функцией digitalPinToInterrupt(pin), которая по номеру вывода вернет номер привязанного к нему внешнего прерывания;\u003C\/li\u003E\u003Cli\u003Efunction - \u0026nbsp;функция обработки прерывания - функция, которая будет вызываться каждый раз при возникновении прерывания. Должна быть без параметров и не возвращать никаких значений;\u003C\/li\u003E\u003Cli\u003Emode - задает режим обработки прерывания. Может принимать одно из следующих значений:\u003C\/li\u003E\u003Cul\u003E\u003Cli\u003ELOW - вызывает прерывание, когда на входе сигнал низкого уровня;\u003C\/li\u003E\u003Cli\u003ECHANGE - вызывает прерывание при изменении уровня сигнала на входе;\u003C\/li\u003E\u003Cli\u003ERISING - прерывание вызывается при изменении сигнала от низкого уровня к высокому;\u003C\/li\u003E\u003Cli\u003EFALLING - прерывание вызывается при изменении сигнала от высокого уровня к низкому.\u003C\/li\u003E\u003C\/ul\u003E\u003C\/ul\u003E\u003Cbr \/\u003EДля работы с прерываниями подключим модуль энкодера KY-040 к Ардуино по нижеприведенной схеме.\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-h2QwJ3lPpD4\/WdexXfMpgMI\/AAAAAAAAAQE\/8biGyij4f9QSG90z_r09fxQkH1PyKA9NQCK4BGAYYCw\/s1600\/Encoder_SN74HC14N_Arduino.png\" imageanchor=\"1\"\u003E\u003Cimg alt=\"Подключение энкодера вращения к Ардуино через триггер Шмитта\" border=\"0\" height=\"272\" src=\"https:\/\/4.bp.blogspot.com\/-h2QwJ3lPpD4\/WdexXfMpgMI\/AAAAAAAAAQE\/8biGyij4f9QSG90z_r09fxQkH1PyKA9NQCK4BGAYYCw\/s640\/Encoder_SN74HC14N_Arduino.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003EВсе 3 вывода энкодера заводим на микросхему SN74HC14N для подавления дребезга контактов. Необходимо также учесть, что в модуле нет подтягивающего резистора для сигнала SW, поэтому он добавлен в схему.\u003Cbr \/\u003E\u003Cbr \/\u003EЕсли раньше для того чтобы поймать момент изменения сигнала энкодера приходилось постоянно опрашивать цифровой вход и сравнивать его значение с предыдущим, то сейчас достаточно назначить обработчик прерывания функцией attachinterrupt. Так как в нашем распоряжении только 2 внешних прерывания, то одно из них будем использовать для отслеживания изменения сигнала CLK, второе для кнопки. Загрузите нижеприведенный код в Ардуино и проверьте его работу в мониторе порта: при вращении энкодера значение счетчика будет изменяться и выводиться в Serial, а при нажатии на кнопку счетчик сбрасывается.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_CLK 2 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Энкодер пин A\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_DT  4 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Энкодер пин B\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_Btn 3 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Кнопка\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evolatile\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E Position = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E oldPosition = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E EncoderRotate() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_CLK) == \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_DT)) {\u003Cbr \/\u003E    Position++;\u003Cbr \/\u003E  } \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E {\u003Cbr \/\u003E    Position--;\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E EncoderClick() {\u003Cbr \/\u003E  Position = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_CLK, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_DT, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_Btn, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EattachInterrupt\u003C\/span\u003E(digitalPinToInterrupt(pin_CLK), EncoderRotate, RISING);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EattachInterrupt\u003C\/span\u003E(digitalPinToInterrupt(pin_Btn), EncoderClick, RISING);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E (\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E9600\u003C\/span\u003E);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (oldPosition != Position)\u003Cbr \/\u003E  {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(Position);\u003Cbr \/\u003E    oldPosition = Position;\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cbr \/\u003EПри изменении сигнала CLK от низкого уровня к высокому вызывается функция EncoderRotate, которая проверяет сигнал DT и изменяет значение счетчика. Если в функции attachInterrupt установить режим обработки прерывания CHANGE, то функция EncoderRotate будет вызываться как по заднему фронту CLK, так и по переднему. Таким образом можно увеличить разрешение энкодера в 2 раза. А если мы задействуем внешнее прерывание и для сигнала DT (вместо кнопки) и напишем для него аналогичный обработчик, то 4 фронта дадут нам 4х кратное увеличение разрешения энкодера. Пример такой программы, а также другую полезную информацию по энкодерам вращения можно найти по ссылке\u0026nbsp;\u003Ca href=\"https:\/\/playground.arduino.cc\/Main\/RotaryEncoders\" target=\"_blank\"\u003Ehttps:\/\/playground.arduino.cc\/Main\/RotaryEncoders\u003C\/a\u003E. Там же представлены несколько библиотек, одну и которых я предлагаю рассмотреть - это библиотека \u003Cb\u003EEncoder\u003C\/b\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EБиблиотека для работы с энкодерами вращения Encoder (домашняя страница проекта: \u003Ca href=\"https:\/\/www.pjrc.com\/teensy\/td_libs_Encoder.html\" target=\"_blank\"\u003Ehttps:\/\/www.pjrc.com\/teensy\/td_libs_Encoder.html\u003C\/a\u003E) использует очень эффективные обработчики прерываний, написанные на ассемблере и предусматривает три варианта подключения энкодера к Ардуино, определяющих эффективность работы:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003EНаилучшая эффективность,\u0026nbsp;достигается при подключении обоих сигналов энкодера к выводам, поддерживающим прерывания;\u003C\/li\u003E\u003Cli\u003EСредняя эффективность, при подключении одного сигнала энкодера к поддерживающему внешнее прерывание выводу. Второй сигнал подключается к любому цифровому входу;\u003C\/li\u003E\u003Cli\u003EНизкая эффективность будет получена при подключении энкодера к выводам Ардуино, не поддерживающим прерывания. При этом для отслеживания изменения сигналов используется метод, который мы рассматривали ранее при опросе энкодера в цикле программы.\u003C\/li\u003E\u003C\/ul\u003E\u003Cbr \/\u003EДавайте установим данную библиотеку и, не изменяя схему подключения энкодера, загрузим в Ардуино следующий код.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Einclude\u003C\/span\u003E \u003Cspan class=\"hljs-string\" style=\"color: rgb(0 , 92 , 95);\"\u003E\"Encoder.h\"\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_CLK 2 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Энкодер пин A\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_DT  4 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Энкодер пин B\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_Btn 3 \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Кнопка\u003C\/span\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E oldPosition = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003EEncoder myEnc(pin_CLK, pin_DT);\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E EncoderClick() {\u003Cbr \/\u003E  myEnc.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ewrite\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ При нажатии кнопки сбрасываем позицию\u003C\/span\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_Btn, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Назначаем обработчик прерывания для кнопки\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EattachInterrupt\u003C\/span\u003E(digitalPinToInterrupt(pin_Btn), EncoderClick, RISING);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E (\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E9600\u003C\/span\u003E);\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E newPosition = myEnc.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eread\u003C\/span\u003E() \u0026gt;\u0026gt; \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E2\u003C\/span\u003E;\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (newPosition != oldPosition) {\u003Cbr \/\u003E    oldPosition = newPosition;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(newPosition);\u003Cbr \/\u003E  }\u003Cbr \/\u003E}\u003C\/pre\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cbr \/\u003EПроверьте результат в мониторе порта, он должен быть такой же, как и для предыдущего примера. Выше я описывал способ увеличения разрешения энкодера, он как раз используется в данной библиотеке. Поэтому считанное значение я делю в программе на 4 (сдвигаю вправо на 2 разряда). В остальном, полагаю, приведенный пример не должен вызывать вопросов.\u003Cbr \/\u003E\u003Cbr \/\u003EВот так просто можно задействовать прерывания для работы с энкодером и избавиться от необходимости опрашивать его в основном цикле. Чуть позже я поделюсь опытом создания пользовательского меню на Ардуино с использованием энкодера вращения.\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/262095219248519107\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/10\/blog-post.html#comment-form","title":"Комментарии: 23"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/262095219248519107"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/262095219248519107"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/10\/blog-post.html","title":"Работа с энкодером вращения с использованием прерываний"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/1.bp.blogspot.com\/-41C5U31YyWk\/WdpzdDDcfAI\/AAAAAAAAAQU\/_ZoQZEti17w_38DYqsqq_Bl-_FuQSZJsQCK4BGAYYCw\/s72-c\/rotary_encoder.png","height":"72","width":"72"},"thr$total":{"$t":"23"}},{"id":{"$t":"tag:blogger.com,1999:blog-794788004739538112.post-6323295639702794739"},"published":{"$t":"2017-09-09T21:15:00.000+03:00"},"updated":{"$t":"2018-09-04T10:29:25.085+03:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ардуино"},{"scheme":"http://www.blogger.com/atom/ns#","term":"подключение"},{"scheme":"http://www.blogger.com/atom/ns#","term":"энкодер вращения"}],"title":{"type":"text","$t":"Энкодер вращения"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003EСегодня я хочу рассказать об энкодерах вращения, какие они бывают, как работают и где применяются. И для примера рассмотрим подключение модуля\u0026nbsp;KY-040 к Ардуино. А пока начнем с теории.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-lh6YnVkOWcg\/WY8p4jzQA4I\/AAAAAAAAAH8\/sKCtic_sBT4X2TRhiZVq7FPXhvTKRBfzwCLcBGAs\/s1600\/sku_420429_1.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" data-original-height=\"700\" data-original-width=\"700\" height=\"320\" src=\"https:\/\/3.bp.blogspot.com\/-lh6YnVkOWcg\/WY8p4jzQA4I\/AAAAAAAAAH8\/sKCtic_sBT4X2TRhiZVq7FPXhvTKRBfzwCLcBGAs\/s320\/sku_420429_1.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003EЧто такое энкодер вращения\u003C\/h2\u003E\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003EЭнкодер вращения - это электромеханическое устройство,\u0026nbsp;предназначенное для преобразования угла поворота вращающегося объекта в электрический сигнал (цифровой или аналоговый). Такие устройства находят широкое применение в промышленности, в роботостроении, автомобилестроении, компьютерной технике и т.п.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003EЭнкодеры вращения можно разделить по принципу действия на оптические, магнитные, емкостные, индуктивные, резистивные и механические; по способу выдачи информации на абсолютные и инкрементные.\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003C\/h2\u003E\u003Ch2 style=\"text-align: left;\"\u003EПринцип работы\u003C\/h2\u003E\u003Cdiv\u003EРаботу энкодера вращения проще всего объяснить на примере оптического энкодера. Представьте себе вал электродвигателя, на котором закреплен диск с прорезями. С одной стороны диска расположен светоизлучающий элемент, луч света проходит через прорези и регистрируется фотоэлементом, расположенным с другой стороны (устройство, состоящее из спаренных светоизлучающего и принимающего элементов, называется фотопрерыватель). При вращении диска луч прерывается, в результате чего на выходе фотоэлемента мы получим меандр - сигнал прямоугольный формы. И частота меандра будет пропорциональна скорости вращения диска. Таким образом можно судить о скорости вращения вала электродвигателя.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-YVeWusIgyzc\/WZfxgkt_UjI\/AAAAAAAAAJM\/eyE-7i9CkE4LbUHEsNNjnI_cPZEcSnxFACLcBGAs\/s1600\/simple_encoder.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Энкодер вращения. Принцип действия\" border=\"0\" data-original-height=\"501\" data-original-width=\"1600\" height=\"200\" src=\"https:\/\/2.bp.blogspot.com\/-YVeWusIgyzc\/WZfxgkt_UjI\/AAAAAAAAAJM\/eyE-7i9CkE4LbUHEsNNjnI_cPZEcSnxFACLcBGAs\/s640\/simple_encoder.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EОднако работающее по описанному принципу устройство не способно определить направление вращения. Чтобы исправить это добавим в него второй фотопрерыватель и расположим с некоторым смещением относительно первого. В зависимости от направления вращения диска сигнал на выходе первого фотопрерывателя будет меняться раньше или позже чем сигнал на выходе второго. А значит, анализируя как меняются эти два сигнала, мы можем определить направление вращения.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-QGUKsG35f0o\/WZf8KKrAmLI\/AAAAAAAAAJc\/WLFeNf5b6SosTgMXqji0n6p0_xewnhRXwCLcBGAs\/s1600\/quadrature_encoder.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Квардратурный энкодер вращения\" border=\"0\" data-original-height=\"501\" data-original-width=\"1600\" height=\"200\" src=\"https:\/\/2.bp.blogspot.com\/-QGUKsG35f0o\/WZf8KKrAmLI\/AAAAAAAAAJc\/WLFeNf5b6SosTgMXqji0n6p0_xewnhRXwCLcBGAs\/s640\/quadrature_encoder.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003EНа практике смещения сигналов добиваются не за счет особого расположения фотопрерывателей, а путем добавления второй полосы с прорезями или прозрачными и непрозрачными участками. Участки на двух полосах расположены так чтобы обеспечить сдвиг сигнала по фазе на 90 градусов, поэтому работающие по такому принципу энкодеры называются квадратурными.\u003Cbr \/\u003E\u003Cbr \/\u003EНа этом же принципе основаны \u003Cb\u003Eмеханические энкодеры\u003C\/b\u003E, только вместо фотопрерывателей в них используются скользящие контакты. Основным недостатком таких энкодеров является дребезг контактов, который может приводить к неправильному подсчету сигналов. Кроме того скользящие контакты подвержены износу. Все это ограничивает область применения механических энкодеров.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EМагнитные энкодеры\u003C\/b\u003E строятся на базе магниточувствительных элементов, таких как датчики Холла или магниторезистивные датчики. Они просты в изготовлении, лишены недостатков контактных энкодеров и мало чувствительны к внешним факторам. Но все же проигрывают в точности емкостным, индуктивным и оптическим энкодерам.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EЕмкостные энкодеры\u003C\/b\u003E имеют в своем составе диск асиметричной формы, который при вращении изменяет емкость между двумя электродами. Это изменение регистрируется и используется для определения углового положения. Емкостные энкодеры так же просты в изготовлении и надежны в эксплуатации, из внешних факторов чувствительны только к изменению влажности.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EИндуктивные энкодеры\u003C\/b\u003E\u0026nbsp;работают в магнитном поле и используют явление электромагнитной индукции. Благодаря устойчивости к внешним факторам подходят для использования в неблагоприятной среде, когда другие энкодеры могут оказаться ненадежными.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EРезистивный энкодер\u003C\/b\u003E\u0026nbsp;работает по тому же принципу что и обычный потенциометр: электрический сигнал на его выходе пропорционален положению ручки энкодера. Собственно и сами потенциометры могут использоваться для отслеживания углового положения, например, их можно увидеть в сервомашинках:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-8y4-YF_c3ps\/WZHXbRHw0sI\/AAAAAAAAAIM\/XTPTjr-klW41t2sLU06hBCXkztRqItgmQCLcBGAs\/s1600\/servo_inside.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Из чего состоит сервомашинка. двигатель, потенциометр, управляющая электроника, шестерни\" border=\"0\" data-original-height=\"270\" data-original-width=\"432\" height=\"250\" src=\"https:\/\/3.bp.blogspot.com\/-8y4-YF_c3ps\/WZHXbRHw0sI\/AAAAAAAAAIM\/XTPTjr-klW41t2sLU06hBCXkztRqItgmQCLcBGAs\/s400\/servo_inside.jpg\" title=\"\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003C\/h2\u003E\u003Ch2 style=\"text-align: left;\"\u003EАбсолютные и инкрементные энкодеры\u003C\/h2\u003E\u003Cdiv\u003EПриведенный выше пример оптического энкодера вращения генерирует на выходе импульсы, по которым принимающее устройство определяет текущее положение вала путём подсчёта числа импульсов счётчиком. Такие энкодеры называют \u003Cb\u003Eинкрементными или накапливающими\u003C\/b\u003E. Сразу же после включения инкрементного энкодера положение вала неизвестно. Для привязки системы отсчёта к началу отсчёта инкрементные энкодеры могут иметь нулевые (референтные) метки, через которые нужно пройти после включения оборудования. К недостаткам также относится то, что невозможно определить пропуск импульсов от энкодера по каким-либо причинам. Это приводит к накоплению ошибки определения угла поворота вала до тех пор, пока не будет пройдена нуль-метка.\u003Cbr \/\u003E\u003Cbr \/\u003EЭтих недостатков лишены \u003Cb\u003Eабсолютные энкодеры\u003C\/b\u003E. Они выдают на выходе сигналы, которые можно однозначно интерпретировать как угол поворота. Как и в приведенной выше схеме инкрементного энкодера, абсолютный оптический энкодер содержит светоизлучающий и принимающий элементы. Существенное отличие в используемом диске: он имеет прозрачные и непрозрачные участки на нескольких радиусах. Световые лучи, проходя через диск, засвечивают те или иные участки фоточувствительного элемента, который в свою очередь формирует на выходе соответствующие сигналы, уникальные для каждого положения диска.\u003Cbr \/\u003E\u003Cbr \/\u003EДля кодирования углового положения абсолютные энкодеры используют диски с двоичными кодами и кодами Грея. Двоичный код удобен тем, что не требует дополнительных преобразований. В целом же использование кода Грея предпочтительнее т.к. он более устойчив к ошибкам чтения за счет того, что каждое следующее значение отличается от предыдущего только в одном разряде. При этом вероятность считывания совершенно неверного значения полностью исключена. Более подробно о коде Грея можно почитать в \u003Ca href=\"https:\/\/ru.wikipedia.org\/wiki\/%D0%9A%D0%BE%D0%B4_%D0%93%D1%80%D0%B5%D1%8F\"\u003EВикипедии\u003C\/a\u003E. На следующем изображении приведены примеры дисков для инкрементного квадратурного и абсолютного энкодеров.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-rUf739Es3Lk\/WaLkvKnPypI\/AAAAAAAAAJ4\/z48tF9pQtsMikJfMO_zxqu_ELyiAvGWwwCLcBGAs\/s1600\/Disks.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Диски квадратурного энкодера, двоичного и энкодера на кодах Грея\" border=\"0\" data-original-height=\"596\" data-original-width=\"1600\" height=\"238\" src=\"https:\/\/1.bp.blogspot.com\/-rUf739Es3Lk\/WaLkvKnPypI\/AAAAAAAAAJ4\/z48tF9pQtsMikJfMO_zxqu_ELyiAvGWwwCLcBGAs\/s640\/Disks.png\" title=\"\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cbr \/\u003EЭтот пример наглядно иллюстрирует принцип кодирования углового положения на диске абсолютного энкодера. Для каждого положения вала формируется свой уникальный код. В данном случае для кодирования 16 положений потребовалось 4 концентрических дорожки. При увеличении разрешения абсолютного энкодера возрастает число дорожек и разрядность считываемого значения. Поэтому наряду с параллельным интерфейсом в абсолютных энкодерах широко применяются последовательные интерфейсы, такие как Profibus, CANopen, SSI, BiSS, ISI, Profinet, PWM, Ethernet Powerlink, EtherNet TCP\/IP, Modbus, DeviceNet, EtherCAT. Также существуют энкодеры, возвращающие значение углового положения в виде аналогового сигнала.\u003Cbr \/\u003E\u003Cbr \/\u003EАбсолютные энкодеры могут быть \u003Cb\u003Eоднооборотными\u003C\/b\u003E и \u003Cb\u003Eмногооборотными\u003C\/b\u003E. Если однооборотные способны только выдавать значение угла поворота, то многооборотные позволяют также определять количество оборотов. Это возможно за счет наличия в их составе редуктора и дополнительного диска, который изменяет свое положение при каждом полном обороте вала энкодера.\u003Cbr \/\u003E\u003Ch2 style=\"text-align: left;\"\u003E\u003C\/h2\u003E\u003Ch2 style=\"text-align: left;\"\u003EПодключение инкрементного энкодера к Ардуино\u003C\/h2\u003EТеперь после небольшой теоретической части можно перейти к практике. Попробуем подключить к Ардуино инкрементный энкодер вращения. У меня в распоряжении имеется модуль KY-040 (вроде того, что изображен на фото в начале этой статьи), который представляет из себя энкодер с разрешением 20 шагов на оборот со встроенной кнопкой, распаянный на плату с подтягивающими резисторами. Это идеальный компонент для организации меню: вращение вала энкодера можно интерпретировать как перемещение курсора по элементам меню, а нажатие кнопки - выбор конкретного элемента. Позже я приведу \u003Ca href=\"https:\/\/tsibrov.blogspot.com\/2018\/01\/arduino-text-menu.html\" target=\"_blank\"\u003Eпример создания такого меню\u003C\/a\u003E, а сейчас разберемся с подключением энкодера к Ардуино.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-3AEchMplZUM\/WbAlWVz-NqI\/AAAAAAAAAKI\/ehO0d7sr_PwdzvVMdttKQeY1REAcNCSwgCLcBGAs\/s1600\/KY040.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Энкодер KY-040 распиновка\" border=\"0\" data-original-height=\"270\" data-original-width=\"564\" height=\"191\" src=\"https:\/\/1.bp.blogspot.com\/-3AEchMplZUM\/WbAlWVz-NqI\/AAAAAAAAAKI\/ehO0d7sr_PwdzvVMdttKQeY1REAcNCSwgCLcBGAs\/s400\/KY040.png\" title=\"\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EМодуль имеет 5 контактов, это:\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003Cli\u003ECLK и DT - выводы энкодера, они подтянуты к\u0026nbsp;линии питания резисторами 10кОм;\u003C\/li\u003E\u003Cli\u003ESW - вывод кнопки, при нажатии вывод замыкается на землю;\u003C\/li\u003E\u003Cli\u003E+\u0026nbsp;и GND - линии питания и земли. Данный энкодер является механическим, питание для него не требуется, линии нужны для цепи с подтягивающими резисторами.\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003EПодключим энкодер к Ардуино по следующей схеме:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-70ChkpuXx0Y\/WbPUimRhVhI\/AAAAAAAAAKY\/p2USW7cZkIESaJIRKlihGV-H6C6u4H5XwCLcBGAs\/s1600\/Rotary_Encoder_Arduino.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"Подключение энкодера вращения к Ардуино\" border=\"0\" data-original-height=\"740\" data-original-width=\"1220\" height=\"241\" src=\"https:\/\/3.bp.blogspot.com\/-70ChkpuXx0Y\/WbPUimRhVhI\/AAAAAAAAAKY\/p2USW7cZkIESaJIRKlihGV-H6C6u4H5XwCLcBGAs\/s400\/Rotary_Encoder_Arduino.png\" title=\"\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cul style=\"text-align: left;\"\u003E\u003C\/ul\u003EСуществует 2 способа работы с энкодером: с использованием прерываний и путем опроса выводов энкодера в теле программы. Первый способ более правильный, но для него нужен четкий сигнал без помех. Поскольку данный энкодер является механическим, сигнал на его выходах искажен дребезгом контактов и не может быть использован для генерации прерываний (по крайней мере без дополнительных средств для восстановления сигнала, о чем будет рассказано позже). Поэтому сейчас реализуем второй способ и бороться с дребезгом будем программно. Загрузим в Ардуино нижеприведенный код, \u003Ca href=\"http:\/\/clc.la\/rotaryencoder_simple\" target=\"_blank\"\u003Eссылка\u003C\/a\u003E для скачивания.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_CLK 2\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_DT  3\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-meta\" style=\"color: rgb(67 , 79 , 84);\"\u003E#\u003Cspan class=\"hljs-meta-keyword\" style=\"color: rgb(114 , 142 , 0);\"\u003Edefine\u003C\/span\u003E pin_Btn 4\u003C\/span\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eunsigned\u003C\/span\u003E \u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Elong\u003C\/span\u003E CurrentTime, LastTime;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eenum\u003C\/span\u003E eEncoderState {eNone, eLeft, eRight, eButton};\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Eint\u003C\/span\u003E EncoderA, EncoderB, EncoderAPrev, counter;\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Ebool\u003C\/span\u003E ButtonPrev;\u003Cbr \/\u003E\u003Cbr \/\u003EeEncoderState GetEncoderState() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Считываем состояние энкодера\u003C\/span\u003E\u003Cbr \/\u003E  eEncoderState Result = eNone;\u003Cbr \/\u003E  CurrentTime = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Emillis\u003C\/span\u003E();\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (CurrentTime \u0026gt;= (LastTime + \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E5\u003C\/span\u003E)) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Считываем не чаще 1 раза в 5 мс для уменьшения ложных срабатываний\u003C\/span\u003E\u003Cbr \/\u003E    LastTime = CurrentTime;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_Btn) == \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003ELOW\u003C\/span\u003E ) {\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (ButtonPrev) {\u003Cbr \/\u003E        Result = eButton; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Нажата кнопка\u003C\/span\u003E\u003Cbr \/\u003E        ButtonPrev = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E {\u003Cbr \/\u003E      ButtonPrev = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E1\u003C\/span\u003E;\u003Cbr \/\u003E      EncoderA = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_DT);\u003Cbr \/\u003E      EncoderB = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_CLK);\u003Cbr \/\u003E      \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E ((!EncoderA) \u0026amp;\u0026amp; (EncoderAPrev)) { \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Сигнал A изменился с 1 на 0\u003C\/span\u003E\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eif\u003C\/span\u003E (EncoderB) Result = eRight;     \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ B=1 =\u0026gt; энкодер вращается по часовой\u003C\/span\u003E\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eelse\u003C\/span\u003E          Result = eLeft;      \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ B=0 =\u0026gt; энкодер вращается против часовой\u003C\/span\u003E\u003Cbr \/\u003E      }\u003Cbr \/\u003E      EncoderAPrev = EncoderA; \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ запомним текущее состояние сигнала A\u003C\/span\u003E\u003Cbr \/\u003E    }\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E Result;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Esetup\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_DT,  \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_CLK, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT\u003C\/span\u003E);\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EpinMode\u003C\/span\u003E(pin_Btn, \u003Cspan class=\"hljs-literal\" style=\"color: rgb(211 , 84 , 0);\"\u003EINPUT_PULLUP\u003C\/span\u003E); \u003Cspan class=\"hljs-comment\" style=\"color: rgba(149 , 165 , 166 , 0.8);\"\u003E\/\/ Кнопка не подтянута к +5 поэтому задействуем внутренний pull-up резистор\u003C\/span\u003E\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebegin\u003C\/span\u003E(\u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E115200\u003C\/span\u003E);\u003Cbr \/\u003E  counter = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cspan class=\"hljs-keyword\" style=\"color: rgb(0 , 151 , 157);\"\u003Evoid\u003C\/span\u003E \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eloop\u003C\/span\u003E() {\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eswitch\u003C\/span\u003E (GetEncoderState()) {\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eNone: \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ereturn\u003C\/span\u003E;\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eLeft: {\u003Cbr \/\u003E        counter--;\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eRight: {\u003Cbr \/\u003E        counter++;\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E    \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ecase\u003C\/span\u003E eButton: {\u003Cbr \/\u003E        counter = \u003Cspan class=\"hljs-number\" style=\"color: rgb(138 , 123 , 82);\"\u003E0\u003C\/span\u003E;\u003Cbr \/\u003E        \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Ebreak\u003C\/span\u003E;\u003Cbr \/\u003E      }\u003Cbr \/\u003E  }\u003Cbr \/\u003E  \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003ESerial\u003C\/span\u003E.\u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003Eprintln\u003C\/span\u003E(counter);\u003Cbr \/\u003E}\u003C\/pre\u003EДля удобства работы код для опроса энкодера помещен в отдельную функцию. В таком виде я использую ее в большинстве проектов с энкодером, достаточно скопировать функцию с переменными в новый скетч и в цикле опрашивать состояние энкодера. Подавление дребезга реализовано за счет добавления в функцию условия, которое обеспечивает опрос энкодера не чаще 1 раза в 5мс.\u003Cbr \/\u003E\u003Cbr \/\u003EПодобный код можно увидеть на различных сайтах, и везде говорится что вывод CLK - это сигнал A, а вывод DT - это B. Почему-то на моих энкодерах это не так и сигналы поменяны местами. Этот момент учтен в функции при чтении значений с контактов. И если вдруг у Вас окажется, что при вращении вала энкодера по часовой стрелке значение переменной counter будет уменьшаться, то замените в функции строки чтения значений с выводов pin_CLK и pin_DT на следующие:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"hljs\" style=\"background: rgb(255 , 255 , 255); color: rgb(67 , 79 , 84); display: block; overflow-x: auto; padding: 0.5em;\"\u003EEncoderA = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_CLK);\u003Cbr \/\u003EEncoderB = \u003Cspan class=\"hljs-built_in\" style=\"color: rgb(211 , 84 , 0);\"\u003EdigitalRead\u003C\/span\u003E(pin_DT);\u003C\/pre\u003E\u003Cbr \/\u003EИтак, прошиваем код в Ардуино, запускаем монитор порта, устанавливаем скорость соединения 115200 \u0026nbsp;и проверяем работу энкодера. Должно получиться что-то вроде этого:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-nWKFntIRjLg\/WbQqnb0dA9I\/AAAAAAAAAKo\/i5Wwwk5jZzgCYjMpJWG_h3dEl-Em0W0lwCLcBGAs\/s1600\/result.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" data-original-height=\"472\" data-original-width=\"765\" height=\"296\" src=\"https:\/\/3.bp.blogspot.com\/-nWKFntIRjLg\/WbQqnb0dA9I\/AAAAAAAAAKo\/i5Wwwk5jZzgCYjMpJWG_h3dEl-Em0W0lwCLcBGAs\/s400\/result.png\" width=\"480\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EНо такой результат будет при не слишком быстром вращении, все-таки работаем с дешевым энкодером. В любом случае этого вполне достаточно для многих проектов на Ардуино. В \u003Ca href=\"http:\/\/tsibrov.blogspot.com\/2017\/10\/blog-post.html\"\u003Eследующий раз\u003C\/a\u003E попробуем избавиться от контактного дребезга и задействовать прерывания для подсчета импульсов энкодера.\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"https:\/\/tsibrov.blogspot.com\/feeds\/6323295639702794739\/comments\/default","title":"Комментарии к сообщению"},{"rel":"replies","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/09\/blog-post.html#comment-form","title":"Комментарии: 4"},{"rel":"edit","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/6323295639702794739"},{"rel":"self","type":"application/atom+xml","href":"https:\/\/www.blogger.com\/feeds\/794788004739538112\/posts\/default\/6323295639702794739"},{"rel":"alternate","type":"text/html","href":"https:\/\/tsibrov.blogspot.com\/2017\/09\/blog-post.html","title":"Энкодер вращения"}],"author":[{"name":{"$t":"Владимир"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/07943437233560370294"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"https:\/\/img1.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-lh6YnVkOWcg\/WY8p4jzQA4I\/AAAAAAAAAH8\/sKCtic_sBT4X2TRhiZVq7FPXhvTKRBfzwCLcBGAs\/s72-c\/sku_420429_1.jpg","height":"72","width":"72"},"thr$total":{"$t":"4"}}]}});